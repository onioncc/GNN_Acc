

================================================================
== Vitis HLS Report for 'top'
================================================================
* Date:           Mon Apr 12 12:24:40 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        project_1
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      659|      659|  6.590 us|  6.590 us|  660|  660|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_74_1_VITIS_LOOP_75_2  |       41|       41|         3|          1|          1|    40|       yes|
        |- loop_d_out                       |      520|      520|        26|          -|          -|    20|        no|
        |- VITIS_LOOP_85_3_VITIS_LOOP_86_4  |       81|       81|         3|          1|          1|    80|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 23
* Pipeline : 2
  Pipeline-0 : II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1 : II = 1, D = 3, States = { 16 17 18 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 12 10 
10 --> 11 
11 --> 9 
12 --> 13 
13 --> 14 15 
14 --> 13 
15 --> 16 
16 --> 19 17 
17 --> 18 
18 --> 16 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 24 [1/1] (1.00ns)   --->   "%data_out_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %data_out"   --->   Operation 24 'read' 'data_out_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 25 [1/1] (1.00ns)   --->   "%data_in_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %data_in"   --->   Operation 25 'read' 'data_in_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 26 [1/1] (1.00ns)   --->   "%weights_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %weights"   --->   Operation 26 'read' 'weights_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%data_in_local_0 = alloca i64 1" [test.cpp:67]   --->   Operation 27 'alloca' 'data_in_local_0' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%data_in_local_1 = alloca i64 1" [test.cpp:67]   --->   Operation 28 'alloca' 'data_in_local_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%data_in_local_2 = alloca i64 1" [test.cpp:67]   --->   Operation 29 'alloca' 'data_in_local_2' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%data_in_local_3 = alloca i64 1" [test.cpp:67]   --->   Operation 30 'alloca' 'data_in_local_3' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%data_out_local_0 = alloca i64 1"   --->   Operation 31 'alloca' 'data_out_local_0' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%data_out_local_1 = alloca i64 1"   --->   Operation 32 'alloca' 'data_out_local_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%data_out_local_2 = alloca i64 1"   --->   Operation 33 'alloca' 'data_out_local_2' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%data_out_local_3 = alloca i64 1"   --->   Operation 34 'alloca' 'data_out_local_3' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %data_in_read, i32 2, i32 63" [test.cpp:74]   --->   Operation 35 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln74 = sext i62 %trunc_ln" [test.cpp:74]   --->   Operation 36 'sext' 'sext_ln74' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln74" [test.cpp:74]   --->   Operation 37 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 38 [7/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 40" [test.cpp:74]   --->   Operation 38 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 39 [6/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 40" [test.cpp:74]   --->   Operation 39 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 40 [5/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 40" [test.cpp:74]   --->   Operation 40 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 41 [4/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 40" [test.cpp:74]   --->   Operation 41 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 42 [3/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 40" [test.cpp:74]   --->   Operation 42 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 43 [2/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 40" [test.cpp:74]   --->   Operation 43 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 44 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_14"   --->   Operation 44 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 45 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_3, i32 0, i32 0, void @empty, i32 0, i32 200, void @empty_12, void @empty_11, void @empty, i32 16, i32 16, i32 16, i32 16, void @empty, void @empty"   --->   Operation 45 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 46 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 46 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 47 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %weights, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty_5, void @empty_13, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty_8"   --->   Operation 47 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 48 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %weights, void @empty_1, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty_8"   --->   Operation 48 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 49 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %data_in, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty_5, void @empty_2, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty_8"   --->   Operation 49 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %data_in, void @empty_1, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty_8"   --->   Operation 50 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %data_out, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty_5, void @empty_9, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty_8"   --->   Operation 51 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %data_out, void @empty_1, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty_8"   --->   Operation 52 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 53 [1/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 40" [test.cpp:74]   --->   Operation 53 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 54 [1/1] (0.48ns)   --->   "%br_ln74 = br void" [test.cpp:74]   --->   Operation 54 'br' 'br_ln74' <Predicate = true> <Delay = 0.48>

State 9 <SV = 8> <Delay = 2.20>
ST_9 : Operation 55 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i6 0, void, i6 %add_ln74, void %.split74" [test.cpp:74]   --->   Operation 55 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 56 [1/1] (0.00ns)   --->   "%i = phi i3 0, void, i3 %select_ln74_1, void %.split74" [test.cpp:74]   --->   Operation 56 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 57 [1/1] (0.00ns)   --->   "%j = phi i4 0, void, i4 %add_ln75, void %.split74" [test.cpp:75]   --->   Operation 57 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 58 [1/1] (0.88ns)   --->   "%add_ln74 = add i6 %indvar_flatten, i6 1" [test.cpp:74]   --->   Operation 58 'add' 'add_ln74' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 59 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 59 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 60 [1/1] (0.87ns)   --->   "%icmp_ln74 = icmp_eq  i6 %indvar_flatten, i6 40" [test.cpp:74]   --->   Operation 60 'icmp' 'icmp_ln74' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln74 = br i1 %icmp_ln74, void %.split9, void %.preheader.preheader" [test.cpp:74]   --->   Operation 61 'br' 'br_ln74' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 62 [1/1] (0.88ns)   --->   "%icmp_ln75 = icmp_eq  i4 %j, i4 10" [test.cpp:75]   --->   Operation 62 'icmp' 'icmp_ln75' <Predicate = (!icmp_ln74)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 63 [1/1] (0.45ns)   --->   "%select_ln74 = select i1 %icmp_ln75, i4 0, i4 %j" [test.cpp:74]   --->   Operation 63 'select' 'select_ln74' <Predicate = (!icmp_ln74)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 64 [1/1] (0.74ns)   --->   "%add_ln74_1 = add i3 %i, i3 1" [test.cpp:74]   --->   Operation 64 'add' 'add_ln74_1' <Predicate = (!icmp_ln74)> <Delay = 0.74> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 65 [1/1] (0.27ns)   --->   "%select_ln74_1 = select i1 %icmp_ln75, i3 %add_ln74_1, i3 %i" [test.cpp:74]   --->   Operation 65 'select' 'select_ln74_1' <Predicate = (!icmp_ln74)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 66 [1/1] (0.00ns)   --->   "%trunc_ln74 = trunc i3 %select_ln74_1" [test.cpp:74]   --->   Operation 66 'trunc' 'trunc_ln74' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_9 : Operation 67 [1/1] (0.88ns)   --->   "%switch_ln76 = switch i2 %trunc_ln74, void %branch3, i2 0, void %branch0, i2 1, void %branch1, i2 2, void %branch2" [test.cpp:76]   --->   Operation 67 'switch' 'switch_ln76' <Predicate = (!icmp_ln74)> <Delay = 0.88>
ST_9 : Operation 68 [1/1] (0.86ns)   --->   "%add_ln75 = add i4 %select_ln74, i4 1" [test.cpp:75]   --->   Operation 68 'add' 'add_ln75' <Predicate = (!icmp_ln74)> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 69 'br' 'br_ln0' <Predicate = (!icmp_ln74)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 70 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [test.cpp:76]   --->   Operation 70 'read' 'gmem_addr_read' <Predicate = (!icmp_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 0.79>
ST_11 : Operation 71 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_74_1_VITIS_LOOP_75_2_str"   --->   Operation 71 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 72 [1/1] (0.00ns)   --->   "%empty_24 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 40, i64 40, i64 40"   --->   Operation 72 'speclooptripcount' 'empty_24' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 73 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 73 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 74 [1/1] (0.00ns)   --->   "%j_cast = zext i4 %select_ln74" [test.cpp:74]   --->   Operation 74 'zext' 'j_cast' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 75 [1/1] (0.00ns)   --->   "%specloopname_ln75 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [test.cpp:75]   --->   Operation 75 'specloopname' 'specloopname_ln75' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 76 [1/1] (0.00ns)   --->   "%data_in_local_0_addr = getelementptr i32 %data_in_local_0, i64 0, i64 %j_cast" [test.cpp:76]   --->   Operation 76 'getelementptr' 'data_in_local_0_addr' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 77 [1/1] (0.00ns)   --->   "%data_in_local_1_addr = getelementptr i32 %data_in_local_1, i64 0, i64 %j_cast" [test.cpp:76]   --->   Operation 77 'getelementptr' 'data_in_local_1_addr' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 78 [1/1] (0.00ns)   --->   "%data_in_local_2_addr = getelementptr i32 %data_in_local_2, i64 0, i64 %j_cast" [test.cpp:76]   --->   Operation 78 'getelementptr' 'data_in_local_2_addr' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 79 [1/1] (0.00ns)   --->   "%data_in_local_3_addr = getelementptr i32 %data_in_local_3, i64 0, i64 %j_cast" [test.cpp:76]   --->   Operation 79 'getelementptr' 'data_in_local_3_addr' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_11 : Operation 80 [1/1] (0.79ns)   --->   "%store_ln76 = store i32 %gmem_addr_read, i4 %data_in_local_2_addr" [test.cpp:76]   --->   Operation 80 'store' 'store_ln76' <Predicate = (trunc_ln74 == 2)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_11 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln76 = br void %.split74" [test.cpp:76]   --->   Operation 81 'br' 'br_ln76' <Predicate = (trunc_ln74 == 2)> <Delay = 0.00>
ST_11 : Operation 82 [1/1] (0.79ns)   --->   "%store_ln76 = store i32 %gmem_addr_read, i4 %data_in_local_1_addr" [test.cpp:76]   --->   Operation 82 'store' 'store_ln76' <Predicate = (trunc_ln74 == 1)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_11 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln76 = br void %.split74" [test.cpp:76]   --->   Operation 83 'br' 'br_ln76' <Predicate = (trunc_ln74 == 1)> <Delay = 0.00>
ST_11 : Operation 84 [1/1] (0.79ns)   --->   "%store_ln76 = store i32 %gmem_addr_read, i4 %data_in_local_0_addr" [test.cpp:76]   --->   Operation 84 'store' 'store_ln76' <Predicate = (trunc_ln74 == 0)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_11 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln76 = br void %.split74" [test.cpp:76]   --->   Operation 85 'br' 'br_ln76' <Predicate = (trunc_ln74 == 0)> <Delay = 0.00>
ST_11 : Operation 86 [1/1] (0.79ns)   --->   "%store_ln76 = store i32 %gmem_addr_read, i4 %data_in_local_3_addr" [test.cpp:76]   --->   Operation 86 'store' 'store_ln76' <Predicate = (trunc_ln74 == 3)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_11 : Operation 87 [1/1] (0.00ns)   --->   "%br_ln76 = br void %.split74" [test.cpp:76]   --->   Operation 87 'br' 'br_ln76' <Predicate = (trunc_ln74 == 3)> <Delay = 0.00>

State 12 <SV = 9> <Delay = 0.48>
ST_12 : Operation 88 [1/1] (0.48ns)   --->   "%br_ln80 = br void %.preheader" [test.cpp:80]   --->   Operation 88 'br' 'br_ln80' <Predicate = true> <Delay = 0.48>

State 13 <SV = 10> <Delay = 3.28>
ST_13 : Operation 89 [1/1] (0.00ns)   --->   "%d_out = phi i5 %d_out_1, void %.split5, i5 0, void %.preheader.preheader"   --->   Operation 89 'phi' 'd_out' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 90 [1/1] (0.87ns)   --->   "%d_out_1 = add i5 %d_out, i5 1" [test.cpp:80]   --->   Operation 90 'add' 'd_out_1' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 91 [1/1] (0.87ns)   --->   "%icmp_ln80 = icmp_eq  i5 %d_out, i5 20" [test.cpp:80]   --->   Operation 91 'icmp' 'icmp_ln80' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 92 [1/1] (0.00ns)   --->   "%empty_25 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 20, i64 20, i64 20"   --->   Operation 92 'speclooptripcount' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln80 = br i1 %icmp_ln80, void %.split5, void" [test.cpp:80]   --->   Operation 93 'br' 'br_ln80' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 94 [2/2] (2.40ns)   --->   "%call_ln81 = call void @PE_dataflow, i32 %gmem, i64 %weights_read, i32 %data_in_local_0, i32 %data_in_local_1, i32 %data_in_local_2, i32 %data_in_local_3, i32 %data_out_local_0, i32 %data_out_local_1, i32 %data_out_local_2, i32 %data_out_local_3, i5 %d_out" [test.cpp:81]   --->   Operation 94 'call' 'call_ln81' <Predicate = (!icmp_ln80)> <Delay = 2.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %data_out_read, i32 2, i32 63" [test.cpp:85]   --->   Operation 95 'partselect' 'trunc_ln1' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_13 : Operation 96 [1/1] (0.00ns)   --->   "%sext_ln85 = sext i62 %trunc_ln1" [test.cpp:85]   --->   Operation 96 'sext' 'sext_ln85' <Predicate = (icmp_ln80)> <Delay = 0.00>
ST_13 : Operation 97 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %sext_ln85" [test.cpp:85]   --->   Operation 97 'getelementptr' 'gmem_addr_1' <Predicate = (icmp_ln80)> <Delay = 0.00>

State 14 <SV = 11> <Delay = 0.00>
ST_14 : Operation 98 [1/1] (0.00ns)   --->   "%specloopname_ln80 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [test.cpp:80]   --->   Operation 98 'specloopname' 'specloopname_ln80' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 99 [1/2] (0.00ns)   --->   "%call_ln81 = call void @PE_dataflow, i32 %gmem, i64 %weights_read, i32 %data_in_local_0, i32 %data_in_local_1, i32 %data_in_local_2, i32 %data_in_local_3, i32 %data_out_local_0, i32 %data_out_local_1, i32 %data_out_local_2, i32 %data_out_local_3, i5 %d_out" [test.cpp:81]   --->   Operation 99 'call' 'call_ln81' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 100 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 100 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 15 <SV = 11> <Delay = 7.30>
ST_15 : Operation 101 [1/1] (7.30ns)   --->   "%empty_26 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %gmem_addr_1, i32 80" [test.cpp:85]   --->   Operation 101 'writereq' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 102 [1/1] (0.48ns)   --->   "%br_ln85 = br void" [test.cpp:85]   --->   Operation 102 'br' 'br_ln85' <Predicate = true> <Delay = 0.48>

State 16 <SV = 12> <Delay = 2.23>
ST_16 : Operation 103 [1/1] (0.00ns)   --->   "%indvar_flatten7 = phi i7 0, void, i7 %add_ln85, void %.split3" [test.cpp:85]   --->   Operation 103 'phi' 'indvar_flatten7' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 104 [1/1] (0.00ns)   --->   "%i_1 = phi i3 0, void, i3 %select_ln85_1, void %.split3" [test.cpp:85]   --->   Operation 104 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 105 [1/1] (0.00ns)   --->   "%j_1 = phi i5 0, void, i5 %add_ln86, void %.split3" [test.cpp:86]   --->   Operation 105 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 106 [1/1] (0.89ns)   --->   "%add_ln85 = add i7 %indvar_flatten7, i7 1" [test.cpp:85]   --->   Operation 106 'add' 'add_ln85' <Predicate = true> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 107 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 107 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 108 [1/1] (0.86ns)   --->   "%icmp_ln85 = icmp_eq  i7 %indvar_flatten7, i7 80" [test.cpp:85]   --->   Operation 108 'icmp' 'icmp_ln85' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 109 [1/1] (0.00ns)   --->   "%br_ln85 = br i1 %icmp_ln85, void %.split3, void" [test.cpp:85]   --->   Operation 109 'br' 'br_ln85' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 110 [1/1] (0.87ns)   --->   "%icmp_ln86 = icmp_eq  i5 %j_1, i5 20" [test.cpp:86]   --->   Operation 110 'icmp' 'icmp_ln86' <Predicate = (!icmp_ln85)> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 111 [1/1] (0.48ns)   --->   "%select_ln85 = select i1 %icmp_ln86, i5 0, i5 %j_1" [test.cpp:85]   --->   Operation 111 'select' 'select_ln85' <Predicate = (!icmp_ln85)> <Delay = 0.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 112 [1/1] (0.74ns)   --->   "%add_ln85_1 = add i3 %i_1, i3 1" [test.cpp:85]   --->   Operation 112 'add' 'add_ln85_1' <Predicate = (!icmp_ln85)> <Delay = 0.74> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 113 [1/1] (0.27ns)   --->   "%select_ln85_1 = select i1 %icmp_ln86, i3 %add_ln85_1, i3 %i_1" [test.cpp:85]   --->   Operation 113 'select' 'select_ln85_1' <Predicate = (!icmp_ln85)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln85 = trunc i3 %select_ln85_1" [test.cpp:85]   --->   Operation 114 'trunc' 'trunc_ln85' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_16 : Operation 115 [1/1] (0.00ns)   --->   "%j_1_cast = zext i5 %select_ln85" [test.cpp:85]   --->   Operation 115 'zext' 'j_1_cast' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_16 : Operation 116 [1/1] (0.00ns)   --->   "%data_out_local_0_addr = getelementptr i32 %data_out_local_0, i64 0, i64 %j_1_cast" [test.cpp:87]   --->   Operation 116 'getelementptr' 'data_out_local_0_addr' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_16 : Operation 117 [2/2] (0.79ns)   --->   "%data_out_local_0_load = load i5 %data_out_local_0_addr" [test.cpp:87]   --->   Operation 117 'load' 'data_out_local_0_load' <Predicate = (!icmp_ln85)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_16 : Operation 118 [1/1] (0.00ns)   --->   "%data_out_local_1_addr = getelementptr i32 %data_out_local_1, i64 0, i64 %j_1_cast" [test.cpp:87]   --->   Operation 118 'getelementptr' 'data_out_local_1_addr' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_16 : Operation 119 [2/2] (0.79ns)   --->   "%data_out_local_1_load = load i5 %data_out_local_1_addr" [test.cpp:87]   --->   Operation 119 'load' 'data_out_local_1_load' <Predicate = (!icmp_ln85)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_16 : Operation 120 [1/1] (0.00ns)   --->   "%data_out_local_2_addr = getelementptr i32 %data_out_local_2, i64 0, i64 %j_1_cast" [test.cpp:87]   --->   Operation 120 'getelementptr' 'data_out_local_2_addr' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_16 : Operation 121 [2/2] (0.79ns)   --->   "%data_out_local_2_load = load i5 %data_out_local_2_addr" [test.cpp:87]   --->   Operation 121 'load' 'data_out_local_2_load' <Predicate = (!icmp_ln85)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_16 : Operation 122 [1/1] (0.00ns)   --->   "%data_out_local_3_addr = getelementptr i32 %data_out_local_3, i64 0, i64 %j_1_cast" [test.cpp:87]   --->   Operation 122 'getelementptr' 'data_out_local_3_addr' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_16 : Operation 123 [2/2] (0.79ns)   --->   "%data_out_local_3_load = load i5 %data_out_local_3_addr" [test.cpp:87]   --->   Operation 123 'load' 'data_out_local_3_load' <Predicate = (!icmp_ln85)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_16 : Operation 124 [1/1] (0.87ns)   --->   "%add_ln86 = add i5 %select_ln85, i5 1" [test.cpp:86]   --->   Operation 124 'add' 'add_ln86' <Predicate = (!icmp_ln85)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 13> <Delay = 1.39>
ST_17 : Operation 125 [1/2] (0.79ns)   --->   "%data_out_local_0_load = load i5 %data_out_local_0_addr" [test.cpp:87]   --->   Operation 125 'load' 'data_out_local_0_load' <Predicate = (!icmp_ln85)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_17 : Operation 126 [1/2] (0.79ns)   --->   "%data_out_local_1_load = load i5 %data_out_local_1_addr" [test.cpp:87]   --->   Operation 126 'load' 'data_out_local_1_load' <Predicate = (!icmp_ln85)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_17 : Operation 127 [1/2] (0.79ns)   --->   "%data_out_local_2_load = load i5 %data_out_local_2_addr" [test.cpp:87]   --->   Operation 127 'load' 'data_out_local_2_load' <Predicate = (!icmp_ln85)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_17 : Operation 128 [1/2] (0.79ns)   --->   "%data_out_local_3_load = load i5 %data_out_local_3_addr" [test.cpp:87]   --->   Operation 128 'load' 'data_out_local_3_load' <Predicate = (!icmp_ln85)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_17 : Operation 129 [1/1] (0.60ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %data_out_local_0_load, i32 %data_out_local_1_load, i32 %data_out_local_2_load, i32 %data_out_local_3_load, i2 %trunc_ln85" [test.cpp:87]   --->   Operation 129 'mux' 'tmp' <Predicate = (!icmp_ln85)> <Delay = 0.60> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 14> <Delay = 7.30>
ST_18 : Operation 130 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_85_3_VITIS_LOOP_86_4_str"   --->   Operation 130 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_18 : Operation 131 [1/1] (0.00ns)   --->   "%empty_27 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 80, i64 80, i64 80"   --->   Operation 131 'speclooptripcount' 'empty_27' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_18 : Operation 132 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 132 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_18 : Operation 133 [1/1] (0.00ns)   --->   "%specloopname_ln86 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [test.cpp:86]   --->   Operation 133 'specloopname' 'specloopname_ln86' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_18 : Operation 134 [1/1] (7.30ns)   --->   "%write_ln87 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr_1, i32 %tmp, i4 15" [test.cpp:87]   --->   Operation 134 'write' 'write_ln87' <Predicate = (!icmp_ln85)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 135 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 135 'br' 'br_ln0' <Predicate = (!icmp_ln85)> <Delay = 0.00>

State 19 <SV = 13> <Delay = 7.30>
ST_19 : Operation 136 [5/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1" [test.cpp:90]   --->   Operation 136 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 14> <Delay = 7.30>
ST_20 : Operation 137 [4/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1" [test.cpp:90]   --->   Operation 137 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 15> <Delay = 7.30>
ST_21 : Operation 138 [3/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1" [test.cpp:90]   --->   Operation 138 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 16> <Delay = 7.30>
ST_22 : Operation 139 [2/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1" [test.cpp:90]   --->   Operation 139 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 17> <Delay = 7.30>
ST_23 : Operation 140 [1/5] (7.30ns)   --->   "%empty_28 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr_1" [test.cpp:90]   --->   Operation 140 'writeresp' 'empty_28' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 141 [1/1] (0.00ns)   --->   "%ret_ln90 = ret" [test.cpp:90]   --->   Operation 141 'ret' 'ret_ln90' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'data_out' [14]  (1 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (test.cpp:74) [28]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (test.cpp:74) [28]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (test.cpp:74) [28]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (test.cpp:74) [28]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (test.cpp:74) [28]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (test.cpp:74) [28]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (test.cpp:74) [28]  (7.3 ns)

 <State 9>: 2.2ns
The critical path consists of the following:
	'phi' operation ('j', test.cpp:75) with incoming values : ('add_ln75', test.cpp:75) [33]  (0 ns)
	'icmp' operation ('icmp_ln75', test.cpp:75) [41]  (0.884 ns)
	'select' operation ('select_ln74', test.cpp:74) [42]  (0.45 ns)
	'add' operation ('add_ln75', test.cpp:75) [68]  (0.868 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus read on port 'gmem' (test.cpp:76) [49]  (7.3 ns)

 <State 11>: 0.79ns
The critical path consists of the following:
	'getelementptr' operation ('data_in_local_2_addr', test.cpp:76) [52]  (0 ns)
	'store' operation ('store_ln76', test.cpp:76) of variable 'gmem_addr_read', test.cpp:76 on array 'data_in_local[2]', test.cpp:67 [56]  (0.79 ns)

 <State 12>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('d_out') with incoming values : ('d_out', test.cpp:80) [73]  (0.489 ns)

 <State 13>: 3.28ns
The critical path consists of the following:
	'phi' operation ('d_out') with incoming values : ('d_out', test.cpp:80) [73]  (0 ns)
	'call' operation ('call_ln81', test.cpp:81) to 'PE_dataflow' [80]  (2.4 ns)
	blocking operation 0.877 ns on control path)

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (test.cpp:85) [86]  (7.3 ns)

 <State 16>: 2.23ns
The critical path consists of the following:
	'phi' operation ('j', test.cpp:86) with incoming values : ('add_ln86', test.cpp:86) [91]  (0 ns)
	'icmp' operation ('icmp_ln86', test.cpp:86) [99]  (0.877 ns)
	'select' operation ('select_ln85', test.cpp:85) [100]  (0.48 ns)
	'add' operation ('add_ln86', test.cpp:86) [117]  (0.878 ns)

 <State 17>: 1.4ns
The critical path consists of the following:
	'load' operation ('data_out_local_0_load', test.cpp:87) on array 'data_out_local_0' [108]  (0.79 ns)
	'mux' operation ('tmp', test.cpp:87) [115]  (0.605 ns)

 <State 18>: 7.3ns
The critical path consists of the following:
	bus write on port 'gmem' (test.cpp:87) [116]  (7.3 ns)

 <State 19>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (test.cpp:90) [120]  (7.3 ns)

 <State 20>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (test.cpp:90) [120]  (7.3 ns)

 <State 21>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (test.cpp:90) [120]  (7.3 ns)

 <State 22>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (test.cpp:90) [120]  (7.3 ns)

 <State 23>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (test.cpp:90) [120]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
