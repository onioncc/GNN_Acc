// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_PE_dataflow (
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        weights,
        data_in_local_0_address0,
        data_in_local_0_ce0,
        data_in_local_0_d0,
        data_in_local_0_q0,
        data_in_local_0_we0,
        data_in_local_0_address1,
        data_in_local_0_ce1,
        data_in_local_0_d1,
        data_in_local_0_q1,
        data_in_local_0_we1,
        data_in_local_1_address0,
        data_in_local_1_ce0,
        data_in_local_1_d0,
        data_in_local_1_q0,
        data_in_local_1_we0,
        data_in_local_1_address1,
        data_in_local_1_ce1,
        data_in_local_1_d1,
        data_in_local_1_q1,
        data_in_local_1_we1,
        data_in_local_2_address0,
        data_in_local_2_ce0,
        data_in_local_2_d0,
        data_in_local_2_q0,
        data_in_local_2_we0,
        data_in_local_2_address1,
        data_in_local_2_ce1,
        data_in_local_2_d1,
        data_in_local_2_q1,
        data_in_local_2_we1,
        data_in_local_3_address0,
        data_in_local_3_ce0,
        data_in_local_3_d0,
        data_in_local_3_q0,
        data_in_local_3_we0,
        data_in_local_3_address1,
        data_in_local_3_ce1,
        data_in_local_3_d1,
        data_in_local_3_q1,
        data_in_local_3_we1,
        data_out_local_0_address0,
        data_out_local_0_ce0,
        data_out_local_0_d0,
        data_out_local_0_q0,
        data_out_local_0_we0,
        data_out_local_0_address1,
        data_out_local_0_ce1,
        data_out_local_0_d1,
        data_out_local_0_q1,
        data_out_local_0_we1,
        data_out_local_1_address0,
        data_out_local_1_ce0,
        data_out_local_1_d0,
        data_out_local_1_q0,
        data_out_local_1_we0,
        data_out_local_1_address1,
        data_out_local_1_ce1,
        data_out_local_1_d1,
        data_out_local_1_q1,
        data_out_local_1_we1,
        data_out_local_2_address0,
        data_out_local_2_ce0,
        data_out_local_2_d0,
        data_out_local_2_q0,
        data_out_local_2_we0,
        data_out_local_2_address1,
        data_out_local_2_ce1,
        data_out_local_2_d1,
        data_out_local_2_q1,
        data_out_local_2_we1,
        data_out_local_3_address0,
        data_out_local_3_ce0,
        data_out_local_3_d0,
        data_out_local_3_q0,
        data_out_local_3_we0,
        data_out_local_3_address1,
        data_out_local_3_ce1,
        data_out_local_3_d1,
        data_out_local_3_q1,
        data_out_local_3_we1,
        d_out,
        ap_clk,
        ap_rst,
        weights_ap_vld,
        d_out_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] weights;
output  [3:0] data_in_local_0_address0;
output   data_in_local_0_ce0;
output  [31:0] data_in_local_0_d0;
input  [31:0] data_in_local_0_q0;
output   data_in_local_0_we0;
output  [3:0] data_in_local_0_address1;
output   data_in_local_0_ce1;
output  [31:0] data_in_local_0_d1;
input  [31:0] data_in_local_0_q1;
output   data_in_local_0_we1;
output  [3:0] data_in_local_1_address0;
output   data_in_local_1_ce0;
output  [31:0] data_in_local_1_d0;
input  [31:0] data_in_local_1_q0;
output   data_in_local_1_we0;
output  [3:0] data_in_local_1_address1;
output   data_in_local_1_ce1;
output  [31:0] data_in_local_1_d1;
input  [31:0] data_in_local_1_q1;
output   data_in_local_1_we1;
output  [3:0] data_in_local_2_address0;
output   data_in_local_2_ce0;
output  [31:0] data_in_local_2_d0;
input  [31:0] data_in_local_2_q0;
output   data_in_local_2_we0;
output  [3:0] data_in_local_2_address1;
output   data_in_local_2_ce1;
output  [31:0] data_in_local_2_d1;
input  [31:0] data_in_local_2_q1;
output   data_in_local_2_we1;
output  [3:0] data_in_local_3_address0;
output   data_in_local_3_ce0;
output  [31:0] data_in_local_3_d0;
input  [31:0] data_in_local_3_q0;
output   data_in_local_3_we0;
output  [3:0] data_in_local_3_address1;
output   data_in_local_3_ce1;
output  [31:0] data_in_local_3_d1;
input  [31:0] data_in_local_3_q1;
output   data_in_local_3_we1;
output  [4:0] data_out_local_0_address0;
output   data_out_local_0_ce0;
output  [31:0] data_out_local_0_d0;
input  [31:0] data_out_local_0_q0;
output   data_out_local_0_we0;
output  [4:0] data_out_local_0_address1;
output   data_out_local_0_ce1;
output  [31:0] data_out_local_0_d1;
input  [31:0] data_out_local_0_q1;
output   data_out_local_0_we1;
output  [4:0] data_out_local_1_address0;
output   data_out_local_1_ce0;
output  [31:0] data_out_local_1_d0;
input  [31:0] data_out_local_1_q0;
output   data_out_local_1_we0;
output  [4:0] data_out_local_1_address1;
output   data_out_local_1_ce1;
output  [31:0] data_out_local_1_d1;
input  [31:0] data_out_local_1_q1;
output   data_out_local_1_we1;
output  [4:0] data_out_local_2_address0;
output   data_out_local_2_ce0;
output  [31:0] data_out_local_2_d0;
input  [31:0] data_out_local_2_q0;
output   data_out_local_2_we0;
output  [4:0] data_out_local_2_address1;
output   data_out_local_2_ce1;
output  [31:0] data_out_local_2_d1;
input  [31:0] data_out_local_2_q1;
output   data_out_local_2_we1;
output  [4:0] data_out_local_3_address0;
output   data_out_local_3_ce0;
output  [31:0] data_out_local_3_d0;
input  [31:0] data_out_local_3_q0;
output   data_out_local_3_we0;
output  [4:0] data_out_local_3_address1;
output   data_out_local_3_ce1;
output  [31:0] data_out_local_3_d1;
input  [31:0] data_out_local_3_q1;
output   data_out_local_3_we1;
input  [4:0] d_out;
input   ap_clk;
input   ap_rst;
input   weights_ap_vld;
input   d_out_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    load_weight_U0_ap_start;
wire    load_weight_U0_ap_done;
wire    load_weight_U0_ap_continue;
wire    load_weight_U0_ap_idle;
wire    load_weight_U0_ap_ready;
wire    load_weight_U0_m_axi_gmem_AWVALID;
wire   [63:0] load_weight_U0_m_axi_gmem_AWADDR;
wire   [0:0] load_weight_U0_m_axi_gmem_AWID;
wire   [31:0] load_weight_U0_m_axi_gmem_AWLEN;
wire   [2:0] load_weight_U0_m_axi_gmem_AWSIZE;
wire   [1:0] load_weight_U0_m_axi_gmem_AWBURST;
wire   [1:0] load_weight_U0_m_axi_gmem_AWLOCK;
wire   [3:0] load_weight_U0_m_axi_gmem_AWCACHE;
wire   [2:0] load_weight_U0_m_axi_gmem_AWPROT;
wire   [3:0] load_weight_U0_m_axi_gmem_AWQOS;
wire   [3:0] load_weight_U0_m_axi_gmem_AWREGION;
wire   [0:0] load_weight_U0_m_axi_gmem_AWUSER;
wire    load_weight_U0_m_axi_gmem_WVALID;
wire   [31:0] load_weight_U0_m_axi_gmem_WDATA;
wire   [3:0] load_weight_U0_m_axi_gmem_WSTRB;
wire    load_weight_U0_m_axi_gmem_WLAST;
wire   [0:0] load_weight_U0_m_axi_gmem_WID;
wire   [0:0] load_weight_U0_m_axi_gmem_WUSER;
wire    load_weight_U0_m_axi_gmem_ARVALID;
wire   [63:0] load_weight_U0_m_axi_gmem_ARADDR;
wire   [0:0] load_weight_U0_m_axi_gmem_ARID;
wire   [31:0] load_weight_U0_m_axi_gmem_ARLEN;
wire   [2:0] load_weight_U0_m_axi_gmem_ARSIZE;
wire   [1:0] load_weight_U0_m_axi_gmem_ARBURST;
wire   [1:0] load_weight_U0_m_axi_gmem_ARLOCK;
wire   [3:0] load_weight_U0_m_axi_gmem_ARCACHE;
wire   [2:0] load_weight_U0_m_axi_gmem_ARPROT;
wire   [3:0] load_weight_U0_m_axi_gmem_ARQOS;
wire   [3:0] load_weight_U0_m_axi_gmem_ARREGION;
wire   [0:0] load_weight_U0_m_axi_gmem_ARUSER;
wire    load_weight_U0_m_axi_gmem_RREADY;
wire    load_weight_U0_m_axi_gmem_BREADY;
wire   [31:0] load_weight_U0_weight_buf_din;
wire    load_weight_U0_weight_buf_write;
wire   [4:0] load_weight_U0_d_out_out_din;
wire    load_weight_U0_d_out_out_write;
wire    PE_110_U0_ap_start;
wire    PE_110_U0_ap_done;
wire    PE_110_U0_ap_continue;
wire    PE_110_U0_ap_idle;
wire    PE_110_U0_ap_ready;
wire    PE_110_U0_weights_in_read;
wire   [31:0] PE_110_U0_weights_out_V_din;
wire    PE_110_U0_weights_out_V_write;
wire   [3:0] PE_110_U0_data_in_0_address0;
wire    PE_110_U0_data_in_0_ce0;
wire   [4:0] PE_110_U0_data_out_local_0_address0;
wire    PE_110_U0_data_out_local_0_ce0;
wire    PE_110_U0_data_out_local_0_we0;
wire   [31:0] PE_110_U0_data_out_local_0_d0;
wire    PE_110_U0_d_out_read;
wire   [4:0] PE_110_U0_d_out_out_din;
wire    PE_110_U0_d_out_out_write;
wire    ap_sync_continue;
wire    PE11_U0_ap_start;
wire    PE11_U0_ap_done;
wire    PE11_U0_ap_continue;
wire    PE11_U0_ap_idle;
wire    PE11_U0_ap_ready;
wire    PE11_U0_weights_in_V_read;
wire   [31:0] PE11_U0_weights_out_V4_din;
wire    PE11_U0_weights_out_V4_write;
wire   [3:0] PE11_U0_data_in7_address0;
wire    PE11_U0_data_in7_ce0;
wire   [4:0] PE11_U0_data_out_local10_address0;
wire    PE11_U0_data_out_local10_ce0;
wire    PE11_U0_data_out_local10_we0;
wire   [31:0] PE11_U0_data_out_local10_d0;
wire    PE11_U0_d_out_read;
wire   [4:0] PE11_U0_d_out_out_din;
wire    PE11_U0_d_out_out_write;
wire    PE12_U0_ap_start;
wire    PE12_U0_ap_done;
wire    PE12_U0_ap_continue;
wire    PE12_U0_ap_idle;
wire    PE12_U0_ap_ready;
wire    PE12_U0_weights_in_V1_read;
wire   [31:0] PE12_U0_weights_out_V5_din;
wire    PE12_U0_weights_out_V5_write;
wire   [3:0] PE12_U0_data_in8_address0;
wire    PE12_U0_data_in8_ce0;
wire   [4:0] PE12_U0_data_out_local11_address0;
wire    PE12_U0_data_out_local11_ce0;
wire    PE12_U0_data_out_local11_we0;
wire   [31:0] PE12_U0_data_out_local11_d0;
wire    PE12_U0_d_out_read;
wire   [4:0] PE12_U0_d_out_out_din;
wire    PE12_U0_d_out_out_write;
wire    PE13_U0_ap_start;
wire    PE13_U0_ap_done;
wire    PE13_U0_ap_continue;
wire    PE13_U0_ap_idle;
wire    PE13_U0_ap_ready;
wire    PE13_U0_weights_in_V2_read;
wire   [3:0] PE13_U0_data_in9_address0;
wire    PE13_U0_data_in9_ce0;
wire   [4:0] PE13_U0_data_out_local12_address0;
wire    PE13_U0_data_out_local12_ce0;
wire    PE13_U0_data_out_local12_we0;
wire   [31:0] PE13_U0_data_out_local12_d0;
wire    PE13_U0_d_out_read;
wire    weight_buf_full_n;
wire   [31:0] weight_buf_dout;
wire    weight_buf_empty_n;
wire    d_out_c_full_n;
wire   [4:0] d_out_c_dout;
wire    d_out_c_empty_n;
wire    weights_stream_0_V_full_n;
wire   [31:0] weights_stream_0_V_dout;
wire    weights_stream_0_V_empty_n;
wire    d_out_c13_full_n;
wire   [4:0] d_out_c13_dout;
wire    d_out_c13_empty_n;
wire    weights_stream_1_V_full_n;
wire   [31:0] weights_stream_1_V_dout;
wire    weights_stream_1_V_empty_n;
wire    d_out_c14_full_n;
wire   [4:0] d_out_c14_dout;
wire    d_out_c14_empty_n;
wire    weights_stream_2_V_full_n;
wire   [31:0] weights_stream_2_V_dout;
wire    weights_stream_2_V_empty_n;
wire    d_out_c15_full_n;
wire   [4:0] d_out_c15_dout;
wire    d_out_c15_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_load_weight_U0_ap_ready;
wire    ap_sync_load_weight_U0_ap_ready;
reg    ap_sync_reg_PE_110_U0_ap_ready;
wire    ap_sync_PE_110_U0_ap_ready;
reg    ap_sync_reg_PE11_U0_ap_ready;
wire    ap_sync_PE11_U0_ap_ready;
reg    ap_sync_reg_PE12_U0_ap_ready;
wire    ap_sync_PE12_U0_ap_ready;
reg    ap_sync_reg_PE13_U0_ap_ready;
wire    ap_sync_PE13_U0_ap_ready;
wire    load_weight_U0_start_full_n;
wire    load_weight_U0_start_write;
wire    PE_110_U0_start_full_n;
wire    PE_110_U0_start_write;
wire    PE11_U0_start_full_n;
wire    PE11_U0_start_write;
wire    PE12_U0_start_full_n;
wire    PE12_U0_start_write;
wire    PE13_U0_start_full_n;
wire    PE13_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_load_weight_U0_ap_ready = 1'b0;
#0 ap_sync_reg_PE_110_U0_ap_ready = 1'b0;
#0 ap_sync_reg_PE11_U0_ap_ready = 1'b0;
#0 ap_sync_reg_PE12_U0_ap_ready = 1'b0;
#0 ap_sync_reg_PE13_U0_ap_ready = 1'b0;
end

top_load_weight load_weight_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(load_weight_U0_ap_start),
    .ap_done(load_weight_U0_ap_done),
    .ap_continue(load_weight_U0_ap_continue),
    .ap_idle(load_weight_U0_ap_idle),
    .ap_ready(load_weight_U0_ap_ready),
    .m_axi_gmem_AWVALID(load_weight_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(load_weight_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(load_weight_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(load_weight_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(load_weight_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(load_weight_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(load_weight_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(load_weight_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(load_weight_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(load_weight_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(load_weight_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(load_weight_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(load_weight_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(load_weight_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(load_weight_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(load_weight_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(load_weight_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(load_weight_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(load_weight_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(load_weight_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(load_weight_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(load_weight_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(load_weight_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(load_weight_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(load_weight_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(load_weight_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(load_weight_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(load_weight_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(load_weight_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(load_weight_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(load_weight_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(load_weight_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .weight_buf_din(load_weight_U0_weight_buf_din),
    .weight_buf_full_n(weight_buf_full_n),
    .weight_buf_write(load_weight_U0_weight_buf_write),
    .weights(weights),
    .d_out(d_out),
    .d_out_out_din(load_weight_U0_d_out_out_din),
    .d_out_out_full_n(d_out_c_full_n),
    .d_out_out_write(load_weight_U0_d_out_out_write)
);

top_PE_110 PE_110_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(PE_110_U0_ap_start),
    .ap_done(PE_110_U0_ap_done),
    .ap_continue(PE_110_U0_ap_continue),
    .ap_idle(PE_110_U0_ap_idle),
    .ap_ready(PE_110_U0_ap_ready),
    .weights_in_dout(weight_buf_dout),
    .weights_in_empty_n(weight_buf_empty_n),
    .weights_in_read(PE_110_U0_weights_in_read),
    .weights_out_V_din(PE_110_U0_weights_out_V_din),
    .weights_out_V_full_n(weights_stream_0_V_full_n),
    .weights_out_V_write(PE_110_U0_weights_out_V_write),
    .data_in_0_address0(PE_110_U0_data_in_0_address0),
    .data_in_0_ce0(PE_110_U0_data_in_0_ce0),
    .data_in_0_q0(data_in_local_0_q0),
    .data_out_local_0_address0(PE_110_U0_data_out_local_0_address0),
    .data_out_local_0_ce0(PE_110_U0_data_out_local_0_ce0),
    .data_out_local_0_we0(PE_110_U0_data_out_local_0_we0),
    .data_out_local_0_d0(PE_110_U0_data_out_local_0_d0),
    .d_out_dout(d_out_c_dout),
    .d_out_empty_n(d_out_c_empty_n),
    .d_out_read(PE_110_U0_d_out_read),
    .d_out_out_din(PE_110_U0_d_out_out_din),
    .d_out_out_full_n(d_out_c13_full_n),
    .d_out_out_write(PE_110_U0_d_out_out_write)
);

top_PE11 PE11_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(PE11_U0_ap_start),
    .ap_done(PE11_U0_ap_done),
    .ap_continue(PE11_U0_ap_continue),
    .ap_idle(PE11_U0_ap_idle),
    .ap_ready(PE11_U0_ap_ready),
    .weights_in_V_dout(weights_stream_0_V_dout),
    .weights_in_V_empty_n(weights_stream_0_V_empty_n),
    .weights_in_V_read(PE11_U0_weights_in_V_read),
    .weights_out_V4_din(PE11_U0_weights_out_V4_din),
    .weights_out_V4_full_n(weights_stream_1_V_full_n),
    .weights_out_V4_write(PE11_U0_weights_out_V4_write),
    .data_in7_address0(PE11_U0_data_in7_address0),
    .data_in7_ce0(PE11_U0_data_in7_ce0),
    .data_in7_q0(data_in_local_1_q0),
    .data_out_local10_address0(PE11_U0_data_out_local10_address0),
    .data_out_local10_ce0(PE11_U0_data_out_local10_ce0),
    .data_out_local10_we0(PE11_U0_data_out_local10_we0),
    .data_out_local10_d0(PE11_U0_data_out_local10_d0),
    .d_out_dout(d_out_c13_dout),
    .d_out_empty_n(d_out_c13_empty_n),
    .d_out_read(PE11_U0_d_out_read),
    .d_out_out_din(PE11_U0_d_out_out_din),
    .d_out_out_full_n(d_out_c14_full_n),
    .d_out_out_write(PE11_U0_d_out_out_write)
);

top_PE12 PE12_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(PE12_U0_ap_start),
    .ap_done(PE12_U0_ap_done),
    .ap_continue(PE12_U0_ap_continue),
    .ap_idle(PE12_U0_ap_idle),
    .ap_ready(PE12_U0_ap_ready),
    .weights_in_V1_dout(weights_stream_1_V_dout),
    .weights_in_V1_empty_n(weights_stream_1_V_empty_n),
    .weights_in_V1_read(PE12_U0_weights_in_V1_read),
    .weights_out_V5_din(PE12_U0_weights_out_V5_din),
    .weights_out_V5_full_n(weights_stream_2_V_full_n),
    .weights_out_V5_write(PE12_U0_weights_out_V5_write),
    .data_in8_address0(PE12_U0_data_in8_address0),
    .data_in8_ce0(PE12_U0_data_in8_ce0),
    .data_in8_q0(data_in_local_2_q0),
    .data_out_local11_address0(PE12_U0_data_out_local11_address0),
    .data_out_local11_ce0(PE12_U0_data_out_local11_ce0),
    .data_out_local11_we0(PE12_U0_data_out_local11_we0),
    .data_out_local11_d0(PE12_U0_data_out_local11_d0),
    .d_out_dout(d_out_c14_dout),
    .d_out_empty_n(d_out_c14_empty_n),
    .d_out_read(PE12_U0_d_out_read),
    .d_out_out_din(PE12_U0_d_out_out_din),
    .d_out_out_full_n(d_out_c15_full_n),
    .d_out_out_write(PE12_U0_d_out_out_write)
);

top_PE13 PE13_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(PE13_U0_ap_start),
    .ap_done(PE13_U0_ap_done),
    .ap_continue(PE13_U0_ap_continue),
    .ap_idle(PE13_U0_ap_idle),
    .ap_ready(PE13_U0_ap_ready),
    .weights_in_V2_dout(weights_stream_2_V_dout),
    .weights_in_V2_empty_n(weights_stream_2_V_empty_n),
    .weights_in_V2_read(PE13_U0_weights_in_V2_read),
    .data_in9_address0(PE13_U0_data_in9_address0),
    .data_in9_ce0(PE13_U0_data_in9_ce0),
    .data_in9_q0(data_in_local_3_q0),
    .data_out_local12_address0(PE13_U0_data_out_local12_address0),
    .data_out_local12_ce0(PE13_U0_data_out_local12_ce0),
    .data_out_local12_we0(PE13_U0_data_out_local12_we0),
    .data_out_local12_d0(PE13_U0_data_out_local12_d0),
    .d_out_dout(d_out_c15_dout),
    .d_out_empty_n(d_out_c15_empty_n),
    .d_out_read(PE13_U0_d_out_read)
);

top_fifo_w32_d2_S weight_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weight_U0_weight_buf_din),
    .if_full_n(weight_buf_full_n),
    .if_write(load_weight_U0_weight_buf_write),
    .if_dout(weight_buf_dout),
    .if_empty_n(weight_buf_empty_n),
    .if_read(PE_110_U0_weights_in_read)
);

top_fifo_w5_d2_S d_out_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weight_U0_d_out_out_din),
    .if_full_n(d_out_c_full_n),
    .if_write(load_weight_U0_d_out_out_write),
    .if_dout(d_out_c_dout),
    .if_empty_n(d_out_c_empty_n),
    .if_read(PE_110_U0_d_out_read)
);

top_fifo_w32_d2_S weights_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PE_110_U0_weights_out_V_din),
    .if_full_n(weights_stream_0_V_full_n),
    .if_write(PE_110_U0_weights_out_V_write),
    .if_dout(weights_stream_0_V_dout),
    .if_empty_n(weights_stream_0_V_empty_n),
    .if_read(PE11_U0_weights_in_V_read)
);

top_fifo_w5_d2_S d_out_c13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PE_110_U0_d_out_out_din),
    .if_full_n(d_out_c13_full_n),
    .if_write(PE_110_U0_d_out_out_write),
    .if_dout(d_out_c13_dout),
    .if_empty_n(d_out_c13_empty_n),
    .if_read(PE11_U0_d_out_read)
);

top_fifo_w32_d2_S weights_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PE11_U0_weights_out_V4_din),
    .if_full_n(weights_stream_1_V_full_n),
    .if_write(PE11_U0_weights_out_V4_write),
    .if_dout(weights_stream_1_V_dout),
    .if_empty_n(weights_stream_1_V_empty_n),
    .if_read(PE12_U0_weights_in_V1_read)
);

top_fifo_w5_d2_S d_out_c14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PE11_U0_d_out_out_din),
    .if_full_n(d_out_c14_full_n),
    .if_write(PE11_U0_d_out_out_write),
    .if_dout(d_out_c14_dout),
    .if_empty_n(d_out_c14_empty_n),
    .if_read(PE12_U0_d_out_read)
);

top_fifo_w32_d2_S weights_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PE12_U0_weights_out_V5_din),
    .if_full_n(weights_stream_2_V_full_n),
    .if_write(PE12_U0_weights_out_V5_write),
    .if_dout(weights_stream_2_V_dout),
    .if_empty_n(weights_stream_2_V_empty_n),
    .if_read(PE13_U0_weights_in_V2_read)
);

top_fifo_w5_d2_S d_out_c15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PE12_U0_d_out_out_din),
    .if_full_n(d_out_c15_full_n),
    .if_write(PE12_U0_d_out_out_write),
    .if_dout(d_out_c15_dout),
    .if_empty_n(d_out_c15_empty_n),
    .if_read(PE13_U0_d_out_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_PE11_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_PE11_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_PE11_U0_ap_ready <= ap_sync_PE11_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_PE12_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_PE12_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_PE12_U0_ap_ready <= ap_sync_PE12_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_PE13_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_PE13_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_PE13_U0_ap_ready <= ap_sync_PE13_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_PE_110_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_PE_110_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_PE_110_U0_ap_ready <= ap_sync_PE_110_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_load_weight_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_weight_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_weight_U0_ap_ready <= ap_sync_load_weight_U0_ap_ready;
        end
    end
end

assign PE11_U0_ap_continue = ap_sync_continue;

assign PE11_U0_ap_start = ((ap_sync_reg_PE11_U0_ap_ready ^ 1'b1) & ap_start);

assign PE11_U0_start_full_n = 1'b1;

assign PE11_U0_start_write = 1'b0;

assign PE12_U0_ap_continue = ap_sync_continue;

assign PE12_U0_ap_start = ((ap_sync_reg_PE12_U0_ap_ready ^ 1'b1) & ap_start);

assign PE12_U0_start_full_n = 1'b1;

assign PE12_U0_start_write = 1'b0;

assign PE13_U0_ap_continue = ap_sync_continue;

assign PE13_U0_ap_start = ((ap_sync_reg_PE13_U0_ap_ready ^ 1'b1) & ap_start);

assign PE13_U0_start_full_n = 1'b1;

assign PE13_U0_start_write = 1'b0;

assign PE_110_U0_ap_continue = ap_sync_continue;

assign PE_110_U0_ap_start = ((ap_sync_reg_PE_110_U0_ap_ready ^ 1'b1) & ap_start);

assign PE_110_U0_start_full_n = 1'b1;

assign PE_110_U0_start_write = 1'b0;

assign ap_done = ap_sync_done;

assign ap_idle = (load_weight_U0_ap_idle & PE_110_U0_ap_idle & PE13_U0_ap_idle & PE12_U0_ap_idle & PE11_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_PE11_U0_ap_ready = (ap_sync_reg_PE11_U0_ap_ready | PE11_U0_ap_ready);

assign ap_sync_PE12_U0_ap_ready = (ap_sync_reg_PE12_U0_ap_ready | PE12_U0_ap_ready);

assign ap_sync_PE13_U0_ap_ready = (ap_sync_reg_PE13_U0_ap_ready | PE13_U0_ap_ready);

assign ap_sync_PE_110_U0_ap_ready = (ap_sync_reg_PE_110_U0_ap_ready | PE_110_U0_ap_ready);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (PE_110_U0_ap_done & PE13_U0_ap_done & PE12_U0_ap_done & PE11_U0_ap_done);

assign ap_sync_load_weight_U0_ap_ready = (load_weight_U0_ap_ready | ap_sync_reg_load_weight_U0_ap_ready);

assign ap_sync_ready = (ap_sync_load_weight_U0_ap_ready & ap_sync_PE_110_U0_ap_ready & ap_sync_PE13_U0_ap_ready & ap_sync_PE12_U0_ap_ready & ap_sync_PE11_U0_ap_ready);

assign data_in_local_0_address0 = PE_110_U0_data_in_0_address0;

assign data_in_local_0_address1 = 4'd0;

assign data_in_local_0_ce0 = PE_110_U0_data_in_0_ce0;

assign data_in_local_0_ce1 = 1'b0;

assign data_in_local_0_d0 = 32'd0;

assign data_in_local_0_d1 = 32'd0;

assign data_in_local_0_we0 = 1'b0;

assign data_in_local_0_we1 = 1'b0;

assign data_in_local_1_address0 = PE11_U0_data_in7_address0;

assign data_in_local_1_address1 = 4'd0;

assign data_in_local_1_ce0 = PE11_U0_data_in7_ce0;

assign data_in_local_1_ce1 = 1'b0;

assign data_in_local_1_d0 = 32'd0;

assign data_in_local_1_d1 = 32'd0;

assign data_in_local_1_we0 = 1'b0;

assign data_in_local_1_we1 = 1'b0;

assign data_in_local_2_address0 = PE12_U0_data_in8_address0;

assign data_in_local_2_address1 = 4'd0;

assign data_in_local_2_ce0 = PE12_U0_data_in8_ce0;

assign data_in_local_2_ce1 = 1'b0;

assign data_in_local_2_d0 = 32'd0;

assign data_in_local_2_d1 = 32'd0;

assign data_in_local_2_we0 = 1'b0;

assign data_in_local_2_we1 = 1'b0;

assign data_in_local_3_address0 = PE13_U0_data_in9_address0;

assign data_in_local_3_address1 = 4'd0;

assign data_in_local_3_ce0 = PE13_U0_data_in9_ce0;

assign data_in_local_3_ce1 = 1'b0;

assign data_in_local_3_d0 = 32'd0;

assign data_in_local_3_d1 = 32'd0;

assign data_in_local_3_we0 = 1'b0;

assign data_in_local_3_we1 = 1'b0;

assign data_out_local_0_address0 = PE_110_U0_data_out_local_0_address0;

assign data_out_local_0_address1 = 5'd0;

assign data_out_local_0_ce0 = PE_110_U0_data_out_local_0_ce0;

assign data_out_local_0_ce1 = 1'b0;

assign data_out_local_0_d0 = PE_110_U0_data_out_local_0_d0;

assign data_out_local_0_d1 = 32'd0;

assign data_out_local_0_we0 = PE_110_U0_data_out_local_0_we0;

assign data_out_local_0_we1 = 1'b0;

assign data_out_local_1_address0 = PE11_U0_data_out_local10_address0;

assign data_out_local_1_address1 = 5'd0;

assign data_out_local_1_ce0 = PE11_U0_data_out_local10_ce0;

assign data_out_local_1_ce1 = 1'b0;

assign data_out_local_1_d0 = PE11_U0_data_out_local10_d0;

assign data_out_local_1_d1 = 32'd0;

assign data_out_local_1_we0 = PE11_U0_data_out_local10_we0;

assign data_out_local_1_we1 = 1'b0;

assign data_out_local_2_address0 = PE12_U0_data_out_local11_address0;

assign data_out_local_2_address1 = 5'd0;

assign data_out_local_2_ce0 = PE12_U0_data_out_local11_ce0;

assign data_out_local_2_ce1 = 1'b0;

assign data_out_local_2_d0 = PE12_U0_data_out_local11_d0;

assign data_out_local_2_d1 = 32'd0;

assign data_out_local_2_we0 = PE12_U0_data_out_local11_we0;

assign data_out_local_2_we1 = 1'b0;

assign data_out_local_3_address0 = PE13_U0_data_out_local12_address0;

assign data_out_local_3_address1 = 5'd0;

assign data_out_local_3_ce0 = PE13_U0_data_out_local12_ce0;

assign data_out_local_3_ce1 = 1'b0;

assign data_out_local_3_d0 = PE13_U0_data_out_local12_d0;

assign data_out_local_3_d1 = 32'd0;

assign data_out_local_3_we0 = PE13_U0_data_out_local12_we0;

assign data_out_local_3_we1 = 1'b0;

assign load_weight_U0_ap_continue = 1'b1;

assign load_weight_U0_ap_start = ((ap_sync_reg_load_weight_U0_ap_ready ^ 1'b1) & ap_start);

assign load_weight_U0_start_full_n = 1'b1;

assign load_weight_U0_start_write = 1'b0;

assign m_axi_gmem_ARADDR = load_weight_U0_m_axi_gmem_ARADDR;

assign m_axi_gmem_ARBURST = load_weight_U0_m_axi_gmem_ARBURST;

assign m_axi_gmem_ARCACHE = load_weight_U0_m_axi_gmem_ARCACHE;

assign m_axi_gmem_ARID = load_weight_U0_m_axi_gmem_ARID;

assign m_axi_gmem_ARLEN = load_weight_U0_m_axi_gmem_ARLEN;

assign m_axi_gmem_ARLOCK = load_weight_U0_m_axi_gmem_ARLOCK;

assign m_axi_gmem_ARPROT = load_weight_U0_m_axi_gmem_ARPROT;

assign m_axi_gmem_ARQOS = load_weight_U0_m_axi_gmem_ARQOS;

assign m_axi_gmem_ARREGION = load_weight_U0_m_axi_gmem_ARREGION;

assign m_axi_gmem_ARSIZE = load_weight_U0_m_axi_gmem_ARSIZE;

assign m_axi_gmem_ARUSER = load_weight_U0_m_axi_gmem_ARUSER;

assign m_axi_gmem_ARVALID = load_weight_U0_m_axi_gmem_ARVALID;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_RREADY = load_weight_U0_m_axi_gmem_RREADY;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

endmodule //top_PE_dataflow
