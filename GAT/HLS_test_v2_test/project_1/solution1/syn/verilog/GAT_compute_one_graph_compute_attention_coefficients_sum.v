// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_compute_attention_coefficients_sum (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        all_scores_V_address0,
        all_scores_V_ce0,
        all_scores_V_q0,
        all_scores_V_address1,
        all_scores_V_ce1,
        all_scores_V_we1,
        all_scores_V_d1,
        attention_coefficients_sum_V_address1,
        attention_coefficients_sum_V_ce1,
        attention_coefficients_sum_V_we1,
        attention_coefficients_sum_V_d1,
        connectivity_mask_final_address0,
        connectivity_mask_final_ce0,
        connectivity_mask_final_q0,
        grp_exp_28_10_s_fu_5359_p_din1,
        grp_exp_28_10_s_fu_5359_p_dout0,
        grp_exp_28_10_s_fu_5359_p_start,
        grp_exp_28_10_s_fu_5359_p_ready,
        grp_exp_28_10_s_fu_5359_p_done,
        grp_exp_28_10_s_fu_5359_p_idle
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] all_scores_V_address0;
output   all_scores_V_ce0;
input  [27:0] all_scores_V_q0;
output  [15:0] all_scores_V_address1;
output   all_scores_V_ce1;
output   all_scores_V_we1;
output  [27:0] all_scores_V_d1;
output  [8:0] attention_coefficients_sum_V_address1;
output   attention_coefficients_sum_V_ce1;
output   attention_coefficients_sum_V_we1;
output  [27:0] attention_coefficients_sum_V_d1;
output  [13:0] connectivity_mask_final_address0;
output   connectivity_mask_final_ce0;
input  [31:0] connectivity_mask_final_q0;
output  [27:0] grp_exp_28_10_s_fu_5359_p_din1;
input  [27:0] grp_exp_28_10_s_fu_5359_p_dout0;
output   grp_exp_28_10_s_fu_5359_p_start;
input   grp_exp_28_10_s_fu_5359_p_ready;
input   grp_exp_28_10_s_fu_5359_p_done;
input   grp_exp_28_10_s_fu_5359_p_idle;

reg ap_idle;
reg all_scores_V_ce0;
reg all_scores_V_ce1;
reg all_scores_V_we1;
reg attention_coefficients_sum_V_ce1;
reg attention_coefficients_sum_V_we1;
reg connectivity_mask_final_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_205_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln110_fu_229_p2;
reg   [0:0] icmp_ln110_reg_498;
wire   [0:0] or_ln110_fu_315_p2;
reg   [0:0] or_ln110_reg_510;
reg   [0:0] or_ln110_reg_510_pp0_iter2_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter3_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter4_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter5_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter6_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter7_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter8_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter9_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter10_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter11_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter12_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter13_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter14_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter15_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter16_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter17_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter18_reg;
reg   [0:0] or_ln110_reg_510_pp0_iter19_reg;
wire   [4:0] select_ln110_fu_320_p3;
reg   [4:0] select_ln110_reg_515;
reg   [4:0] select_ln110_reg_515_pp0_iter2_reg;
reg   [4:0] select_ln110_reg_515_pp0_iter3_reg;
reg   [4:0] select_ln110_reg_515_pp0_iter4_reg;
wire   [4:0] select_ln110_2_fu_328_p3;
reg   [4:0] select_ln110_2_reg_521;
wire   [0:0] icmp_ln112_1_fu_346_p2;
reg   [0:0] icmp_ln112_1_reg_531;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter2_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter3_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter4_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter5_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter6_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter7_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter8_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter9_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter10_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter11_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter12_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter13_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter14_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter15_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter16_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter17_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter18_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter19_reg;
reg   [0:0] icmp_ln112_1_reg_531_pp0_iter20_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter4_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter5_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter6_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter7_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter8_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter9_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter10_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter11_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter12_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter13_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter14_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter15_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter16_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter17_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter18_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter19_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_545_pp0_iter20_reg;
wire   [0:0] icmp_ln114_fu_382_p2;
reg   [0:0] icmp_ln114_reg_565;
reg   [0:0] icmp_ln114_reg_565_pp0_iter6_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter7_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter8_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter9_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter10_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter11_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter12_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter13_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter14_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter15_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter16_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter17_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter18_reg;
reg   [0:0] icmp_ln114_reg_565_pp0_iter19_reg;
reg   [27:0] op2_V_reg_574;
wire    grp_exp_28_10_s_fu_156_ap_ready;
reg    grp_exp_28_10_s_fu_156_ap_start_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln117_3_fu_365_p1;
wire   [63:0] zext_ln114_fu_375_p1;
wire   [63:0] zext_ln117_6_fu_388_p1;
reg   [27:0] sum_V_fu_84;
wire   [27:0] sum_V_1_fu_402_p2;
wire   [27:0] select_ln110_1_fu_395_p3;
wire    ap_loop_init;
reg   [4:0] n2_fu_88;
wire   [4:0] add_ln112_fu_340_p2;
reg   [4:0] n1_fu_92;
reg   [9:0] indvar_flatten_fu_96;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load_1;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [9:0] select_ln110_3_fu_256_p3;
reg   [2:0] nh_fu_100;
reg   [2:0] ap_sig_allocacmp_nh_load;
wire   [2:0] select_ln109_1_fu_235_p3;
reg   [10:0] indvar_flatten14_fu_104;
reg   [10:0] ap_sig_allocacmp_indvar_flatten14_load;
wire   [10:0] add_ln109_1_fu_211_p2;
wire   [2:0] add_ln109_fu_223_p2;
wire   [9:0] add_ln110_1_fu_250_p2;
wire   [0:0] icmp_ln112_fu_297_p2;
wire   [0:0] xor_ln109_fu_292_p2;
wire   [4:0] select_ln109_fu_285_p3;
wire   [0:0] and_ln109_fu_303_p2;
wire   [4:0] add_ln110_fu_309_p2;
wire   [9:0] grp_fu_421_p3;
wire   [11:0] grp_fu_431_p3;
wire   [15:0] grp_fu_440_p3;
wire   [2:0] grp_fu_421_p0;
wire   [6:0] grp_fu_421_p1;
wire   [4:0] grp_fu_421_p2;
wire   [4:0] grp_fu_431_p0;
wire   [6:0] grp_fu_431_p1;
wire   [4:0] grp_fu_431_p2;
wire   [9:0] grp_fu_440_p0;
wire   [6:0] grp_fu_440_p1;
wire   [4:0] grp_fu_440_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [9:0] grp_fu_421_p00;
wire   [9:0] grp_fu_421_p20;
wire   [11:0] grp_fu_431_p00;
wire   [11:0] grp_fu_431_p20;
wire   [15:0] grp_fu_440_p00;
wire   [15:0] grp_fu_440_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 grp_exp_28_10_s_fu_156_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_mac_muladd_3ns_7ns_5ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mac_muladd_3ns_7ns_5ns_10_4_1_U1917(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_421_p0),
    .din1(grp_fu_421_p1),
    .din2(grp_fu_421_p2),
    .ce(1'b1),
    .dout(grp_fu_421_p3)
);

GAT_compute_one_graph_mac_muladd_5ns_7ns_5ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
mac_muladd_5ns_7ns_5ns_12_4_1_U1918(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_431_p0),
    .din1(grp_fu_431_p1),
    .din2(grp_fu_431_p2),
    .ce(1'b1),
    .dout(grp_fu_431_p3)
);

GAT_compute_one_graph_mac_muladd_10ns_7ns_5ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 16 ))
mac_muladd_10ns_7ns_5ns_16_4_1_U1919(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_440_p0),
    .din1(grp_fu_440_p1),
    .din2(grp_fu_440_p2),
    .ce(1'b1),
    .dout(grp_fu_440_p3)
);

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_exp_28_10_s_fu_156_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln114_reg_565 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_exp_28_10_s_fu_156_ap_start_reg <= 1'b1;
        end else if ((grp_exp_28_10_s_fu_156_ap_ready == 1'b1)) begin
            grp_exp_28_10_s_fu_156_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln109_fu_205_p2 == 1'd0))) begin
            indvar_flatten14_fu_104 <= add_ln109_1_fu_211_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten14_fu_104 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln109_fu_205_p2 == 1'd0))) begin
            indvar_flatten_fu_96 <= select_ln110_3_fu_256_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_96 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            n1_fu_92 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            n1_fu_92 <= select_ln110_2_fu_328_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            n2_fu_88 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            n2_fu_88 <= add_ln112_fu_340_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln109_fu_205_p2 == 1'd0))) begin
            nh_fu_100 <= select_ln109_1_fu_235_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            nh_fu_100 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum_V_fu_84 <= 28'd0;
        end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln114_reg_565_pp0_iter19_reg == 1'd1))) begin
            sum_V_fu_84 <= select_ln110_1_fu_395_p3;
        end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln114_reg_565_pp0_iter19_reg == 1'd0))) begin
            sum_V_fu_84 <= sum_V_1_fu_402_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        attention_coefficients_sum_V_addr_reg_545 <= zext_ln117_3_fu_365_p1;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter10_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter9_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter11_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter10_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter12_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter11_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter13_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter12_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter14_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter13_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter15_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter14_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter16_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter15_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter17_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter16_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter18_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter17_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter19_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter18_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter20_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter19_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter4_reg <= attention_coefficients_sum_V_addr_reg_545;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter5_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter4_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter6_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter5_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter7_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter6_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter8_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter7_reg;
        attention_coefficients_sum_V_addr_reg_545_pp0_iter9_reg <= attention_coefficients_sum_V_addr_reg_545_pp0_iter8_reg;
        icmp_ln112_1_reg_531_pp0_iter10_reg <= icmp_ln112_1_reg_531_pp0_iter9_reg;
        icmp_ln112_1_reg_531_pp0_iter11_reg <= icmp_ln112_1_reg_531_pp0_iter10_reg;
        icmp_ln112_1_reg_531_pp0_iter12_reg <= icmp_ln112_1_reg_531_pp0_iter11_reg;
        icmp_ln112_1_reg_531_pp0_iter13_reg <= icmp_ln112_1_reg_531_pp0_iter12_reg;
        icmp_ln112_1_reg_531_pp0_iter14_reg <= icmp_ln112_1_reg_531_pp0_iter13_reg;
        icmp_ln112_1_reg_531_pp0_iter15_reg <= icmp_ln112_1_reg_531_pp0_iter14_reg;
        icmp_ln112_1_reg_531_pp0_iter16_reg <= icmp_ln112_1_reg_531_pp0_iter15_reg;
        icmp_ln112_1_reg_531_pp0_iter17_reg <= icmp_ln112_1_reg_531_pp0_iter16_reg;
        icmp_ln112_1_reg_531_pp0_iter18_reg <= icmp_ln112_1_reg_531_pp0_iter17_reg;
        icmp_ln112_1_reg_531_pp0_iter19_reg <= icmp_ln112_1_reg_531_pp0_iter18_reg;
        icmp_ln112_1_reg_531_pp0_iter20_reg <= icmp_ln112_1_reg_531_pp0_iter19_reg;
        icmp_ln112_1_reg_531_pp0_iter2_reg <= icmp_ln112_1_reg_531;
        icmp_ln112_1_reg_531_pp0_iter3_reg <= icmp_ln112_1_reg_531_pp0_iter2_reg;
        icmp_ln112_1_reg_531_pp0_iter4_reg <= icmp_ln112_1_reg_531_pp0_iter3_reg;
        icmp_ln112_1_reg_531_pp0_iter5_reg <= icmp_ln112_1_reg_531_pp0_iter4_reg;
        icmp_ln112_1_reg_531_pp0_iter6_reg <= icmp_ln112_1_reg_531_pp0_iter5_reg;
        icmp_ln112_1_reg_531_pp0_iter7_reg <= icmp_ln112_1_reg_531_pp0_iter6_reg;
        icmp_ln112_1_reg_531_pp0_iter8_reg <= icmp_ln112_1_reg_531_pp0_iter7_reg;
        icmp_ln112_1_reg_531_pp0_iter9_reg <= icmp_ln112_1_reg_531_pp0_iter8_reg;
        icmp_ln114_reg_565 <= icmp_ln114_fu_382_p2;
        icmp_ln114_reg_565_pp0_iter10_reg <= icmp_ln114_reg_565_pp0_iter9_reg;
        icmp_ln114_reg_565_pp0_iter11_reg <= icmp_ln114_reg_565_pp0_iter10_reg;
        icmp_ln114_reg_565_pp0_iter12_reg <= icmp_ln114_reg_565_pp0_iter11_reg;
        icmp_ln114_reg_565_pp0_iter13_reg <= icmp_ln114_reg_565_pp0_iter12_reg;
        icmp_ln114_reg_565_pp0_iter14_reg <= icmp_ln114_reg_565_pp0_iter13_reg;
        icmp_ln114_reg_565_pp0_iter15_reg <= icmp_ln114_reg_565_pp0_iter14_reg;
        icmp_ln114_reg_565_pp0_iter16_reg <= icmp_ln114_reg_565_pp0_iter15_reg;
        icmp_ln114_reg_565_pp0_iter17_reg <= icmp_ln114_reg_565_pp0_iter16_reg;
        icmp_ln114_reg_565_pp0_iter18_reg <= icmp_ln114_reg_565_pp0_iter17_reg;
        icmp_ln114_reg_565_pp0_iter19_reg <= icmp_ln114_reg_565_pp0_iter18_reg;
        icmp_ln114_reg_565_pp0_iter6_reg <= icmp_ln114_reg_565;
        icmp_ln114_reg_565_pp0_iter7_reg <= icmp_ln114_reg_565_pp0_iter6_reg;
        icmp_ln114_reg_565_pp0_iter8_reg <= icmp_ln114_reg_565_pp0_iter7_reg;
        icmp_ln114_reg_565_pp0_iter9_reg <= icmp_ln114_reg_565_pp0_iter8_reg;
        or_ln110_reg_510_pp0_iter10_reg <= or_ln110_reg_510_pp0_iter9_reg;
        or_ln110_reg_510_pp0_iter11_reg <= or_ln110_reg_510_pp0_iter10_reg;
        or_ln110_reg_510_pp0_iter12_reg <= or_ln110_reg_510_pp0_iter11_reg;
        or_ln110_reg_510_pp0_iter13_reg <= or_ln110_reg_510_pp0_iter12_reg;
        or_ln110_reg_510_pp0_iter14_reg <= or_ln110_reg_510_pp0_iter13_reg;
        or_ln110_reg_510_pp0_iter15_reg <= or_ln110_reg_510_pp0_iter14_reg;
        or_ln110_reg_510_pp0_iter16_reg <= or_ln110_reg_510_pp0_iter15_reg;
        or_ln110_reg_510_pp0_iter17_reg <= or_ln110_reg_510_pp0_iter16_reg;
        or_ln110_reg_510_pp0_iter18_reg <= or_ln110_reg_510_pp0_iter17_reg;
        or_ln110_reg_510_pp0_iter19_reg <= or_ln110_reg_510_pp0_iter18_reg;
        or_ln110_reg_510_pp0_iter2_reg <= or_ln110_reg_510;
        or_ln110_reg_510_pp0_iter3_reg <= or_ln110_reg_510_pp0_iter2_reg;
        or_ln110_reg_510_pp0_iter4_reg <= or_ln110_reg_510_pp0_iter3_reg;
        or_ln110_reg_510_pp0_iter5_reg <= or_ln110_reg_510_pp0_iter4_reg;
        or_ln110_reg_510_pp0_iter6_reg <= or_ln110_reg_510_pp0_iter5_reg;
        or_ln110_reg_510_pp0_iter7_reg <= or_ln110_reg_510_pp0_iter6_reg;
        or_ln110_reg_510_pp0_iter8_reg <= or_ln110_reg_510_pp0_iter7_reg;
        or_ln110_reg_510_pp0_iter9_reg <= or_ln110_reg_510_pp0_iter8_reg;
        select_ln110_reg_515_pp0_iter2_reg <= select_ln110_reg_515;
        select_ln110_reg_515_pp0_iter3_reg <= select_ln110_reg_515_pp0_iter2_reg;
        select_ln110_reg_515_pp0_iter4_reg <= select_ln110_reg_515_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln112_1_reg_531 <= icmp_ln112_1_fu_346_p2;
        or_ln110_reg_510 <= or_ln110_fu_315_p2;
        select_ln110_2_reg_521 <= select_ln110_2_fu_328_p3;
        select_ln110_reg_515 <= select_ln110_fu_320_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_205_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln110_reg_498 <= icmp_ln110_fu_229_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_565_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        op2_V_reg_574 <= grp_exp_28_10_s_fu_5359_p_dout0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        all_scores_V_ce0 = 1'b1;
    end else begin
        all_scores_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        all_scores_V_ce1 = 1'b1;
    end else begin
        all_scores_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln114_reg_565 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        all_scores_V_we1 = 1'b1;
    end else begin
        all_scores_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_205_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten14_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten14_load = indvar_flatten14_fu_104;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_96;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load_1 = indvar_flatten_fu_96;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_nh_load = 3'd0;
    end else begin
        ap_sig_allocacmp_nh_load = nh_fu_100;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        attention_coefficients_sum_V_ce1 = 1'b1;
    end else begin
        attention_coefficients_sum_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (icmp_ln112_1_reg_531_pp0_iter20_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        attention_coefficients_sum_V_we1 = 1'b1;
    end else begin
        attention_coefficients_sum_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        connectivity_mask_final_ce0 = 1'b1;
    end else begin
        connectivity_mask_final_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_1_fu_211_p2 = (ap_sig_allocacmp_indvar_flatten14_load + 11'd1);

assign add_ln109_fu_223_p2 = (ap_sig_allocacmp_nh_load + 3'd1);

assign add_ln110_1_fu_250_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln110_fu_309_p2 = (select_ln109_fu_285_p3 + 5'd1);

assign add_ln112_fu_340_p2 = (select_ln110_fu_320_p3 + 5'd1);

assign all_scores_V_address0 = zext_ln117_6_fu_388_p1;

assign all_scores_V_address1 = zext_ln117_6_fu_388_p1;

assign all_scores_V_d1 = 28'd0;

assign and_ln109_fu_303_p2 = (xor_ln109_fu_292_p2 & icmp_ln112_fu_297_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign attention_coefficients_sum_V_address1 = attention_coefficients_sum_V_addr_reg_545_pp0_iter20_reg;

assign attention_coefficients_sum_V_d1 = sum_V_fu_84;

assign connectivity_mask_final_address0 = zext_ln114_fu_375_p1;

assign grp_exp_28_10_s_fu_156_ap_ready = grp_exp_28_10_s_fu_5359_p_ready;

assign grp_exp_28_10_s_fu_5359_p_din1 = all_scores_V_q0;

assign grp_exp_28_10_s_fu_5359_p_start = grp_exp_28_10_s_fu_156_ap_start_reg;

assign grp_fu_421_p0 = grp_fu_421_p00;

assign grp_fu_421_p00 = select_ln109_1_fu_235_p3;

assign grp_fu_421_p1 = 10'd100;

assign grp_fu_421_p2 = grp_fu_421_p20;

assign grp_fu_421_p20 = select_ln110_2_reg_521;

assign grp_fu_431_p0 = grp_fu_431_p00;

assign grp_fu_431_p00 = select_ln110_2_fu_328_p3;

assign grp_fu_431_p1 = 12'd100;

assign grp_fu_431_p2 = grp_fu_431_p20;

assign grp_fu_431_p20 = select_ln110_reg_515_pp0_iter2_reg;

assign grp_fu_440_p0 = grp_fu_440_p00;

assign grp_fu_440_p00 = grp_fu_421_p3;

assign grp_fu_440_p1 = 16'd100;

assign grp_fu_440_p2 = grp_fu_440_p20;

assign grp_fu_440_p20 = select_ln110_reg_515_pp0_iter4_reg;

assign icmp_ln109_fu_205_p2 = ((ap_sig_allocacmp_indvar_flatten14_load == 11'd1444) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_229_p2 = ((ap_sig_allocacmp_indvar_flatten_load_1 == 10'd361) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_346_p2 = ((add_ln112_fu_340_p2 == 5'd19) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_297_p2 = ((n2_fu_88 == 5'd19) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_382_p2 = ((connectivity_mask_final_q0 == 32'd2147483648) ? 1'b1 : 1'b0);

assign or_ln110_fu_315_p2 = (icmp_ln110_reg_498 | and_ln109_fu_303_p2);

assign select_ln109_1_fu_235_p3 = ((icmp_ln110_fu_229_p2[0:0] == 1'b1) ? add_ln109_fu_223_p2 : ap_sig_allocacmp_nh_load);

assign select_ln109_fu_285_p3 = ((icmp_ln110_reg_498[0:0] == 1'b1) ? 5'd0 : n1_fu_92);

assign select_ln110_1_fu_395_p3 = ((or_ln110_reg_510_pp0_iter19_reg[0:0] == 1'b1) ? 28'd0 : sum_V_fu_84);

assign select_ln110_2_fu_328_p3 = ((and_ln109_fu_303_p2[0:0] == 1'b1) ? add_ln110_fu_309_p2 : select_ln109_fu_285_p3);

assign select_ln110_3_fu_256_p3 = ((icmp_ln110_fu_229_p2[0:0] == 1'b1) ? 10'd1 : add_ln110_1_fu_250_p2);

assign select_ln110_fu_320_p3 = ((or_ln110_fu_315_p2[0:0] == 1'b1) ? 5'd0 : n2_fu_88);

assign sum_V_1_fu_402_p2 = (op2_V_reg_574 + select_ln110_1_fu_395_p3);

assign xor_ln109_fu_292_p2 = (icmp_ln110_reg_498 ^ 1'd1);

assign zext_ln114_fu_375_p1 = grp_fu_431_p3;

assign zext_ln117_3_fu_365_p1 = grp_fu_421_p3;

assign zext_ln117_6_fu_388_p1 = grp_fu_440_p3;

endmodule //GAT_compute_one_graph_compute_attention_coefficients_sum
