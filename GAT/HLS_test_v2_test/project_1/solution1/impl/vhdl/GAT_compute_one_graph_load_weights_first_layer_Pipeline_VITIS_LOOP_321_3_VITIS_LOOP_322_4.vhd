-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_load_weights_first_layer_Pipeline_VITIS_LOOP_321_3_VITIS_LOOP_322_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gat_net_scoring_fn_source_fixed_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    gat_net_scoring_fn_source_fixed_ce0 : OUT STD_LOGIC;
    gat_net_scoring_fn_source_fixed_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    scoring_fn_source_V_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_0_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_0_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_0_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_1_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_1_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_1_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_2_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_2_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_2_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_3_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_3_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_3_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_4_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_4_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_4_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_5_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_5_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_5_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_6_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_6_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_6_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_7_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_7_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_7_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_8_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_8_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_8_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_9_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_9_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_9_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_10_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_10_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_10_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_11_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_11_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_11_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_12_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_12_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_12_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_13_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_13_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_13_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_14_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_14_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_14_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_source_V_15_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_15_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_15_d0 : OUT STD_LOGIC_VECTOR (27 downto 0) );
end;


architecture behav of GAT_compute_one_graph_load_weights_first_layer_Pipeline_VITIS_LOOP_321_3_VITIS_LOOP_322_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln321_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal select_ln321_1_fu_399_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln321_1_reg_512 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln323_fu_411_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln323_reg_517 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln323_fu_423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln321_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_110 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln322_fu_428_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_114 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten39_fu_118 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten39_load : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln321_1_fu_367_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln323_1_fu_468_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln322_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln321_fu_379_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln321_fu_391_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln321_fu_407_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1_fu_415_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln321_fu_361_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_114 <= select_ln321_1_fu_399_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_114 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten39_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln321_fu_361_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten39_fu_118 <= add_ln321_1_fu_367_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten39_fu_118 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln321_fu_361_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_110 <= add_ln322_fu_428_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_110 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln321_fu_361_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln321_1_reg_512 <= select_ln321_1_fu_399_p3;
                trunc_ln323_reg_517 <= trunc_ln323_fu_411_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1_fu_415_p3 <= (trunc_ln321_fu_407_p1 & trunc_ln323_fu_411_p1);
    add_ln321_1_fu_367_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten39_load) + unsigned(ap_const_lv7_1));
    add_ln321_fu_379_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv3_1));
    add_ln322_fu_428_p2 <= std_logic_vector(unsigned(select_ln321_fu_391_p3) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln321_fu_361_p2)
    begin
        if (((icmp_ln321_fu_361_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_114)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_114;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten39_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten39_fu_118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten39_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten39_load <= indvar_flatten39_fu_118;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_110, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_110;
        end if; 
    end process;

    gat_net_scoring_fn_source_fixed_address0 <= zext_ln323_fu_423_p1(9 - 1 downto 0);

    gat_net_scoring_fn_source_fixed_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gat_net_scoring_fn_source_fixed_ce0 <= ap_const_logic_1;
        else 
            gat_net_scoring_fn_source_fixed_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln321_fu_361_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten39_load = ap_const_lv7_40) else "0";
    icmp_ln322_fu_385_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv5_10) else "0";
    scoring_fn_source_V_0_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_0_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_0_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_0))) then 
            scoring_fn_source_V_0_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_10_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_10_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_10_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_A))) then 
            scoring_fn_source_V_10_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_11_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_11_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_11_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_B))) then 
            scoring_fn_source_V_11_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_12_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_12_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_12_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_C))) then 
            scoring_fn_source_V_12_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_13_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_13_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_13_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_D))) then 
            scoring_fn_source_V_13_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_14_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_14_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_14_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_E))) then 
            scoring_fn_source_V_14_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_15_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_15_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_15_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_F))) then 
            scoring_fn_source_V_15_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_1_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_1_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_1_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_1))) then 
            scoring_fn_source_V_1_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_2_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_2_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_2_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_2))) then 
            scoring_fn_source_V_2_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_3_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_3_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_3_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_3))) then 
            scoring_fn_source_V_3_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_4_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_4_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_4_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_4))) then 
            scoring_fn_source_V_4_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_5_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_5_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_5_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_5))) then 
            scoring_fn_source_V_5_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_6_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_6_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_6_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_6))) then 
            scoring_fn_source_V_6_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_7_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_7_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_7_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_7))) then 
            scoring_fn_source_V_7_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_8_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_8_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_8_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_8))) then 
            scoring_fn_source_V_8_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_9_address0 <= zext_ln321_fu_449_p1(5 - 1 downto 0);

    scoring_fn_source_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_source_V_9_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_9_d0 <= trunc_ln323_1_fu_468_p1;

    scoring_fn_source_V_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln323_reg_517)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln323_reg_517 = ap_const_lv4_9))) then 
            scoring_fn_source_V_9_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln321_1_fu_399_p3 <= 
        add_ln321_fu_379_p2 when (icmp_ln322_fu_385_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln321_fu_391_p3 <= 
        ap_const_lv5_0 when (icmp_ln322_fu_385_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    trunc_ln321_fu_407_p1 <= select_ln321_1_fu_399_p3(2 - 1 downto 0);
    trunc_ln323_1_fu_468_p1 <= gat_net_scoring_fn_source_fixed_q0(28 - 1 downto 0);
    trunc_ln323_fu_411_p1 <= select_ln321_fu_391_p3(4 - 1 downto 0);
    zext_ln321_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln321_1_reg_512),64));
    zext_ln323_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1_fu_415_p3),64));
end behav;
