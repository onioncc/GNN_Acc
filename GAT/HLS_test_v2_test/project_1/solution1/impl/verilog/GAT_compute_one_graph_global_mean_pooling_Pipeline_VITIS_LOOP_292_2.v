// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_global_mean_pooling_Pipeline_VITIS_LOOP_292_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_of_nodes,
        trunc_ln712_1,
        sum_V_out,
        sum_V_out_ap_vld,
        out_nodes_features_skip_concat_bias_V_0_address0,
        out_nodes_features_skip_concat_bias_V_0_ce0,
        out_nodes_features_skip_concat_bias_V_0_q0,
        out_nodes_features_skip_concat_bias_V_1_address0,
        out_nodes_features_skip_concat_bias_V_1_ce0,
        out_nodes_features_skip_concat_bias_V_1_q0,
        out_nodes_features_skip_concat_bias_V_2_address0,
        out_nodes_features_skip_concat_bias_V_2_ce0,
        out_nodes_features_skip_concat_bias_V_2_q0,
        out_nodes_features_skip_concat_bias_V_3_address0,
        out_nodes_features_skip_concat_bias_V_3_ce0,
        out_nodes_features_skip_concat_bias_V_3_q0,
        out_nodes_features_skip_concat_bias_V_4_address0,
        out_nodes_features_skip_concat_bias_V_4_ce0,
        out_nodes_features_skip_concat_bias_V_4_q0,
        out_nodes_features_skip_concat_bias_V_5_address0,
        out_nodes_features_skip_concat_bias_V_5_ce0,
        out_nodes_features_skip_concat_bias_V_5_q0,
        out_nodes_features_skip_concat_bias_V_6_address0,
        out_nodes_features_skip_concat_bias_V_6_ce0,
        out_nodes_features_skip_concat_bias_V_6_q0,
        out_nodes_features_skip_concat_bias_V_7_address0,
        out_nodes_features_skip_concat_bias_V_7_ce0,
        out_nodes_features_skip_concat_bias_V_7_q0,
        out_nodes_features_skip_concat_bias_V_8_address0,
        out_nodes_features_skip_concat_bias_V_8_ce0,
        out_nodes_features_skip_concat_bias_V_8_q0,
        out_nodes_features_skip_concat_bias_V_9_address0,
        out_nodes_features_skip_concat_bias_V_9_ce0,
        out_nodes_features_skip_concat_bias_V_9_q0,
        out_nodes_features_skip_concat_bias_V_10_address0,
        out_nodes_features_skip_concat_bias_V_10_ce0,
        out_nodes_features_skip_concat_bias_V_10_q0,
        out_nodes_features_skip_concat_bias_V_11_address0,
        out_nodes_features_skip_concat_bias_V_11_ce0,
        out_nodes_features_skip_concat_bias_V_11_q0,
        out_nodes_features_skip_concat_bias_V_12_address0,
        out_nodes_features_skip_concat_bias_V_12_ce0,
        out_nodes_features_skip_concat_bias_V_12_q0,
        out_nodes_features_skip_concat_bias_V_13_address0,
        out_nodes_features_skip_concat_bias_V_13_ce0,
        out_nodes_features_skip_concat_bias_V_13_q0,
        out_nodes_features_skip_concat_bias_V_14_address0,
        out_nodes_features_skip_concat_bias_V_14_ce0,
        out_nodes_features_skip_concat_bias_V_14_q0,
        out_nodes_features_skip_concat_bias_V_15_address0,
        out_nodes_features_skip_concat_bias_V_15_ce0,
        out_nodes_features_skip_concat_bias_V_15_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] num_of_nodes;
input  [3:0] trunc_ln712_1;
output  [27:0] sum_V_out;
output   sum_V_out_ap_vld;
output  [6:0] out_nodes_features_skip_concat_bias_V_0_address0;
output   out_nodes_features_skip_concat_bias_V_0_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_0_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_1_address0;
output   out_nodes_features_skip_concat_bias_V_1_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_1_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_2_address0;
output   out_nodes_features_skip_concat_bias_V_2_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_2_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_3_address0;
output   out_nodes_features_skip_concat_bias_V_3_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_3_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_4_address0;
output   out_nodes_features_skip_concat_bias_V_4_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_4_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_5_address0;
output   out_nodes_features_skip_concat_bias_V_5_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_5_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_6_address0;
output   out_nodes_features_skip_concat_bias_V_6_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_6_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_7_address0;
output   out_nodes_features_skip_concat_bias_V_7_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_7_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_8_address0;
output   out_nodes_features_skip_concat_bias_V_8_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_8_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_9_address0;
output   out_nodes_features_skip_concat_bias_V_9_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_9_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_10_address0;
output   out_nodes_features_skip_concat_bias_V_10_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_10_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_11_address0;
output   out_nodes_features_skip_concat_bias_V_11_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_11_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_12_address0;
output   out_nodes_features_skip_concat_bias_V_12_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_12_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_13_address0;
output   out_nodes_features_skip_concat_bias_V_13_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_13_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_14_address0;
output   out_nodes_features_skip_concat_bias_V_14_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_14_q0;
output  [6:0] out_nodes_features_skip_concat_bias_V_15_address0;
output   out_nodes_features_skip_concat_bias_V_15_ce0;
input  [27:0] out_nodes_features_skip_concat_bias_V_15_q0;

reg ap_idle;
reg sum_V_out_ap_vld;
reg out_nodes_features_skip_concat_bias_V_0_ce0;
reg out_nodes_features_skip_concat_bias_V_1_ce0;
reg out_nodes_features_skip_concat_bias_V_2_ce0;
reg out_nodes_features_skip_concat_bias_V_3_ce0;
reg out_nodes_features_skip_concat_bias_V_4_ce0;
reg out_nodes_features_skip_concat_bias_V_5_ce0;
reg out_nodes_features_skip_concat_bias_V_6_ce0;
reg out_nodes_features_skip_concat_bias_V_7_ce0;
reg out_nodes_features_skip_concat_bias_V_8_ce0;
reg out_nodes_features_skip_concat_bias_V_9_ce0;
reg out_nodes_features_skip_concat_bias_V_10_ce0;
reg out_nodes_features_skip_concat_bias_V_11_ce0;
reg out_nodes_features_skip_concat_bias_V_12_ce0;
reg out_nodes_features_skip_concat_bias_V_13_ce0;
reg out_nodes_features_skip_concat_bias_V_14_ce0;
reg out_nodes_features_skip_concat_bias_V_15_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln292_fu_385_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] trunc_ln712_1_read_reg_455;
reg   [0:0] icmp_ln292_reg_459;
wire   [27:0] ap_phi_reg_pp0_iter0_phi_ln712_reg_335;
reg   [27:0] ap_phi_reg_pp0_iter1_phi_ln712_reg_335;
reg   [27:0] ap_phi_reg_pp0_iter2_phi_ln712_reg_335;
wire   [63:0] nd_cast_fu_397_p1;
wire    ap_block_pp0_stage0;
reg   [27:0] sum_V_fu_100;
wire   [27:0] sum_V_1_fu_425_p2;
wire    ap_loop_init;
reg   [31:0] nd_fu_104;
reg   [31:0] ap_sig_allocacmp_nd_1;
wire   [31:0] add_ln292_fu_391_p2;
wire    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_290;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_290)) begin
        if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd15))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_15_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd14))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_14_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd13))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_13_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd12))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_12_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd11))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_11_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd10))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_10_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd9))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_9_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd8))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_8_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd7))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_7_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd6))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_6_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd5))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_5_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd4))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_4_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd3))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_3_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd2))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_2_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd1))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_1_q0;
        end else if (((icmp_ln292_reg_459 == 1'd0) & (trunc_ln712_1_read_reg_455 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= out_nodes_features_skip_concat_bias_V_0_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_phi_ln712_reg_335 <= ap_phi_reg_pp0_iter1_phi_ln712_reg_335;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln292_fu_385_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            nd_fu_104 <= add_ln292_fu_391_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            nd_fu_104 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum_V_fu_100 <= 28'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            sum_V_fu_100 <= sum_V_1_fu_425_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln292_reg_459 <= icmp_ln292_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_phi_ln712_reg_335 <= ap_phi_reg_pp0_iter0_phi_ln712_reg_335;
    end
end

always @ (*) begin
    if (((icmp_ln292_fu_385_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_nd_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_nd_1 = nd_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_0_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_10_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_11_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_12_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_13_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_14_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_15_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_1_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_2_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_3_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_4_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_5_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_6_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_7_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_8_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_nodes_features_skip_concat_bias_V_9_ce0 = 1'b1;
    end else begin
        out_nodes_features_skip_concat_bias_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln292_reg_459 == 1'd1))) begin
        sum_V_out_ap_vld = 1'b1;
    end else begin
        sum_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln292_fu_391_p2 = (ap_sig_allocacmp_nd_1 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_290 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_phi_ln712_reg_335 = 'bx;

assign icmp_ln292_fu_385_p2 = ((ap_sig_allocacmp_nd_1 == num_of_nodes) ? 1'b1 : 1'b0);

assign nd_cast_fu_397_p1 = ap_sig_allocacmp_nd_1;

assign out_nodes_features_skip_concat_bias_V_0_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_10_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_11_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_12_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_13_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_14_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_15_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_1_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_2_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_3_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_4_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_5_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_6_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_7_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_8_address0 = nd_cast_fu_397_p1;

assign out_nodes_features_skip_concat_bias_V_9_address0 = nd_cast_fu_397_p1;

assign sum_V_1_fu_425_p2 = (ap_phi_reg_pp0_iter2_phi_ln712_reg_335 + sum_V_fu_100);

assign sum_V_out = sum_V_fu_100;

assign trunc_ln712_1_read_reg_455 = trunc_ln712_1;

endmodule //GAT_compute_one_graph_global_mean_pooling_Pipeline_VITIS_LOOP_292_2
