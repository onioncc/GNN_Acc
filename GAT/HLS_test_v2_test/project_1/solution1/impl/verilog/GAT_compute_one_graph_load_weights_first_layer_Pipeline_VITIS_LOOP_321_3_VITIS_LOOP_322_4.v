// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_load_weights_first_layer_Pipeline_VITIS_LOOP_321_3_VITIS_LOOP_322_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gat_net_scoring_fn_source_fixed_address0,
        gat_net_scoring_fn_source_fixed_ce0,
        gat_net_scoring_fn_source_fixed_q0,
        scoring_fn_source_V_0_address0,
        scoring_fn_source_V_0_ce0,
        scoring_fn_source_V_0_we0,
        scoring_fn_source_V_0_d0,
        scoring_fn_source_V_1_address0,
        scoring_fn_source_V_1_ce0,
        scoring_fn_source_V_1_we0,
        scoring_fn_source_V_1_d0,
        scoring_fn_source_V_2_address0,
        scoring_fn_source_V_2_ce0,
        scoring_fn_source_V_2_we0,
        scoring_fn_source_V_2_d0,
        scoring_fn_source_V_3_address0,
        scoring_fn_source_V_3_ce0,
        scoring_fn_source_V_3_we0,
        scoring_fn_source_V_3_d0,
        scoring_fn_source_V_4_address0,
        scoring_fn_source_V_4_ce0,
        scoring_fn_source_V_4_we0,
        scoring_fn_source_V_4_d0,
        scoring_fn_source_V_5_address0,
        scoring_fn_source_V_5_ce0,
        scoring_fn_source_V_5_we0,
        scoring_fn_source_V_5_d0,
        scoring_fn_source_V_6_address0,
        scoring_fn_source_V_6_ce0,
        scoring_fn_source_V_6_we0,
        scoring_fn_source_V_6_d0,
        scoring_fn_source_V_7_address0,
        scoring_fn_source_V_7_ce0,
        scoring_fn_source_V_7_we0,
        scoring_fn_source_V_7_d0,
        scoring_fn_source_V_8_address0,
        scoring_fn_source_V_8_ce0,
        scoring_fn_source_V_8_we0,
        scoring_fn_source_V_8_d0,
        scoring_fn_source_V_9_address0,
        scoring_fn_source_V_9_ce0,
        scoring_fn_source_V_9_we0,
        scoring_fn_source_V_9_d0,
        scoring_fn_source_V_10_address0,
        scoring_fn_source_V_10_ce0,
        scoring_fn_source_V_10_we0,
        scoring_fn_source_V_10_d0,
        scoring_fn_source_V_11_address0,
        scoring_fn_source_V_11_ce0,
        scoring_fn_source_V_11_we0,
        scoring_fn_source_V_11_d0,
        scoring_fn_source_V_12_address0,
        scoring_fn_source_V_12_ce0,
        scoring_fn_source_V_12_we0,
        scoring_fn_source_V_12_d0,
        scoring_fn_source_V_13_address0,
        scoring_fn_source_V_13_ce0,
        scoring_fn_source_V_13_we0,
        scoring_fn_source_V_13_d0,
        scoring_fn_source_V_14_address0,
        scoring_fn_source_V_14_ce0,
        scoring_fn_source_V_14_we0,
        scoring_fn_source_V_14_d0,
        scoring_fn_source_V_15_address0,
        scoring_fn_source_V_15_ce0,
        scoring_fn_source_V_15_we0,
        scoring_fn_source_V_15_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] gat_net_scoring_fn_source_fixed_address0;
output   gat_net_scoring_fn_source_fixed_ce0;
input  [31:0] gat_net_scoring_fn_source_fixed_q0;
output  [4:0] scoring_fn_source_V_0_address0;
output   scoring_fn_source_V_0_ce0;
output   scoring_fn_source_V_0_we0;
output  [27:0] scoring_fn_source_V_0_d0;
output  [4:0] scoring_fn_source_V_1_address0;
output   scoring_fn_source_V_1_ce0;
output   scoring_fn_source_V_1_we0;
output  [27:0] scoring_fn_source_V_1_d0;
output  [4:0] scoring_fn_source_V_2_address0;
output   scoring_fn_source_V_2_ce0;
output   scoring_fn_source_V_2_we0;
output  [27:0] scoring_fn_source_V_2_d0;
output  [4:0] scoring_fn_source_V_3_address0;
output   scoring_fn_source_V_3_ce0;
output   scoring_fn_source_V_3_we0;
output  [27:0] scoring_fn_source_V_3_d0;
output  [4:0] scoring_fn_source_V_4_address0;
output   scoring_fn_source_V_4_ce0;
output   scoring_fn_source_V_4_we0;
output  [27:0] scoring_fn_source_V_4_d0;
output  [4:0] scoring_fn_source_V_5_address0;
output   scoring_fn_source_V_5_ce0;
output   scoring_fn_source_V_5_we0;
output  [27:0] scoring_fn_source_V_5_d0;
output  [4:0] scoring_fn_source_V_6_address0;
output   scoring_fn_source_V_6_ce0;
output   scoring_fn_source_V_6_we0;
output  [27:0] scoring_fn_source_V_6_d0;
output  [4:0] scoring_fn_source_V_7_address0;
output   scoring_fn_source_V_7_ce0;
output   scoring_fn_source_V_7_we0;
output  [27:0] scoring_fn_source_V_7_d0;
output  [4:0] scoring_fn_source_V_8_address0;
output   scoring_fn_source_V_8_ce0;
output   scoring_fn_source_V_8_we0;
output  [27:0] scoring_fn_source_V_8_d0;
output  [4:0] scoring_fn_source_V_9_address0;
output   scoring_fn_source_V_9_ce0;
output   scoring_fn_source_V_9_we0;
output  [27:0] scoring_fn_source_V_9_d0;
output  [4:0] scoring_fn_source_V_10_address0;
output   scoring_fn_source_V_10_ce0;
output   scoring_fn_source_V_10_we0;
output  [27:0] scoring_fn_source_V_10_d0;
output  [4:0] scoring_fn_source_V_11_address0;
output   scoring_fn_source_V_11_ce0;
output   scoring_fn_source_V_11_we0;
output  [27:0] scoring_fn_source_V_11_d0;
output  [4:0] scoring_fn_source_V_12_address0;
output   scoring_fn_source_V_12_ce0;
output   scoring_fn_source_V_12_we0;
output  [27:0] scoring_fn_source_V_12_d0;
output  [4:0] scoring_fn_source_V_13_address0;
output   scoring_fn_source_V_13_ce0;
output   scoring_fn_source_V_13_we0;
output  [27:0] scoring_fn_source_V_13_d0;
output  [4:0] scoring_fn_source_V_14_address0;
output   scoring_fn_source_V_14_ce0;
output   scoring_fn_source_V_14_we0;
output  [27:0] scoring_fn_source_V_14_d0;
output  [4:0] scoring_fn_source_V_15_address0;
output   scoring_fn_source_V_15_ce0;
output   scoring_fn_source_V_15_we0;
output  [27:0] scoring_fn_source_V_15_d0;

reg ap_idle;
reg gat_net_scoring_fn_source_fixed_ce0;
reg scoring_fn_source_V_0_ce0;
reg scoring_fn_source_V_0_we0;
reg scoring_fn_source_V_1_ce0;
reg scoring_fn_source_V_1_we0;
reg scoring_fn_source_V_2_ce0;
reg scoring_fn_source_V_2_we0;
reg scoring_fn_source_V_3_ce0;
reg scoring_fn_source_V_3_we0;
reg scoring_fn_source_V_4_ce0;
reg scoring_fn_source_V_4_we0;
reg scoring_fn_source_V_5_ce0;
reg scoring_fn_source_V_5_we0;
reg scoring_fn_source_V_6_ce0;
reg scoring_fn_source_V_6_we0;
reg scoring_fn_source_V_7_ce0;
reg scoring_fn_source_V_7_we0;
reg scoring_fn_source_V_8_ce0;
reg scoring_fn_source_V_8_we0;
reg scoring_fn_source_V_9_ce0;
reg scoring_fn_source_V_9_we0;
reg scoring_fn_source_V_10_ce0;
reg scoring_fn_source_V_10_we0;
reg scoring_fn_source_V_11_ce0;
reg scoring_fn_source_V_11_we0;
reg scoring_fn_source_V_12_ce0;
reg scoring_fn_source_V_12_we0;
reg scoring_fn_source_V_13_ce0;
reg scoring_fn_source_V_13_we0;
reg scoring_fn_source_V_14_ce0;
reg scoring_fn_source_V_14_we0;
reg scoring_fn_source_V_15_ce0;
reg scoring_fn_source_V_15_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln321_fu_361_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] select_ln321_1_fu_399_p3;
reg   [2:0] select_ln321_1_reg_512;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] trunc_ln323_fu_411_p1;
reg   [3:0] trunc_ln323_reg_517;
wire   [63:0] zext_ln323_fu_423_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln321_fu_449_p1;
reg   [4:0] j_fu_110;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_load;
wire   [4:0] add_ln322_fu_428_p2;
reg   [2:0] i_fu_114;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [6:0] indvar_flatten39_fu_118;
reg   [6:0] ap_sig_allocacmp_indvar_flatten39_load;
wire   [6:0] add_ln321_1_fu_367_p2;
wire   [27:0] trunc_ln323_1_fu_468_p1;
wire   [0:0] icmp_ln322_fu_385_p2;
wire   [2:0] add_ln321_fu_379_p2;
wire   [4:0] select_ln321_fu_391_p3;
wire   [1:0] trunc_ln321_fu_407_p1;
wire   [5:0] add_ln1_fu_415_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln321_fu_361_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_114 <= select_ln321_1_fu_399_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_114 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln321_fu_361_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten39_fu_118 <= add_ln321_1_fu_367_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten39_fu_118 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln321_fu_361_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_110 <= add_ln322_fu_428_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_110 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln321_fu_361_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln321_1_reg_512 <= select_ln321_1_fu_399_p3;
        trunc_ln323_reg_517 <= trunc_ln323_fu_411_p1;
    end
end

always @ (*) begin
    if (((icmp_ln321_fu_361_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten39_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten39_load = indvar_flatten39_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 5'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gat_net_scoring_fn_source_fixed_ce0 = 1'b1;
    end else begin
        gat_net_scoring_fn_source_fixed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_0_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd0))) begin
        scoring_fn_source_V_0_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_10_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd10))) begin
        scoring_fn_source_V_10_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_11_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd11))) begin
        scoring_fn_source_V_11_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_12_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd12))) begin
        scoring_fn_source_V_12_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_13_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd13))) begin
        scoring_fn_source_V_13_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_14_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd14))) begin
        scoring_fn_source_V_14_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_15_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd15))) begin
        scoring_fn_source_V_15_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_1_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd1))) begin
        scoring_fn_source_V_1_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_2_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd2))) begin
        scoring_fn_source_V_2_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_3_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd3))) begin
        scoring_fn_source_V_3_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_4_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd4))) begin
        scoring_fn_source_V_4_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_5_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd5))) begin
        scoring_fn_source_V_5_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_6_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd6))) begin
        scoring_fn_source_V_6_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_7_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd7))) begin
        scoring_fn_source_V_7_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_8_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd8))) begin
        scoring_fn_source_V_8_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        scoring_fn_source_V_9_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln323_reg_517 == 4'd9))) begin
        scoring_fn_source_V_9_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1_fu_415_p3 = {{trunc_ln321_fu_407_p1}, {trunc_ln323_fu_411_p1}};

assign add_ln321_1_fu_367_p2 = (ap_sig_allocacmp_indvar_flatten39_load + 7'd1);

assign add_ln321_fu_379_p2 = (ap_sig_allocacmp_i_load + 3'd1);

assign add_ln322_fu_428_p2 = (select_ln321_fu_391_p3 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign gat_net_scoring_fn_source_fixed_address0 = zext_ln323_fu_423_p1;

assign icmp_ln321_fu_361_p2 = ((ap_sig_allocacmp_indvar_flatten39_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln322_fu_385_p2 = ((ap_sig_allocacmp_j_load == 5'd16) ? 1'b1 : 1'b0);

assign scoring_fn_source_V_0_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_0_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_10_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_10_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_11_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_11_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_12_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_12_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_13_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_13_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_14_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_14_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_15_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_15_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_1_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_1_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_2_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_2_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_3_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_3_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_4_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_4_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_5_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_5_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_6_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_6_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_7_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_7_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_8_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_8_d0 = trunc_ln323_1_fu_468_p1;

assign scoring_fn_source_V_9_address0 = zext_ln321_fu_449_p1;

assign scoring_fn_source_V_9_d0 = trunc_ln323_1_fu_468_p1;

assign select_ln321_1_fu_399_p3 = ((icmp_ln322_fu_385_p2[0:0] == 1'b1) ? add_ln321_fu_379_p2 : ap_sig_allocacmp_i_load);

assign select_ln321_fu_391_p3 = ((icmp_ln322_fu_385_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_j_load);

assign trunc_ln321_fu_407_p1 = select_ln321_1_fu_399_p3[1:0];

assign trunc_ln323_1_fu_468_p1 = gat_net_scoring_fn_source_fixed_q0[27:0];

assign trunc_ln323_fu_411_p1 = select_ln321_fu_391_p3[3:0];

assign zext_ln321_fu_449_p1 = select_ln321_1_reg_512;

assign zext_ln323_fu_423_p1 = add_ln1_fu_415_p3;

endmodule //GAT_compute_one_graph_load_weights_first_layer_Pipeline_VITIS_LOOP_321_3_VITIS_LOOP_322_4
