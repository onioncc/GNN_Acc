// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_compute_connectivity_mask_Pipeline_VITIS_LOOP_363_1_VITIS_LOOP_364_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        connectivity_mask_0_address1,
        connectivity_mask_0_ce1,
        connectivity_mask_0_we1,
        connectivity_mask_0_d1,
        connectivity_mask_1_address1,
        connectivity_mask_1_ce1,
        connectivity_mask_1_we1,
        connectivity_mask_1_d1,
        connectivity_mask_2_address1,
        connectivity_mask_2_ce1,
        connectivity_mask_2_we1,
        connectivity_mask_2_d1,
        connectivity_mask_3_address1,
        connectivity_mask_3_ce1,
        connectivity_mask_3_we1,
        connectivity_mask_3_d1,
        connectivity_mask_4_address1,
        connectivity_mask_4_ce1,
        connectivity_mask_4_we1,
        connectivity_mask_4_d1,
        connectivity_mask_5_address1,
        connectivity_mask_5_ce1,
        connectivity_mask_5_we1,
        connectivity_mask_5_d1,
        connectivity_mask_6_address1,
        connectivity_mask_6_ce1,
        connectivity_mask_6_we1,
        connectivity_mask_6_d1,
        connectivity_mask_7_address1,
        connectivity_mask_7_ce1,
        connectivity_mask_7_we1,
        connectivity_mask_7_d1,
        connectivity_mask_8_address1,
        connectivity_mask_8_ce1,
        connectivity_mask_8_we1,
        connectivity_mask_8_d1,
        connectivity_mask_9_address1,
        connectivity_mask_9_ce1,
        connectivity_mask_9_we1,
        connectivity_mask_9_d1,
        connectivity_mask_10_address1,
        connectivity_mask_10_ce1,
        connectivity_mask_10_we1,
        connectivity_mask_10_d1,
        connectivity_mask_11_address1,
        connectivity_mask_11_ce1,
        connectivity_mask_11_we1,
        connectivity_mask_11_d1,
        connectivity_mask_12_address1,
        connectivity_mask_12_ce1,
        connectivity_mask_12_we1,
        connectivity_mask_12_d1,
        connectivity_mask_13_address1,
        connectivity_mask_13_ce1,
        connectivity_mask_13_we1,
        connectivity_mask_13_d1,
        connectivity_mask_14_address1,
        connectivity_mask_14_ce1,
        connectivity_mask_14_we1,
        connectivity_mask_14_d1,
        connectivity_mask_15_address1,
        connectivity_mask_15_ce1,
        connectivity_mask_15_we1,
        connectivity_mask_15_d1,
        connectivity_mask_16_address1,
        connectivity_mask_16_ce1,
        connectivity_mask_16_we1,
        connectivity_mask_16_d1,
        connectivity_mask_17_address1,
        connectivity_mask_17_ce1,
        connectivity_mask_17_we1,
        connectivity_mask_17_d1,
        connectivity_mask_18_address1,
        connectivity_mask_18_ce1,
        connectivity_mask_18_we1,
        connectivity_mask_18_d1
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] connectivity_mask_0_address1;
output   connectivity_mask_0_ce1;
output   connectivity_mask_0_we1;
output  [31:0] connectivity_mask_0_d1;
output  [6:0] connectivity_mask_1_address1;
output   connectivity_mask_1_ce1;
output   connectivity_mask_1_we1;
output  [31:0] connectivity_mask_1_d1;
output  [6:0] connectivity_mask_2_address1;
output   connectivity_mask_2_ce1;
output   connectivity_mask_2_we1;
output  [31:0] connectivity_mask_2_d1;
output  [6:0] connectivity_mask_3_address1;
output   connectivity_mask_3_ce1;
output   connectivity_mask_3_we1;
output  [31:0] connectivity_mask_3_d1;
output  [6:0] connectivity_mask_4_address1;
output   connectivity_mask_4_ce1;
output   connectivity_mask_4_we1;
output  [31:0] connectivity_mask_4_d1;
output  [6:0] connectivity_mask_5_address1;
output   connectivity_mask_5_ce1;
output   connectivity_mask_5_we1;
output  [31:0] connectivity_mask_5_d1;
output  [6:0] connectivity_mask_6_address1;
output   connectivity_mask_6_ce1;
output   connectivity_mask_6_we1;
output  [31:0] connectivity_mask_6_d1;
output  [6:0] connectivity_mask_7_address1;
output   connectivity_mask_7_ce1;
output   connectivity_mask_7_we1;
output  [31:0] connectivity_mask_7_d1;
output  [6:0] connectivity_mask_8_address1;
output   connectivity_mask_8_ce1;
output   connectivity_mask_8_we1;
output  [31:0] connectivity_mask_8_d1;
output  [6:0] connectivity_mask_9_address1;
output   connectivity_mask_9_ce1;
output   connectivity_mask_9_we1;
output  [31:0] connectivity_mask_9_d1;
output  [6:0] connectivity_mask_10_address1;
output   connectivity_mask_10_ce1;
output   connectivity_mask_10_we1;
output  [31:0] connectivity_mask_10_d1;
output  [6:0] connectivity_mask_11_address1;
output   connectivity_mask_11_ce1;
output   connectivity_mask_11_we1;
output  [31:0] connectivity_mask_11_d1;
output  [6:0] connectivity_mask_12_address1;
output   connectivity_mask_12_ce1;
output   connectivity_mask_12_we1;
output  [31:0] connectivity_mask_12_d1;
output  [6:0] connectivity_mask_13_address1;
output   connectivity_mask_13_ce1;
output   connectivity_mask_13_we1;
output  [31:0] connectivity_mask_13_d1;
output  [6:0] connectivity_mask_14_address1;
output   connectivity_mask_14_ce1;
output   connectivity_mask_14_we1;
output  [31:0] connectivity_mask_14_d1;
output  [6:0] connectivity_mask_15_address1;
output   connectivity_mask_15_ce1;
output   connectivity_mask_15_we1;
output  [31:0] connectivity_mask_15_d1;
output  [6:0] connectivity_mask_16_address1;
output   connectivity_mask_16_ce1;
output   connectivity_mask_16_we1;
output  [31:0] connectivity_mask_16_d1;
output  [6:0] connectivity_mask_17_address1;
output   connectivity_mask_17_ce1;
output   connectivity_mask_17_we1;
output  [31:0] connectivity_mask_17_d1;
output  [6:0] connectivity_mask_18_address1;
output   connectivity_mask_18_ce1;
output   connectivity_mask_18_we1;
output  [31:0] connectivity_mask_18_d1;

reg ap_idle;
reg connectivity_mask_0_ce1;
reg connectivity_mask_0_we1;
reg connectivity_mask_1_ce1;
reg connectivity_mask_1_we1;
reg connectivity_mask_2_ce1;
reg connectivity_mask_2_we1;
reg connectivity_mask_3_ce1;
reg connectivity_mask_3_we1;
reg connectivity_mask_4_ce1;
reg connectivity_mask_4_we1;
reg connectivity_mask_5_ce1;
reg connectivity_mask_5_we1;
reg connectivity_mask_6_ce1;
reg connectivity_mask_6_we1;
reg connectivity_mask_7_ce1;
reg connectivity_mask_7_we1;
reg connectivity_mask_8_ce1;
reg connectivity_mask_8_we1;
reg connectivity_mask_9_ce1;
reg connectivity_mask_9_we1;
reg connectivity_mask_10_ce1;
reg connectivity_mask_10_we1;
reg connectivity_mask_11_ce1;
reg connectivity_mask_11_we1;
reg connectivity_mask_12_ce1;
reg connectivity_mask_12_we1;
reg connectivity_mask_13_ce1;
reg connectivity_mask_13_we1;
reg connectivity_mask_14_ce1;
reg connectivity_mask_14_we1;
reg connectivity_mask_15_ce1;
reg connectivity_mask_15_we1;
reg connectivity_mask_16_ce1;
reg connectivity_mask_16_we1;
reg connectivity_mask_17_ce1;
reg connectivity_mask_17_we1;
reg connectivity_mask_18_ce1;
reg connectivity_mask_18_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln363_fu_484_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln363_fu_530_p1;
wire   [4:0] select_ln363_fu_514_p3;
reg   [4:0] j_fu_112;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_load;
wire   [4:0] add_ln364_fu_553_p2;
reg   [4:0] i_fu_116;
reg   [4:0] ap_sig_allocacmp_i_load;
wire   [4:0] select_ln363_1_fu_522_p3;
reg   [8:0] indvar_flatten_fu_120;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [8:0] add_ln363_1_fu_490_p2;
wire   [0:0] icmp_ln364_fu_508_p2;
wire   [4:0] add_ln363_fu_502_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln363_fu_484_p2 == 1'd0)) begin
            i_fu_116 <= select_ln363_1_fu_522_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_116 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln363_fu_484_p2 == 1'd0)) begin
            indvar_flatten_fu_120 <= add_ln363_1_fu_490_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_120 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln363_fu_484_p2 == 1'd0)) begin
            j_fu_112 <= add_ln364_fu_553_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_112 <= 5'd0;
        end
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_116;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_120;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_j_load = 5'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_112;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_0_ce1 = 1'b1;
    end else begin
        connectivity_mask_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd0))) begin
        connectivity_mask_0_we1 = 1'b1;
    end else begin
        connectivity_mask_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_10_ce1 = 1'b1;
    end else begin
        connectivity_mask_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd10))) begin
        connectivity_mask_10_we1 = 1'b1;
    end else begin
        connectivity_mask_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_11_ce1 = 1'b1;
    end else begin
        connectivity_mask_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd11))) begin
        connectivity_mask_11_we1 = 1'b1;
    end else begin
        connectivity_mask_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_12_ce1 = 1'b1;
    end else begin
        connectivity_mask_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd12))) begin
        connectivity_mask_12_we1 = 1'b1;
    end else begin
        connectivity_mask_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_13_ce1 = 1'b1;
    end else begin
        connectivity_mask_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd13))) begin
        connectivity_mask_13_we1 = 1'b1;
    end else begin
        connectivity_mask_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_14_ce1 = 1'b1;
    end else begin
        connectivity_mask_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd14))) begin
        connectivity_mask_14_we1 = 1'b1;
    end else begin
        connectivity_mask_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_15_ce1 = 1'b1;
    end else begin
        connectivity_mask_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd15))) begin
        connectivity_mask_15_we1 = 1'b1;
    end else begin
        connectivity_mask_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_16_ce1 = 1'b1;
    end else begin
        connectivity_mask_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd16))) begin
        connectivity_mask_16_we1 = 1'b1;
    end else begin
        connectivity_mask_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_17_ce1 = 1'b1;
    end else begin
        connectivity_mask_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd17))) begin
        connectivity_mask_17_we1 = 1'b1;
    end else begin
        connectivity_mask_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_18_ce1 = 1'b1;
    end else begin
        connectivity_mask_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln363_fu_514_p3 == 5'd0) & ~(select_ln363_fu_514_p3 == 5'd1) & ~(select_ln363_fu_514_p3 == 5'd2) & ~(select_ln363_fu_514_p3 == 5'd3) & ~(select_ln363_fu_514_p3 == 5'd4) & ~(select_ln363_fu_514_p3 == 5'd5) & ~(select_ln363_fu_514_p3 == 5'd6) & ~(select_ln363_fu_514_p3 == 5'd7) & ~(select_ln363_fu_514_p3 == 5'd8) & ~(select_ln363_fu_514_p3 == 5'd9) & ~(select_ln363_fu_514_p3 == 5'd10) & ~(select_ln363_fu_514_p3 == 5'd11) & ~(select_ln363_fu_514_p3 == 5'd12) & ~(select_ln363_fu_514_p3 == 5'd13) & ~(select_ln363_fu_514_p3 == 5'd14) & ~(select_ln363_fu_514_p3 == 5'd15) & ~(select_ln363_fu_514_p3 == 5'd16) & ~(select_ln363_fu_514_p3 == 5'd17) & (ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_18_we1 = 1'b1;
    end else begin
        connectivity_mask_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_1_ce1 = 1'b1;
    end else begin
        connectivity_mask_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd1))) begin
        connectivity_mask_1_we1 = 1'b1;
    end else begin
        connectivity_mask_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_2_ce1 = 1'b1;
    end else begin
        connectivity_mask_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd2))) begin
        connectivity_mask_2_we1 = 1'b1;
    end else begin
        connectivity_mask_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_3_ce1 = 1'b1;
    end else begin
        connectivity_mask_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd3))) begin
        connectivity_mask_3_we1 = 1'b1;
    end else begin
        connectivity_mask_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_4_ce1 = 1'b1;
    end else begin
        connectivity_mask_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd4))) begin
        connectivity_mask_4_we1 = 1'b1;
    end else begin
        connectivity_mask_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_5_ce1 = 1'b1;
    end else begin
        connectivity_mask_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd5))) begin
        connectivity_mask_5_we1 = 1'b1;
    end else begin
        connectivity_mask_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_6_ce1 = 1'b1;
    end else begin
        connectivity_mask_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd6))) begin
        connectivity_mask_6_we1 = 1'b1;
    end else begin
        connectivity_mask_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_7_ce1 = 1'b1;
    end else begin
        connectivity_mask_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd7))) begin
        connectivity_mask_7_we1 = 1'b1;
    end else begin
        connectivity_mask_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_8_ce1 = 1'b1;
    end else begin
        connectivity_mask_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd8))) begin
        connectivity_mask_8_we1 = 1'b1;
    end else begin
        connectivity_mask_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        connectivity_mask_9_ce1 = 1'b1;
    end else begin
        connectivity_mask_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln363_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (select_ln363_fu_514_p3 == 5'd9))) begin
        connectivity_mask_9_we1 = 1'b1;
    end else begin
        connectivity_mask_9_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln363_1_fu_490_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln363_fu_502_p2 = (ap_sig_allocacmp_i_load + 5'd1);

assign add_ln364_fu_553_p2 = (select_ln363_fu_514_p3 + 5'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign connectivity_mask_0_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_0_d1 = 32'd0;

assign connectivity_mask_10_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_10_d1 = 32'd0;

assign connectivity_mask_11_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_11_d1 = 32'd0;

assign connectivity_mask_12_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_12_d1 = 32'd0;

assign connectivity_mask_13_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_13_d1 = 32'd0;

assign connectivity_mask_14_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_14_d1 = 32'd0;

assign connectivity_mask_15_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_15_d1 = 32'd0;

assign connectivity_mask_16_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_16_d1 = 32'd0;

assign connectivity_mask_17_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_17_d1 = 32'd0;

assign connectivity_mask_18_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_18_d1 = 32'd0;

assign connectivity_mask_1_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_1_d1 = 32'd0;

assign connectivity_mask_2_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_2_d1 = 32'd0;

assign connectivity_mask_3_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_3_d1 = 32'd0;

assign connectivity_mask_4_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_4_d1 = 32'd0;

assign connectivity_mask_5_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_5_d1 = 32'd0;

assign connectivity_mask_6_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_6_d1 = 32'd0;

assign connectivity_mask_7_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_7_d1 = 32'd0;

assign connectivity_mask_8_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_8_d1 = 32'd0;

assign connectivity_mask_9_address1 = zext_ln363_fu_530_p1;

assign connectivity_mask_9_d1 = 32'd0;

assign icmp_ln363_fu_484_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln364_fu_508_p2 = ((ap_sig_allocacmp_j_load == 5'd19) ? 1'b1 : 1'b0);

assign select_ln363_1_fu_522_p3 = ((icmp_ln364_fu_508_p2[0:0] == 1'b1) ? add_ln363_fu_502_p2 : ap_sig_allocacmp_i_load);

assign select_ln363_fu_514_p3 = ((icmp_ln364_fu_508_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_j_load);

assign zext_ln363_fu_530_p1 = select_ln363_1_fu_522_p3;

endmodule //GAT_compute_one_graph_compute_connectivity_mask_Pipeline_VITIS_LOOP_363_1_VITIS_LOOP_364_2
