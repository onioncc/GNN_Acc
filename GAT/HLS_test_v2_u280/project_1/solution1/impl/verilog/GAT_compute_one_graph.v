// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="GAT_compute_one_graph_GAT_compute_one_graph,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.317800,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=262,HLS_SYN_DSP=0,HLS_SYN_FF=34454,HLS_SYN_LUT=30611,HLS_VERSION=2021_1}" *)

module GAT_compute_one_graph (
        ap_clk,
        ap_rst_n,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_ID_WIDTH = 1;
parameter    C_M_AXI_MEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_MEM_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_USER_VALUE = 0;
parameter    C_M_AXI_MEM_PROT_VALUE = 0;
parameter    C_M_AXI_MEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_AWADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_AWID;
output  [7:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [C_M_AXI_MEM_AWUSER_WIDTH - 1:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_WDATA;
output  [C_M_AXI_MEM_WSTRB_WIDTH - 1:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_WID;
output  [C_M_AXI_MEM_WUSER_WIDTH - 1:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_ARADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_ARID;
output  [7:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [C_M_AXI_MEM_ARUSER_WIDTH - 1:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_RID;
input  [C_M_AXI_MEM_RUSER_WIDTH - 1:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_BID;
input  [C_M_AXI_MEM_BUSER_WIDTH - 1:0] m_axi_mem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] node_feature_in;
wire   [63:0] edge_list_in;
wire   [63:0] graph_attr;
wire   [63:0] num_heads_per_layer_in;
wire   [63:0] num_features_per_layer_in;
wire   [63:0] task_tb;
wire   [63:0] graph_pred_linear_weight_fixed;
wire   [63:0] graph_pred_linear_bias_fixed;
wire   [63:0] gat_net_scoring_fn_target_fixed;
wire   [63:0] gat_net_scoring_fn_source_fixed;
wire   [63:0] gat_net_linear_proj_weight_fixed;
wire   [63:0] gat_net_skip_proj_weight_fixed;
reg   [8:0] scoring_fn_target_V_address0;
reg    scoring_fn_target_V_ce0;
reg    scoring_fn_target_V_we0;
reg   [27:0] scoring_fn_target_V_d0;
wire   [27:0] scoring_fn_target_V_q0;
reg   [8:0] scoring_fn_source_V_address0;
reg    scoring_fn_source_V_ce0;
reg    scoring_fn_source_V_we0;
reg   [27:0] scoring_fn_source_V_d0;
wire   [27:0] scoring_fn_source_V_q0;
reg   [14:0] linear_proj_weight_V_address0;
reg    linear_proj_weight_V_ce0;
reg    linear_proj_weight_V_we0;
reg   [27:0] linear_proj_weight_V_d0;
wire   [27:0] linear_proj_weight_V_q0;
reg   [14:0] skip_proj_weight_V_address0;
reg    skip_proj_weight_V_ce0;
reg    skip_proj_weight_V_we0;
reg   [27:0] skip_proj_weight_V_d0;
wire   [27:0] skip_proj_weight_V_q0;
reg   [3:0] pred_linear_weight_V_address0;
reg    pred_linear_weight_V_ce0;
reg    pred_linear_weight_V_we0;
wire   [27:0] pred_linear_weight_V_q0;
reg   [2:0] num_heads_per_layer_address0;
reg    num_heads_per_layer_ce0;
wire   [31:0] num_heads_per_layer_q0;
reg   [2:0] num_features_per_layer_address0;
reg    num_features_per_layer_ce0;
reg    num_features_per_layer_we0;
wire   [31:0] num_features_per_layer_q0;
reg   [12:0] out_nodes_features_skip_concat_bias_V_address0;
reg    out_nodes_features_skip_concat_bias_V_ce0;
wire   [27:0] out_nodes_features_skip_concat_bias_V_q0;
reg   [12:0] out_nodes_features_skip_concat_bias_V_address1;
reg    out_nodes_features_skip_concat_bias_V_ce1;
reg    out_nodes_features_skip_concat_bias_V_we1;
reg   [27:0] out_nodes_features_skip_concat_bias_V_d1;
reg    edge_list_ce0;
wire   [31:0] edge_list_q0;
reg   [9:0] edge_list_address1;
reg    edge_list_ce1;
reg    edge_list_we1;
wire   [31:0] edge_list_q1;
reg   [13:0] connectivity_mask_address0;
reg    connectivity_mask_ce0;
wire   [31:0] connectivity_mask_q0;
reg    connectivity_mask_ce1;
reg    connectivity_mask_we1;
reg    h_graph_V_ce0;
wire   [27:0] h_graph_V_q0;
reg    h_graph_V_ce1;
reg    h_graph_V_we1;
reg    mem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    mem_blk_n_R;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg   [31:0] reg_464;
wire    ap_CS_fsm_state19;
wire    grp_load_graph_fu_366_ap_ready;
wire    grp_load_graph_fu_366_ap_done;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire    grp_CONV_fu_390_ap_ready;
wire    grp_CONV_fu_390_ap_done;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
reg   [31:0] reg_469;
reg  signed [31:0] reg_474;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
reg  signed [31:0] reg_478;
reg  signed [31:0] reg_482;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state27;
reg  signed [31:0] reg_486;
wire   [31:0] grp_fu_490_p2;
reg   [31:0] reg_502;
wire   [31:0] grp_fu_496_p2;
reg   [31:0] reg_507;
reg   [63:0] gat_net_skip_proj_weight_fixed_read_reg_573;
reg   [63:0] gat_net_linear_proj_weight_fixed_read_reg_579;
reg   [63:0] gat_net_scoring_fn_source_fixed_read_reg_585;
reg   [63:0] gat_net_scoring_fn_target_fixed_read_reg_591;
reg   [63:0] graph_pred_linear_weight_fixed_read_reg_597;
reg   [63:0] task_tb_read_reg_602;
reg   [63:0] num_features_per_layer_in_read_reg_607;
reg   [63:0] num_heads_per_layer_in_read_reg_612;
reg   [63:0] edge_list_in_read_reg_617;
reg   [63:0] node_feature_in_read_reg_622;
reg   [63:0] mem_addr_reg_627;
reg   [31:0] num_of_nodes_reg_633;
reg   [31:0] num_of_edges_reg_641;
wire   [30:0] trunc_ln350_fu_532_p1;
reg   [30:0] trunc_ln350_reg_646;
reg   [31:0] is_first_reg_651;
wire   [0:0] icmp_ln354_fu_536_p2;
reg   [0:0] icmp_ln354_reg_656;
wire    ap_CS_fsm_state12;
reg   [2:0] layer_2_reg_667;
wire    ap_CS_fsm_state14;
wire   [31:0] grp_fu_567_p2;
reg   [31:0] mul_ln372_reg_675;
wire    grp_load_weights_first_layer_fu_314_ap_start;
wire    grp_load_weights_first_layer_fu_314_ap_done;
wire    grp_load_weights_first_layer_fu_314_ap_idle;
wire    grp_load_weights_first_layer_fu_314_ap_ready;
wire    grp_load_weights_first_layer_fu_314_m_axi_mem_AWVALID;
wire   [63:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWADDR;
wire   [0:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWID;
wire   [31:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWLEN;
wire   [2:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWSIZE;
wire   [1:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWBURST;
wire   [1:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWLOCK;
wire   [3:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWCACHE;
wire   [2:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWPROT;
wire   [3:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWQOS;
wire   [3:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWREGION;
wire   [0:0] grp_load_weights_first_layer_fu_314_m_axi_mem_AWUSER;
wire    grp_load_weights_first_layer_fu_314_m_axi_mem_WVALID;
wire   [31:0] grp_load_weights_first_layer_fu_314_m_axi_mem_WDATA;
wire   [3:0] grp_load_weights_first_layer_fu_314_m_axi_mem_WSTRB;
wire    grp_load_weights_first_layer_fu_314_m_axi_mem_WLAST;
wire   [0:0] grp_load_weights_first_layer_fu_314_m_axi_mem_WID;
wire   [0:0] grp_load_weights_first_layer_fu_314_m_axi_mem_WUSER;
wire    grp_load_weights_first_layer_fu_314_m_axi_mem_ARVALID;
wire   [63:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARADDR;
wire   [0:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARID;
wire   [31:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARLEN;
wire   [2:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARSIZE;
wire   [1:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARBURST;
wire   [1:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARLOCK;
wire   [3:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARCACHE;
wire   [2:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARPROT;
wire   [3:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARQOS;
wire   [3:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARREGION;
wire   [0:0] grp_load_weights_first_layer_fu_314_m_axi_mem_ARUSER;
wire    grp_load_weights_first_layer_fu_314_m_axi_mem_RREADY;
wire    grp_load_weights_first_layer_fu_314_m_axi_mem_BREADY;
wire   [8:0] grp_load_weights_first_layer_fu_314_scoring_fn_target_V_address0;
wire    grp_load_weights_first_layer_fu_314_scoring_fn_target_V_ce0;
wire    grp_load_weights_first_layer_fu_314_scoring_fn_target_V_we0;
wire   [27:0] grp_load_weights_first_layer_fu_314_scoring_fn_target_V_d0;
wire   [8:0] grp_load_weights_first_layer_fu_314_scoring_fn_source_V_address0;
wire    grp_load_weights_first_layer_fu_314_scoring_fn_source_V_ce0;
wire    grp_load_weights_first_layer_fu_314_scoring_fn_source_V_we0;
wire   [27:0] grp_load_weights_first_layer_fu_314_scoring_fn_source_V_d0;
wire   [14:0] grp_load_weights_first_layer_fu_314_linear_proj_weight_V_address0;
wire    grp_load_weights_first_layer_fu_314_linear_proj_weight_V_ce0;
wire    grp_load_weights_first_layer_fu_314_linear_proj_weight_V_we0;
wire   [27:0] grp_load_weights_first_layer_fu_314_linear_proj_weight_V_d0;
wire   [14:0] grp_load_weights_first_layer_fu_314_skip_proj_weight_V_address0;
wire    grp_load_weights_first_layer_fu_314_skip_proj_weight_V_ce0;
wire    grp_load_weights_first_layer_fu_314_skip_proj_weight_V_we0;
wire   [27:0] grp_load_weights_first_layer_fu_314_skip_proj_weight_V_d0;
wire    grp_load_weights_one_layer_fu_332_ap_start;
wire    grp_load_weights_one_layer_fu_332_ap_done;
wire    grp_load_weights_one_layer_fu_332_ap_idle;
wire    grp_load_weights_one_layer_fu_332_ap_ready;
wire    grp_load_weights_one_layer_fu_332_m_axi_mem_AWVALID;
wire   [63:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWADDR;
wire   [0:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWID;
wire   [31:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWLEN;
wire   [2:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWSIZE;
wire   [1:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWBURST;
wire   [1:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWLOCK;
wire   [3:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWCACHE;
wire   [2:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWPROT;
wire   [3:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWQOS;
wire   [3:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWREGION;
wire   [0:0] grp_load_weights_one_layer_fu_332_m_axi_mem_AWUSER;
wire    grp_load_weights_one_layer_fu_332_m_axi_mem_WVALID;
wire   [31:0] grp_load_weights_one_layer_fu_332_m_axi_mem_WDATA;
wire   [3:0] grp_load_weights_one_layer_fu_332_m_axi_mem_WSTRB;
wire    grp_load_weights_one_layer_fu_332_m_axi_mem_WLAST;
wire   [0:0] grp_load_weights_one_layer_fu_332_m_axi_mem_WID;
wire   [0:0] grp_load_weights_one_layer_fu_332_m_axi_mem_WUSER;
wire    grp_load_weights_one_layer_fu_332_m_axi_mem_ARVALID;
wire   [63:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARADDR;
wire   [0:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARID;
wire   [31:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARLEN;
wire   [2:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARSIZE;
wire   [1:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARBURST;
wire   [1:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARLOCK;
wire   [3:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARCACHE;
wire   [2:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARPROT;
wire   [3:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARQOS;
wire   [3:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARREGION;
wire   [0:0] grp_load_weights_one_layer_fu_332_m_axi_mem_ARUSER;
wire    grp_load_weights_one_layer_fu_332_m_axi_mem_RREADY;
wire    grp_load_weights_one_layer_fu_332_m_axi_mem_BREADY;
wire   [8:0] grp_load_weights_one_layer_fu_332_scoring_fn_target_V_address0;
wire    grp_load_weights_one_layer_fu_332_scoring_fn_target_V_ce0;
wire    grp_load_weights_one_layer_fu_332_scoring_fn_target_V_we0;
wire   [27:0] grp_load_weights_one_layer_fu_332_scoring_fn_target_V_d0;
wire   [8:0] grp_load_weights_one_layer_fu_332_scoring_fn_source_V_address0;
wire    grp_load_weights_one_layer_fu_332_scoring_fn_source_V_ce0;
wire    grp_load_weights_one_layer_fu_332_scoring_fn_source_V_we0;
wire   [27:0] grp_load_weights_one_layer_fu_332_scoring_fn_source_V_d0;
wire   [14:0] grp_load_weights_one_layer_fu_332_linear_proj_weight_V_address0;
wire    grp_load_weights_one_layer_fu_332_linear_proj_weight_V_ce0;
wire    grp_load_weights_one_layer_fu_332_linear_proj_weight_V_we0;
wire   [27:0] grp_load_weights_one_layer_fu_332_linear_proj_weight_V_d0;
wire   [14:0] grp_load_weights_one_layer_fu_332_skip_proj_weight_V_address0;
wire    grp_load_weights_one_layer_fu_332_skip_proj_weight_V_ce0;
wire    grp_load_weights_one_layer_fu_332_skip_proj_weight_V_we0;
wire   [27:0] grp_load_weights_one_layer_fu_332_skip_proj_weight_V_d0;
wire    grp_load_misc_weights_fu_351_ap_start;
wire    grp_load_misc_weights_fu_351_ap_done;
wire    grp_load_misc_weights_fu_351_ap_idle;
wire    grp_load_misc_weights_fu_351_ap_ready;
wire    grp_load_misc_weights_fu_351_m_axi_mem_AWVALID;
wire   [63:0] grp_load_misc_weights_fu_351_m_axi_mem_AWADDR;
wire   [0:0] grp_load_misc_weights_fu_351_m_axi_mem_AWID;
wire   [31:0] grp_load_misc_weights_fu_351_m_axi_mem_AWLEN;
wire   [2:0] grp_load_misc_weights_fu_351_m_axi_mem_AWSIZE;
wire   [1:0] grp_load_misc_weights_fu_351_m_axi_mem_AWBURST;
wire   [1:0] grp_load_misc_weights_fu_351_m_axi_mem_AWLOCK;
wire   [3:0] grp_load_misc_weights_fu_351_m_axi_mem_AWCACHE;
wire   [2:0] grp_load_misc_weights_fu_351_m_axi_mem_AWPROT;
wire   [3:0] grp_load_misc_weights_fu_351_m_axi_mem_AWQOS;
wire   [3:0] grp_load_misc_weights_fu_351_m_axi_mem_AWREGION;
wire   [0:0] grp_load_misc_weights_fu_351_m_axi_mem_AWUSER;
wire    grp_load_misc_weights_fu_351_m_axi_mem_WVALID;
wire   [31:0] grp_load_misc_weights_fu_351_m_axi_mem_WDATA;
wire   [3:0] grp_load_misc_weights_fu_351_m_axi_mem_WSTRB;
wire    grp_load_misc_weights_fu_351_m_axi_mem_WLAST;
wire   [0:0] grp_load_misc_weights_fu_351_m_axi_mem_WID;
wire   [0:0] grp_load_misc_weights_fu_351_m_axi_mem_WUSER;
wire    grp_load_misc_weights_fu_351_m_axi_mem_ARVALID;
wire   [63:0] grp_load_misc_weights_fu_351_m_axi_mem_ARADDR;
wire   [0:0] grp_load_misc_weights_fu_351_m_axi_mem_ARID;
wire   [31:0] grp_load_misc_weights_fu_351_m_axi_mem_ARLEN;
wire   [2:0] grp_load_misc_weights_fu_351_m_axi_mem_ARSIZE;
wire   [1:0] grp_load_misc_weights_fu_351_m_axi_mem_ARBURST;
wire   [1:0] grp_load_misc_weights_fu_351_m_axi_mem_ARLOCK;
wire   [3:0] grp_load_misc_weights_fu_351_m_axi_mem_ARCACHE;
wire   [2:0] grp_load_misc_weights_fu_351_m_axi_mem_ARPROT;
wire   [3:0] grp_load_misc_weights_fu_351_m_axi_mem_ARQOS;
wire   [3:0] grp_load_misc_weights_fu_351_m_axi_mem_ARREGION;
wire   [0:0] grp_load_misc_weights_fu_351_m_axi_mem_ARUSER;
wire    grp_load_misc_weights_fu_351_m_axi_mem_RREADY;
wire    grp_load_misc_weights_fu_351_m_axi_mem_BREADY;
wire   [3:0] grp_load_misc_weights_fu_351_pred_linear_weight_V_address0;
wire    grp_load_misc_weights_fu_351_pred_linear_weight_V_ce0;
wire    grp_load_misc_weights_fu_351_pred_linear_weight_V_we0;
wire   [27:0] grp_load_misc_weights_fu_351_pred_linear_weight_V_d0;
wire   [2:0] grp_load_misc_weights_fu_351_num_heads_per_layer_address0;
wire    grp_load_misc_weights_fu_351_num_heads_per_layer_ce0;
wire    grp_load_misc_weights_fu_351_num_heads_per_layer_we0;
wire   [31:0] grp_load_misc_weights_fu_351_num_heads_per_layer_d0;
wire   [2:0] grp_load_misc_weights_fu_351_num_features_per_layer_address0;
wire    grp_load_misc_weights_fu_351_num_features_per_layer_ce0;
wire    grp_load_misc_weights_fu_351_num_features_per_layer_we0;
wire   [31:0] grp_load_misc_weights_fu_351_num_features_per_layer_d0;
wire    grp_load_graph_fu_366_ap_start;
wire    grp_load_graph_fu_366_ap_idle;
wire    grp_load_graph_fu_366_m_axi_mem_AWVALID;
wire   [63:0] grp_load_graph_fu_366_m_axi_mem_AWADDR;
wire   [0:0] grp_load_graph_fu_366_m_axi_mem_AWID;
wire   [31:0] grp_load_graph_fu_366_m_axi_mem_AWLEN;
wire   [2:0] grp_load_graph_fu_366_m_axi_mem_AWSIZE;
wire   [1:0] grp_load_graph_fu_366_m_axi_mem_AWBURST;
wire   [1:0] grp_load_graph_fu_366_m_axi_mem_AWLOCK;
wire   [3:0] grp_load_graph_fu_366_m_axi_mem_AWCACHE;
wire   [2:0] grp_load_graph_fu_366_m_axi_mem_AWPROT;
wire   [3:0] grp_load_graph_fu_366_m_axi_mem_AWQOS;
wire   [3:0] grp_load_graph_fu_366_m_axi_mem_AWREGION;
wire   [0:0] grp_load_graph_fu_366_m_axi_mem_AWUSER;
wire    grp_load_graph_fu_366_m_axi_mem_WVALID;
wire   [31:0] grp_load_graph_fu_366_m_axi_mem_WDATA;
wire   [3:0] grp_load_graph_fu_366_m_axi_mem_WSTRB;
wire    grp_load_graph_fu_366_m_axi_mem_WLAST;
wire   [0:0] grp_load_graph_fu_366_m_axi_mem_WID;
wire   [0:0] grp_load_graph_fu_366_m_axi_mem_WUSER;
wire    grp_load_graph_fu_366_m_axi_mem_ARVALID;
wire   [63:0] grp_load_graph_fu_366_m_axi_mem_ARADDR;
wire   [0:0] grp_load_graph_fu_366_m_axi_mem_ARID;
wire   [31:0] grp_load_graph_fu_366_m_axi_mem_ARLEN;
wire   [2:0] grp_load_graph_fu_366_m_axi_mem_ARSIZE;
wire   [1:0] grp_load_graph_fu_366_m_axi_mem_ARBURST;
wire   [1:0] grp_load_graph_fu_366_m_axi_mem_ARLOCK;
wire   [3:0] grp_load_graph_fu_366_m_axi_mem_ARCACHE;
wire   [2:0] grp_load_graph_fu_366_m_axi_mem_ARPROT;
wire   [3:0] grp_load_graph_fu_366_m_axi_mem_ARQOS;
wire   [3:0] grp_load_graph_fu_366_m_axi_mem_ARREGION;
wire   [0:0] grp_load_graph_fu_366_m_axi_mem_ARUSER;
wire    grp_load_graph_fu_366_m_axi_mem_RREADY;
wire    grp_load_graph_fu_366_m_axi_mem_BREADY;
wire   [12:0] grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_address1;
wire    grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_ce1;
wire    grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_we1;
wire   [27:0] grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_d1;
wire   [9:0] grp_load_graph_fu_366_edge_list_address1;
wire    grp_load_graph_fu_366_edge_list_ce1;
wire    grp_load_graph_fu_366_edge_list_we1;
wire   [31:0] grp_load_graph_fu_366_edge_list_d1;
wire    grp_compute_connectivity_mask_fu_380_ap_start;
wire    grp_compute_connectivity_mask_fu_380_ap_done;
wire    grp_compute_connectivity_mask_fu_380_ap_idle;
wire    grp_compute_connectivity_mask_fu_380_ap_ready;
wire   [13:0] grp_compute_connectivity_mask_fu_380_connectivity_mask_address0;
wire    grp_compute_connectivity_mask_fu_380_connectivity_mask_ce0;
wire   [13:0] grp_compute_connectivity_mask_fu_380_connectivity_mask_address1;
wire    grp_compute_connectivity_mask_fu_380_connectivity_mask_ce1;
wire    grp_compute_connectivity_mask_fu_380_connectivity_mask_we1;
wire   [31:0] grp_compute_connectivity_mask_fu_380_connectivity_mask_d1;
wire   [9:0] grp_compute_connectivity_mask_fu_380_edge_list_address0;
wire    grp_compute_connectivity_mask_fu_380_edge_list_ce0;
wire   [9:0] grp_compute_connectivity_mask_fu_380_edge_list_address1;
wire    grp_compute_connectivity_mask_fu_380_edge_list_ce1;
wire   [31:0] grp_compute_connectivity_mask_fu_380_grp_fu_680_p_din0;
wire   [31:0] grp_compute_connectivity_mask_fu_380_grp_fu_680_p_din1;
wire    grp_compute_connectivity_mask_fu_380_grp_fu_680_p_ce;
wire    grp_CONV_fu_390_ap_start;
wire    grp_CONV_fu_390_ap_idle;
reg   [31:0] grp_CONV_fu_390_num_in_features;
reg   [2:0] grp_CONV_fu_390_layer;
wire   [12:0] grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_address0;
wire    grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_ce0;
wire   [12:0] grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_address1;
wire    grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_ce1;
wire    grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_we1;
wire   [27:0] grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_d1;
wire   [14:0] grp_CONV_fu_390_linear_proj_weight_V_address0;
wire    grp_CONV_fu_390_linear_proj_weight_V_ce0;
wire   [8:0] grp_CONV_fu_390_scoring_fn_source_V_address0;
wire    grp_CONV_fu_390_scoring_fn_source_V_ce0;
wire   [8:0] grp_CONV_fu_390_scoring_fn_target_V_address0;
wire    grp_CONV_fu_390_scoring_fn_target_V_ce0;
wire   [13:0] grp_CONV_fu_390_connectivity_mask_address0;
wire    grp_CONV_fu_390_connectivity_mask_ce0;
wire   [14:0] grp_CONV_fu_390_skip_proj_weight_V_address0;
wire    grp_CONV_fu_390_skip_proj_weight_V_ce0;
wire    grp_global_mean_pooling_fu_440_ap_start;
wire    grp_global_mean_pooling_fu_440_ap_done;
wire    grp_global_mean_pooling_fu_440_ap_idle;
wire    grp_global_mean_pooling_fu_440_ap_ready;
wire   [12:0] grp_global_mean_pooling_fu_440_out_nodes_features_skip_concat_bias_V_address0;
wire    grp_global_mean_pooling_fu_440_out_nodes_features_skip_concat_bias_V_ce0;
wire   [6:0] grp_global_mean_pooling_fu_440_h_graph_V_address1;
wire    grp_global_mean_pooling_fu_440_h_graph_V_ce1;
wire    grp_global_mean_pooling_fu_440_h_graph_V_we1;
wire   [27:0] grp_global_mean_pooling_fu_440_h_graph_V_d1;
wire   [2:0] grp_global_mean_pooling_fu_440_num_features_per_layer_address0;
wire    grp_global_mean_pooling_fu_440_num_features_per_layer_ce0;
wire    grp_global_graph_prediction_fu_451_ap_start;
wire    grp_global_graph_prediction_fu_451_ap_done;
wire    grp_global_graph_prediction_fu_451_ap_idle;
wire    grp_global_graph_prediction_fu_451_ap_ready;
wire    grp_global_graph_prediction_fu_451_m_axi_mem_AWVALID;
wire   [63:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWADDR;
wire   [0:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWID;
wire   [31:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWLEN;
wire   [2:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWSIZE;
wire   [1:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWBURST;
wire   [1:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWLOCK;
wire   [3:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWCACHE;
wire   [2:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWPROT;
wire   [3:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWQOS;
wire   [3:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWREGION;
wire   [0:0] grp_global_graph_prediction_fu_451_m_axi_mem_AWUSER;
wire    grp_global_graph_prediction_fu_451_m_axi_mem_WVALID;
wire   [31:0] grp_global_graph_prediction_fu_451_m_axi_mem_WDATA;
wire   [3:0] grp_global_graph_prediction_fu_451_m_axi_mem_WSTRB;
wire    grp_global_graph_prediction_fu_451_m_axi_mem_WLAST;
wire   [0:0] grp_global_graph_prediction_fu_451_m_axi_mem_WID;
wire   [0:0] grp_global_graph_prediction_fu_451_m_axi_mem_WUSER;
wire    grp_global_graph_prediction_fu_451_m_axi_mem_ARVALID;
wire   [63:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARADDR;
wire   [0:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARID;
wire   [31:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARLEN;
wire   [2:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARSIZE;
wire   [1:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARBURST;
wire   [1:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARLOCK;
wire   [3:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARCACHE;
wire   [2:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARPROT;
wire   [3:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARQOS;
wire   [3:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARREGION;
wire   [0:0] grp_global_graph_prediction_fu_451_m_axi_mem_ARUSER;
wire    grp_global_graph_prediction_fu_451_m_axi_mem_RREADY;
wire    grp_global_graph_prediction_fu_451_m_axi_mem_BREADY;
wire   [6:0] grp_global_graph_prediction_fu_451_h_graph_V_address0;
wire    grp_global_graph_prediction_fu_451_h_graph_V_ce0;
wire   [3:0] grp_global_graph_prediction_fu_451_pred_linear_weight_V_address0;
wire    grp_global_graph_prediction_fu_451_pred_linear_weight_V_ce0;
wire   [2:0] grp_global_graph_prediction_fu_451_num_features_per_layer_address0;
wire    grp_global_graph_prediction_fu_451_num_features_per_layer_ce0;
reg    mem_AWVALID;
wire    mem_AWREADY;
reg    mem_WVALID;
wire    mem_WREADY;
reg    mem_ARVALID;
wire    mem_ARREADY;
reg   [63:0] mem_ARADDR;
reg   [0:0] mem_ARID;
reg   [31:0] mem_ARLEN;
reg   [2:0] mem_ARSIZE;
reg   [1:0] mem_ARBURST;
reg   [1:0] mem_ARLOCK;
reg   [3:0] mem_ARCACHE;
reg   [2:0] mem_ARPROT;
reg   [3:0] mem_ARQOS;
reg   [3:0] mem_ARREGION;
reg   [0:0] mem_ARUSER;
wire    mem_RVALID;
reg    mem_RREADY;
wire   [31:0] mem_RDATA;
wire    mem_RLAST;
wire   [0:0] mem_RID;
wire   [0:0] mem_RUSER;
wire   [1:0] mem_RRESP;
wire    mem_BVALID;
reg    mem_BREADY;
wire   [1:0] mem_BRESP;
wire   [0:0] mem_BID;
wire   [0:0] mem_BUSER;
reg    grp_load_weights_first_layer_fu_314_ap_start_reg;
wire    ap_CS_fsm_state13;
reg    grp_load_weights_one_layer_fu_332_ap_start_reg;
wire   [0:0] icmp_ln357_fu_550_p2;
wire    ap_CS_fsm_state15;
reg    grp_load_misc_weights_fu_351_ap_start_reg;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
reg    grp_load_graph_fu_366_ap_start_reg;
wire    ap_CS_fsm_state18;
reg    grp_compute_connectivity_mask_fu_380_ap_start_reg;
wire    ap_CS_fsm_state20;
reg    grp_CONV_fu_390_ap_start_reg;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
reg    grp_global_mean_pooling_fu_440_ap_start_reg;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
reg    grp_global_graph_prediction_fu_451_ap_start_reg;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire  signed [63:0] sext_ln350_fu_522_p1;
reg   [2:0] layer_fu_210;
wire   [2:0] layer_3_fu_556_p2;
wire   [61:0] trunc_ln_fu_512_p4;
reg    grp_fu_490_ce;
reg    grp_fu_496_ce;
reg    grp_fu_567_ce;
wire   [63:0] grp_fu_680_p2;
reg    grp_fu_680_ce;
reg   [35:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_block_state17_on_subcall_done;
reg    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
reg    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
reg    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
reg    ap_ST_fsm_state36_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
#0 grp_load_weights_first_layer_fu_314_ap_start_reg = 1'b0;
#0 grp_load_weights_one_layer_fu_332_ap_start_reg = 1'b0;
#0 grp_load_misc_weights_fu_351_ap_start_reg = 1'b0;
#0 grp_load_graph_fu_366_ap_start_reg = 1'b0;
#0 grp_compute_connectivity_mask_fu_380_ap_start_reg = 1'b0;
#0 grp_CONV_fu_390_ap_start_reg = 1'b0;
#0 grp_global_mean_pooling_fu_440_ap_start_reg = 1'b0;
#0 grp_global_graph_prediction_fu_451_ap_start_reg = 1'b0;
end

GAT_compute_one_graph_scoring_fn_target_V #(
    .DataWidth( 28 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
scoring_fn_target_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(scoring_fn_target_V_address0),
    .ce0(scoring_fn_target_V_ce0),
    .we0(scoring_fn_target_V_we0),
    .d0(scoring_fn_target_V_d0),
    .q0(scoring_fn_target_V_q0)
);

GAT_compute_one_graph_scoring_fn_target_V #(
    .DataWidth( 28 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
scoring_fn_source_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(scoring_fn_source_V_address0),
    .ce0(scoring_fn_source_V_ce0),
    .we0(scoring_fn_source_V_we0),
    .d0(scoring_fn_source_V_d0),
    .q0(scoring_fn_source_V_q0)
);

GAT_compute_one_graph_linear_proj_weight_V #(
    .DataWidth( 28 ),
    .AddressRange( 20480 ),
    .AddressWidth( 15 ))
linear_proj_weight_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(linear_proj_weight_V_address0),
    .ce0(linear_proj_weight_V_ce0),
    .we0(linear_proj_weight_V_we0),
    .d0(linear_proj_weight_V_d0),
    .q0(linear_proj_weight_V_q0)
);

GAT_compute_one_graph_linear_proj_weight_V #(
    .DataWidth( 28 ),
    .AddressRange( 20480 ),
    .AddressWidth( 15 ))
skip_proj_weight_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(skip_proj_weight_V_address0),
    .ce0(skip_proj_weight_V_ce0),
    .we0(skip_proj_weight_V_we0),
    .d0(skip_proj_weight_V_d0),
    .q0(skip_proj_weight_V_q0)
);

GAT_compute_one_graph_pred_linear_weight_V #(
    .DataWidth( 28 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
pred_linear_weight_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pred_linear_weight_V_address0),
    .ce0(pred_linear_weight_V_ce0),
    .we0(pred_linear_weight_V_we0),
    .d0(grp_load_misc_weights_fu_351_pred_linear_weight_V_d0),
    .q0(pred_linear_weight_V_q0)
);

GAT_compute_one_graph_num_heads_per_layer #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
num_heads_per_layer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(num_heads_per_layer_address0),
    .ce0(num_heads_per_layer_ce0),
    .we0(grp_load_misc_weights_fu_351_num_heads_per_layer_we0),
    .d0(grp_load_misc_weights_fu_351_num_heads_per_layer_d0),
    .q0(num_heads_per_layer_q0)
);

GAT_compute_one_graph_num_heads_per_layer #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
num_features_per_layer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(num_features_per_layer_address0),
    .ce0(num_features_per_layer_ce0),
    .we0(num_features_per_layer_we0),
    .d0(grp_load_misc_weights_fu_351_num_features_per_layer_d0),
    .q0(num_features_per_layer_q0)
);

GAT_compute_one_graph_CONV_nodes_features_proj_V #(
    .DataWidth( 28 ),
    .AddressRange( 6400 ),
    .AddressWidth( 13 ))
out_nodes_features_skip_concat_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_nodes_features_skip_concat_bias_V_address0),
    .ce0(out_nodes_features_skip_concat_bias_V_ce0),
    .q0(out_nodes_features_skip_concat_bias_V_q0),
    .address1(out_nodes_features_skip_concat_bias_V_address1),
    .ce1(out_nodes_features_skip_concat_bias_V_ce1),
    .we1(out_nodes_features_skip_concat_bias_V_we1),
    .d1(out_nodes_features_skip_concat_bias_V_d1)
);

GAT_compute_one_graph_edge_list #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
edge_list_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_compute_connectivity_mask_fu_380_edge_list_address0),
    .ce0(edge_list_ce0),
    .q0(edge_list_q0),
    .address1(edge_list_address1),
    .ce1(edge_list_ce1),
    .we1(edge_list_we1),
    .d1(grp_load_graph_fu_366_edge_list_d1),
    .q1(edge_list_q1)
);

GAT_compute_one_graph_connectivity_mask #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
connectivity_mask_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(connectivity_mask_address0),
    .ce0(connectivity_mask_ce0),
    .q0(connectivity_mask_q0),
    .address1(grp_compute_connectivity_mask_fu_380_connectivity_mask_address1),
    .ce1(connectivity_mask_ce1),
    .we1(connectivity_mask_we1),
    .d1(grp_compute_connectivity_mask_fu_380_connectivity_mask_d1)
);

GAT_compute_one_graph_h_graph_V #(
    .DataWidth( 28 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
h_graph_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_global_graph_prediction_fu_451_h_graph_V_address0),
    .ce0(h_graph_V_ce0),
    .q0(h_graph_V_q0),
    .address1(grp_global_mean_pooling_fu_440_h_graph_V_address1),
    .ce1(h_graph_V_ce1),
    .we1(h_graph_V_we1),
    .d1(grp_global_mean_pooling_fu_440_h_graph_V_d1)
);

GAT_compute_one_graph_load_weights_first_layer grp_load_weights_first_layer_fu_314(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_weights_first_layer_fu_314_ap_start),
    .ap_done(grp_load_weights_first_layer_fu_314_ap_done),
    .ap_idle(grp_load_weights_first_layer_fu_314_ap_idle),
    .ap_ready(grp_load_weights_first_layer_fu_314_ap_ready),
    .m_axi_mem_AWVALID(grp_load_weights_first_layer_fu_314_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_load_weights_first_layer_fu_314_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_load_weights_first_layer_fu_314_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_load_weights_first_layer_fu_314_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_load_weights_first_layer_fu_314_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_load_weights_first_layer_fu_314_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_load_weights_first_layer_fu_314_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_load_weights_first_layer_fu_314_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_load_weights_first_layer_fu_314_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_load_weights_first_layer_fu_314_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_load_weights_first_layer_fu_314_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_load_weights_first_layer_fu_314_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_load_weights_first_layer_fu_314_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_load_weights_first_layer_fu_314_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_load_weights_first_layer_fu_314_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_load_weights_first_layer_fu_314_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_load_weights_first_layer_fu_314_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_load_weights_first_layer_fu_314_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_load_weights_first_layer_fu_314_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(mem_ARREADY),
    .m_axi_mem_ARADDR(grp_load_weights_first_layer_fu_314_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_load_weights_first_layer_fu_314_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_load_weights_first_layer_fu_314_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_load_weights_first_layer_fu_314_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_load_weights_first_layer_fu_314_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_load_weights_first_layer_fu_314_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_load_weights_first_layer_fu_314_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_load_weights_first_layer_fu_314_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_load_weights_first_layer_fu_314_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_load_weights_first_layer_fu_314_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_load_weights_first_layer_fu_314_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(mem_RVALID),
    .m_axi_mem_RREADY(grp_load_weights_first_layer_fu_314_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(mem_RDATA),
    .m_axi_mem_RLAST(mem_RLAST),
    .m_axi_mem_RID(mem_RID),
    .m_axi_mem_RUSER(mem_RUSER),
    .m_axi_mem_RRESP(mem_RRESP),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_load_weights_first_layer_fu_314_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .gat_net_scoring_fn_target_fixed(gat_net_scoring_fn_target_fixed_read_reg_591),
    .gat_net_scoring_fn_source_fixed(gat_net_scoring_fn_source_fixed_read_reg_585),
    .gat_net_linear_proj_weight_fixed(gat_net_linear_proj_weight_fixed_read_reg_579),
    .gat_net_skip_proj_weight_fixed(gat_net_skip_proj_weight_fixed_read_reg_573),
    .scoring_fn_target_V_address0(grp_load_weights_first_layer_fu_314_scoring_fn_target_V_address0),
    .scoring_fn_target_V_ce0(grp_load_weights_first_layer_fu_314_scoring_fn_target_V_ce0),
    .scoring_fn_target_V_we0(grp_load_weights_first_layer_fu_314_scoring_fn_target_V_we0),
    .scoring_fn_target_V_d0(grp_load_weights_first_layer_fu_314_scoring_fn_target_V_d0),
    .scoring_fn_source_V_address0(grp_load_weights_first_layer_fu_314_scoring_fn_source_V_address0),
    .scoring_fn_source_V_ce0(grp_load_weights_first_layer_fu_314_scoring_fn_source_V_ce0),
    .scoring_fn_source_V_we0(grp_load_weights_first_layer_fu_314_scoring_fn_source_V_we0),
    .scoring_fn_source_V_d0(grp_load_weights_first_layer_fu_314_scoring_fn_source_V_d0),
    .linear_proj_weight_V_address0(grp_load_weights_first_layer_fu_314_linear_proj_weight_V_address0),
    .linear_proj_weight_V_ce0(grp_load_weights_first_layer_fu_314_linear_proj_weight_V_ce0),
    .linear_proj_weight_V_we0(grp_load_weights_first_layer_fu_314_linear_proj_weight_V_we0),
    .linear_proj_weight_V_d0(grp_load_weights_first_layer_fu_314_linear_proj_weight_V_d0),
    .skip_proj_weight_V_address0(grp_load_weights_first_layer_fu_314_skip_proj_weight_V_address0),
    .skip_proj_weight_V_ce0(grp_load_weights_first_layer_fu_314_skip_proj_weight_V_ce0),
    .skip_proj_weight_V_we0(grp_load_weights_first_layer_fu_314_skip_proj_weight_V_we0),
    .skip_proj_weight_V_d0(grp_load_weights_first_layer_fu_314_skip_proj_weight_V_d0)
);

GAT_compute_one_graph_load_weights_one_layer grp_load_weights_one_layer_fu_332(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_weights_one_layer_fu_332_ap_start),
    .ap_done(grp_load_weights_one_layer_fu_332_ap_done),
    .ap_idle(grp_load_weights_one_layer_fu_332_ap_idle),
    .ap_ready(grp_load_weights_one_layer_fu_332_ap_ready),
    .layer(layer_2_reg_667),
    .m_axi_mem_AWVALID(grp_load_weights_one_layer_fu_332_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_load_weights_one_layer_fu_332_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_load_weights_one_layer_fu_332_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_load_weights_one_layer_fu_332_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_load_weights_one_layer_fu_332_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_load_weights_one_layer_fu_332_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_load_weights_one_layer_fu_332_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_load_weights_one_layer_fu_332_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_load_weights_one_layer_fu_332_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_load_weights_one_layer_fu_332_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_load_weights_one_layer_fu_332_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_load_weights_one_layer_fu_332_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_load_weights_one_layer_fu_332_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_load_weights_one_layer_fu_332_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_load_weights_one_layer_fu_332_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_load_weights_one_layer_fu_332_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_load_weights_one_layer_fu_332_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_load_weights_one_layer_fu_332_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_load_weights_one_layer_fu_332_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(mem_ARREADY),
    .m_axi_mem_ARADDR(grp_load_weights_one_layer_fu_332_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_load_weights_one_layer_fu_332_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_load_weights_one_layer_fu_332_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_load_weights_one_layer_fu_332_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_load_weights_one_layer_fu_332_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_load_weights_one_layer_fu_332_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_load_weights_one_layer_fu_332_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_load_weights_one_layer_fu_332_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_load_weights_one_layer_fu_332_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_load_weights_one_layer_fu_332_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_load_weights_one_layer_fu_332_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(mem_RVALID),
    .m_axi_mem_RREADY(grp_load_weights_one_layer_fu_332_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(mem_RDATA),
    .m_axi_mem_RLAST(mem_RLAST),
    .m_axi_mem_RID(mem_RID),
    .m_axi_mem_RUSER(mem_RUSER),
    .m_axi_mem_RRESP(mem_RRESP),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_load_weights_one_layer_fu_332_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .gat_net_scoring_fn_target_fixed(gat_net_scoring_fn_target_fixed_read_reg_591),
    .gat_net_scoring_fn_source_fixed(gat_net_scoring_fn_source_fixed_read_reg_585),
    .gat_net_linear_proj_weight_fixed(gat_net_linear_proj_weight_fixed_read_reg_579),
    .gat_net_skip_proj_weight_fixed(gat_net_skip_proj_weight_fixed_read_reg_573),
    .scoring_fn_target_V_address0(grp_load_weights_one_layer_fu_332_scoring_fn_target_V_address0),
    .scoring_fn_target_V_ce0(grp_load_weights_one_layer_fu_332_scoring_fn_target_V_ce0),
    .scoring_fn_target_V_we0(grp_load_weights_one_layer_fu_332_scoring_fn_target_V_we0),
    .scoring_fn_target_V_d0(grp_load_weights_one_layer_fu_332_scoring_fn_target_V_d0),
    .scoring_fn_source_V_address0(grp_load_weights_one_layer_fu_332_scoring_fn_source_V_address0),
    .scoring_fn_source_V_ce0(grp_load_weights_one_layer_fu_332_scoring_fn_source_V_ce0),
    .scoring_fn_source_V_we0(grp_load_weights_one_layer_fu_332_scoring_fn_source_V_we0),
    .scoring_fn_source_V_d0(grp_load_weights_one_layer_fu_332_scoring_fn_source_V_d0),
    .linear_proj_weight_V_address0(grp_load_weights_one_layer_fu_332_linear_proj_weight_V_address0),
    .linear_proj_weight_V_ce0(grp_load_weights_one_layer_fu_332_linear_proj_weight_V_ce0),
    .linear_proj_weight_V_we0(grp_load_weights_one_layer_fu_332_linear_proj_weight_V_we0),
    .linear_proj_weight_V_d0(grp_load_weights_one_layer_fu_332_linear_proj_weight_V_d0),
    .skip_proj_weight_V_address0(grp_load_weights_one_layer_fu_332_skip_proj_weight_V_address0),
    .skip_proj_weight_V_ce0(grp_load_weights_one_layer_fu_332_skip_proj_weight_V_ce0),
    .skip_proj_weight_V_we0(grp_load_weights_one_layer_fu_332_skip_proj_weight_V_we0),
    .skip_proj_weight_V_d0(grp_load_weights_one_layer_fu_332_skip_proj_weight_V_d0)
);

GAT_compute_one_graph_load_misc_weights grp_load_misc_weights_fu_351(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_misc_weights_fu_351_ap_start),
    .ap_done(grp_load_misc_weights_fu_351_ap_done),
    .ap_idle(grp_load_misc_weights_fu_351_ap_idle),
    .ap_ready(grp_load_misc_weights_fu_351_ap_ready),
    .m_axi_mem_AWVALID(grp_load_misc_weights_fu_351_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_load_misc_weights_fu_351_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_load_misc_weights_fu_351_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_load_misc_weights_fu_351_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_load_misc_weights_fu_351_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_load_misc_weights_fu_351_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_load_misc_weights_fu_351_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_load_misc_weights_fu_351_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_load_misc_weights_fu_351_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_load_misc_weights_fu_351_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_load_misc_weights_fu_351_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_load_misc_weights_fu_351_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_load_misc_weights_fu_351_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_load_misc_weights_fu_351_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_load_misc_weights_fu_351_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_load_misc_weights_fu_351_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_load_misc_weights_fu_351_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_load_misc_weights_fu_351_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_load_misc_weights_fu_351_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(mem_ARREADY),
    .m_axi_mem_ARADDR(grp_load_misc_weights_fu_351_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_load_misc_weights_fu_351_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_load_misc_weights_fu_351_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_load_misc_weights_fu_351_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_load_misc_weights_fu_351_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_load_misc_weights_fu_351_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_load_misc_weights_fu_351_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_load_misc_weights_fu_351_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_load_misc_weights_fu_351_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_load_misc_weights_fu_351_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_load_misc_weights_fu_351_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(mem_RVALID),
    .m_axi_mem_RREADY(grp_load_misc_weights_fu_351_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(mem_RDATA),
    .m_axi_mem_RLAST(mem_RLAST),
    .m_axi_mem_RID(mem_RID),
    .m_axi_mem_RUSER(mem_RUSER),
    .m_axi_mem_RRESP(mem_RRESP),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_load_misc_weights_fu_351_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .graph_pred_linear_weight_fixed(graph_pred_linear_weight_fixed_read_reg_597),
    .num_heads_per_layer_in(num_heads_per_layer_in_read_reg_612),
    .num_features_per_layer_in(num_features_per_layer_in_read_reg_607),
    .pred_linear_weight_V_address0(grp_load_misc_weights_fu_351_pred_linear_weight_V_address0),
    .pred_linear_weight_V_ce0(grp_load_misc_weights_fu_351_pred_linear_weight_V_ce0),
    .pred_linear_weight_V_we0(grp_load_misc_weights_fu_351_pred_linear_weight_V_we0),
    .pred_linear_weight_V_d0(grp_load_misc_weights_fu_351_pred_linear_weight_V_d0),
    .num_heads_per_layer_address0(grp_load_misc_weights_fu_351_num_heads_per_layer_address0),
    .num_heads_per_layer_ce0(grp_load_misc_weights_fu_351_num_heads_per_layer_ce0),
    .num_heads_per_layer_we0(grp_load_misc_weights_fu_351_num_heads_per_layer_we0),
    .num_heads_per_layer_d0(grp_load_misc_weights_fu_351_num_heads_per_layer_d0),
    .num_features_per_layer_address0(grp_load_misc_weights_fu_351_num_features_per_layer_address0),
    .num_features_per_layer_ce0(grp_load_misc_weights_fu_351_num_features_per_layer_ce0),
    .num_features_per_layer_we0(grp_load_misc_weights_fu_351_num_features_per_layer_we0),
    .num_features_per_layer_d0(grp_load_misc_weights_fu_351_num_features_per_layer_d0)
);

GAT_compute_one_graph_load_graph grp_load_graph_fu_366(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_graph_fu_366_ap_start),
    .ap_done(grp_load_graph_fu_366_ap_done),
    .ap_idle(grp_load_graph_fu_366_ap_idle),
    .ap_ready(grp_load_graph_fu_366_ap_ready),
    .m_axi_mem_AWVALID(grp_load_graph_fu_366_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_load_graph_fu_366_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_load_graph_fu_366_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_load_graph_fu_366_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_load_graph_fu_366_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_load_graph_fu_366_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_load_graph_fu_366_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_load_graph_fu_366_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_load_graph_fu_366_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_load_graph_fu_366_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_load_graph_fu_366_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_load_graph_fu_366_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_load_graph_fu_366_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_load_graph_fu_366_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_load_graph_fu_366_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_load_graph_fu_366_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_load_graph_fu_366_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_load_graph_fu_366_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_load_graph_fu_366_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(mem_ARREADY),
    .m_axi_mem_ARADDR(grp_load_graph_fu_366_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_load_graph_fu_366_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_load_graph_fu_366_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_load_graph_fu_366_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_load_graph_fu_366_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_load_graph_fu_366_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_load_graph_fu_366_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_load_graph_fu_366_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_load_graph_fu_366_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_load_graph_fu_366_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_load_graph_fu_366_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(mem_RVALID),
    .m_axi_mem_RREADY(grp_load_graph_fu_366_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(mem_RDATA),
    .m_axi_mem_RLAST(mem_RLAST),
    .m_axi_mem_RID(mem_RID),
    .m_axi_mem_RUSER(mem_RUSER),
    .m_axi_mem_RRESP(mem_RRESP),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_load_graph_fu_366_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .node_feature_in(node_feature_in_read_reg_622),
    .edge_list_in(edge_list_in_read_reg_617),
    .num_of_nodes(num_of_nodes_reg_633),
    .num_of_edges(trunc_ln350_reg_646),
    .out_nodes_features_skip_concat_bias_V_address1(grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_address1),
    .out_nodes_features_skip_concat_bias_V_ce1(grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_ce1),
    .out_nodes_features_skip_concat_bias_V_we1(grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_we1),
    .out_nodes_features_skip_concat_bias_V_d1(grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_d1),
    .edge_list_address1(grp_load_graph_fu_366_edge_list_address1),
    .edge_list_ce1(grp_load_graph_fu_366_edge_list_ce1),
    .edge_list_we1(grp_load_graph_fu_366_edge_list_we1),
    .edge_list_d1(grp_load_graph_fu_366_edge_list_d1)
);

GAT_compute_one_graph_compute_connectivity_mask grp_compute_connectivity_mask_fu_380(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_compute_connectivity_mask_fu_380_ap_start),
    .ap_done(grp_compute_connectivity_mask_fu_380_ap_done),
    .ap_idle(grp_compute_connectivity_mask_fu_380_ap_idle),
    .ap_ready(grp_compute_connectivity_mask_fu_380_ap_ready),
    .num_of_nodes(num_of_nodes_reg_633),
    .num_of_edges(num_of_edges_reg_641),
    .connectivity_mask_address0(grp_compute_connectivity_mask_fu_380_connectivity_mask_address0),
    .connectivity_mask_ce0(grp_compute_connectivity_mask_fu_380_connectivity_mask_ce0),
    .connectivity_mask_q0(connectivity_mask_q0),
    .connectivity_mask_address1(grp_compute_connectivity_mask_fu_380_connectivity_mask_address1),
    .connectivity_mask_ce1(grp_compute_connectivity_mask_fu_380_connectivity_mask_ce1),
    .connectivity_mask_we1(grp_compute_connectivity_mask_fu_380_connectivity_mask_we1),
    .connectivity_mask_d1(grp_compute_connectivity_mask_fu_380_connectivity_mask_d1),
    .edge_list_address0(grp_compute_connectivity_mask_fu_380_edge_list_address0),
    .edge_list_ce0(grp_compute_connectivity_mask_fu_380_edge_list_ce0),
    .edge_list_q0(edge_list_q0),
    .edge_list_address1(grp_compute_connectivity_mask_fu_380_edge_list_address1),
    .edge_list_ce1(grp_compute_connectivity_mask_fu_380_edge_list_ce1),
    .edge_list_q1(edge_list_q1),
    .grp_fu_680_p_din0(grp_compute_connectivity_mask_fu_380_grp_fu_680_p_din0),
    .grp_fu_680_p_din1(grp_compute_connectivity_mask_fu_380_grp_fu_680_p_din1),
    .grp_fu_680_p_dout0(grp_fu_680_p2),
    .grp_fu_680_p_ce(grp_compute_connectivity_mask_fu_380_grp_fu_680_p_ce)
);

GAT_compute_one_graph_CONV grp_CONV_fu_390(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_CONV_fu_390_ap_start),
    .ap_done(grp_CONV_fu_390_ap_done),
    .ap_idle(grp_CONV_fu_390_ap_idle),
    .ap_ready(grp_CONV_fu_390_ap_ready),
    .num_of_nodes(num_of_nodes_reg_633),
    .num_in_features(grp_CONV_fu_390_num_in_features),
    .num_out_features(reg_464),
    .num_of_heads(reg_469),
    .layer(grp_CONV_fu_390_layer),
    .out_nodes_features_skip_concat_bias_V_address0(grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_address0),
    .out_nodes_features_skip_concat_bias_V_ce0(grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_ce0),
    .out_nodes_features_skip_concat_bias_V_q0(out_nodes_features_skip_concat_bias_V_q0),
    .out_nodes_features_skip_concat_bias_V_address1(grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_address1),
    .out_nodes_features_skip_concat_bias_V_ce1(grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_ce1),
    .out_nodes_features_skip_concat_bias_V_we1(grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_we1),
    .out_nodes_features_skip_concat_bias_V_d1(grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_d1),
    .linear_proj_weight_V_address0(grp_CONV_fu_390_linear_proj_weight_V_address0),
    .linear_proj_weight_V_ce0(grp_CONV_fu_390_linear_proj_weight_V_ce0),
    .linear_proj_weight_V_q0(linear_proj_weight_V_q0),
    .scoring_fn_source_V_address0(grp_CONV_fu_390_scoring_fn_source_V_address0),
    .scoring_fn_source_V_ce0(grp_CONV_fu_390_scoring_fn_source_V_ce0),
    .scoring_fn_source_V_q0(scoring_fn_source_V_q0),
    .scoring_fn_target_V_address0(grp_CONV_fu_390_scoring_fn_target_V_address0),
    .scoring_fn_target_V_ce0(grp_CONV_fu_390_scoring_fn_target_V_ce0),
    .scoring_fn_target_V_q0(scoring_fn_target_V_q0),
    .connectivity_mask_address0(grp_CONV_fu_390_connectivity_mask_address0),
    .connectivity_mask_ce0(grp_CONV_fu_390_connectivity_mask_ce0),
    .connectivity_mask_q0(connectivity_mask_q0),
    .skip_proj_weight_V_address0(grp_CONV_fu_390_skip_proj_weight_V_address0),
    .skip_proj_weight_V_ce0(grp_CONV_fu_390_skip_proj_weight_V_ce0),
    .skip_proj_weight_V_q0(skip_proj_weight_V_q0)
);

GAT_compute_one_graph_global_mean_pooling grp_global_mean_pooling_fu_440(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_global_mean_pooling_fu_440_ap_start),
    .ap_done(grp_global_mean_pooling_fu_440_ap_done),
    .ap_idle(grp_global_mean_pooling_fu_440_ap_idle),
    .ap_ready(grp_global_mean_pooling_fu_440_ap_ready),
    .num_of_nodes(num_of_nodes_reg_633),
    .out_nodes_features_skip_concat_bias_V_address0(grp_global_mean_pooling_fu_440_out_nodes_features_skip_concat_bias_V_address0),
    .out_nodes_features_skip_concat_bias_V_ce0(grp_global_mean_pooling_fu_440_out_nodes_features_skip_concat_bias_V_ce0),
    .out_nodes_features_skip_concat_bias_V_q0(out_nodes_features_skip_concat_bias_V_q0),
    .h_graph_V_address1(grp_global_mean_pooling_fu_440_h_graph_V_address1),
    .h_graph_V_ce1(grp_global_mean_pooling_fu_440_h_graph_V_ce1),
    .h_graph_V_we1(grp_global_mean_pooling_fu_440_h_graph_V_we1),
    .h_graph_V_d1(grp_global_mean_pooling_fu_440_h_graph_V_d1),
    .num_features_per_layer_address0(grp_global_mean_pooling_fu_440_num_features_per_layer_address0),
    .num_features_per_layer_ce0(grp_global_mean_pooling_fu_440_num_features_per_layer_ce0),
    .num_features_per_layer_q0(num_features_per_layer_q0)
);

GAT_compute_one_graph_global_graph_prediction grp_global_graph_prediction_fu_451(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_global_graph_prediction_fu_451_ap_start),
    .ap_done(grp_global_graph_prediction_fu_451_ap_done),
    .ap_idle(grp_global_graph_prediction_fu_451_ap_idle),
    .ap_ready(grp_global_graph_prediction_fu_451_ap_ready),
    .m_axi_mem_AWVALID(grp_global_graph_prediction_fu_451_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(mem_AWREADY),
    .m_axi_mem_AWADDR(grp_global_graph_prediction_fu_451_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_global_graph_prediction_fu_451_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_global_graph_prediction_fu_451_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_global_graph_prediction_fu_451_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_global_graph_prediction_fu_451_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_global_graph_prediction_fu_451_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_global_graph_prediction_fu_451_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_global_graph_prediction_fu_451_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_global_graph_prediction_fu_451_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_global_graph_prediction_fu_451_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_global_graph_prediction_fu_451_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_global_graph_prediction_fu_451_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(mem_WREADY),
    .m_axi_mem_WDATA(grp_global_graph_prediction_fu_451_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_global_graph_prediction_fu_451_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_global_graph_prediction_fu_451_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_global_graph_prediction_fu_451_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_global_graph_prediction_fu_451_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_global_graph_prediction_fu_451_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(1'b0),
    .m_axi_mem_ARADDR(grp_global_graph_prediction_fu_451_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_global_graph_prediction_fu_451_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_global_graph_prediction_fu_451_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_global_graph_prediction_fu_451_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_global_graph_prediction_fu_451_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_global_graph_prediction_fu_451_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_global_graph_prediction_fu_451_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_global_graph_prediction_fu_451_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_global_graph_prediction_fu_451_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_global_graph_prediction_fu_451_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_global_graph_prediction_fu_451_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(1'b0),
    .m_axi_mem_RREADY(grp_global_graph_prediction_fu_451_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(32'd0),
    .m_axi_mem_RLAST(1'b0),
    .m_axi_mem_RID(1'd0),
    .m_axi_mem_RUSER(1'd0),
    .m_axi_mem_RRESP(2'd0),
    .m_axi_mem_BVALID(mem_BVALID),
    .m_axi_mem_BREADY(grp_global_graph_prediction_fu_451_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(mem_BRESP),
    .m_axi_mem_BID(mem_BID),
    .m_axi_mem_BUSER(mem_BUSER),
    .task_r(task_tb_read_reg_602),
    .h_graph_V_address0(grp_global_graph_prediction_fu_451_h_graph_V_address0),
    .h_graph_V_ce0(grp_global_graph_prediction_fu_451_h_graph_V_ce0),
    .h_graph_V_q0(h_graph_V_q0),
    .pred_linear_weight_V_address0(grp_global_graph_prediction_fu_451_pred_linear_weight_V_address0),
    .pred_linear_weight_V_ce0(grp_global_graph_prediction_fu_451_pred_linear_weight_V_ce0),
    .pred_linear_weight_V_q0(pred_linear_weight_V_q0),
    .num_features_per_layer_address0(grp_global_graph_prediction_fu_451_num_features_per_layer_address0),
    .num_features_per_layer_ce0(grp_global_graph_prediction_fu_451_num_features_per_layer_ce0),
    .num_features_per_layer_q0(num_features_per_layer_q0)
);

GAT_compute_one_graph_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .node_feature_in(node_feature_in),
    .edge_list_in(edge_list_in),
    .graph_attr(graph_attr),
    .num_heads_per_layer_in(num_heads_per_layer_in),
    .num_features_per_layer_in(num_features_per_layer_in),
    .task_tb(task_tb),
    .graph_pred_linear_weight_fixed(graph_pred_linear_weight_fixed),
    .graph_pred_linear_bias_fixed(graph_pred_linear_bias_fixed),
    .gat_net_scoring_fn_target_fixed(gat_net_scoring_fn_target_fixed),
    .gat_net_scoring_fn_source_fixed(gat_net_scoring_fn_source_fixed),
    .gat_net_linear_proj_weight_fixed(gat_net_linear_proj_weight_fixed),
    .gat_net_skip_proj_weight_fixed(gat_net_skip_proj_weight_fixed),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

GAT_compute_one_graph_mem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MEM_CACHE_VALUE ))
mem_m_axi_U(
    .AWVALID(m_axi_mem_AWVALID),
    .AWREADY(m_axi_mem_AWREADY),
    .AWADDR(m_axi_mem_AWADDR),
    .AWID(m_axi_mem_AWID),
    .AWLEN(m_axi_mem_AWLEN),
    .AWSIZE(m_axi_mem_AWSIZE),
    .AWBURST(m_axi_mem_AWBURST),
    .AWLOCK(m_axi_mem_AWLOCK),
    .AWCACHE(m_axi_mem_AWCACHE),
    .AWPROT(m_axi_mem_AWPROT),
    .AWQOS(m_axi_mem_AWQOS),
    .AWREGION(m_axi_mem_AWREGION),
    .AWUSER(m_axi_mem_AWUSER),
    .WVALID(m_axi_mem_WVALID),
    .WREADY(m_axi_mem_WREADY),
    .WDATA(m_axi_mem_WDATA),
    .WSTRB(m_axi_mem_WSTRB),
    .WLAST(m_axi_mem_WLAST),
    .WID(m_axi_mem_WID),
    .WUSER(m_axi_mem_WUSER),
    .ARVALID(m_axi_mem_ARVALID),
    .ARREADY(m_axi_mem_ARREADY),
    .ARADDR(m_axi_mem_ARADDR),
    .ARID(m_axi_mem_ARID),
    .ARLEN(m_axi_mem_ARLEN),
    .ARSIZE(m_axi_mem_ARSIZE),
    .ARBURST(m_axi_mem_ARBURST),
    .ARLOCK(m_axi_mem_ARLOCK),
    .ARCACHE(m_axi_mem_ARCACHE),
    .ARPROT(m_axi_mem_ARPROT),
    .ARQOS(m_axi_mem_ARQOS),
    .ARREGION(m_axi_mem_ARREGION),
    .ARUSER(m_axi_mem_ARUSER),
    .RVALID(m_axi_mem_RVALID),
    .RREADY(m_axi_mem_RREADY),
    .RDATA(m_axi_mem_RDATA),
    .RLAST(m_axi_mem_RLAST),
    .RID(m_axi_mem_RID),
    .RUSER(m_axi_mem_RUSER),
    .RRESP(m_axi_mem_RRESP),
    .BVALID(m_axi_mem_BVALID),
    .BREADY(m_axi_mem_BREADY),
    .BRESP(m_axi_mem_BRESP),
    .BID(m_axi_mem_BID),
    .BUSER(m_axi_mem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(mem_ARVALID),
    .I_ARREADY(mem_ARREADY),
    .I_ARADDR(mem_ARADDR),
    .I_ARID(mem_ARID),
    .I_ARLEN(mem_ARLEN),
    .I_ARSIZE(mem_ARSIZE),
    .I_ARLOCK(mem_ARLOCK),
    .I_ARCACHE(mem_ARCACHE),
    .I_ARQOS(mem_ARQOS),
    .I_ARPROT(mem_ARPROT),
    .I_ARUSER(mem_ARUSER),
    .I_ARBURST(mem_ARBURST),
    .I_ARREGION(mem_ARREGION),
    .I_RVALID(mem_RVALID),
    .I_RREADY(mem_RREADY),
    .I_RDATA(mem_RDATA),
    .I_RID(mem_RID),
    .I_RUSER(mem_RUSER),
    .I_RRESP(mem_RRESP),
    .I_RLAST(mem_RLAST),
    .I_AWVALID(mem_AWVALID),
    .I_AWREADY(mem_AWREADY),
    .I_AWADDR(grp_global_graph_prediction_fu_451_m_axi_mem_AWADDR),
    .I_AWID(grp_global_graph_prediction_fu_451_m_axi_mem_AWID),
    .I_AWLEN(grp_global_graph_prediction_fu_451_m_axi_mem_AWLEN),
    .I_AWSIZE(grp_global_graph_prediction_fu_451_m_axi_mem_AWSIZE),
    .I_AWLOCK(grp_global_graph_prediction_fu_451_m_axi_mem_AWLOCK),
    .I_AWCACHE(grp_global_graph_prediction_fu_451_m_axi_mem_AWCACHE),
    .I_AWQOS(grp_global_graph_prediction_fu_451_m_axi_mem_AWQOS),
    .I_AWPROT(grp_global_graph_prediction_fu_451_m_axi_mem_AWPROT),
    .I_AWUSER(grp_global_graph_prediction_fu_451_m_axi_mem_AWUSER),
    .I_AWBURST(grp_global_graph_prediction_fu_451_m_axi_mem_AWBURST),
    .I_AWREGION(grp_global_graph_prediction_fu_451_m_axi_mem_AWREGION),
    .I_WVALID(mem_WVALID),
    .I_WREADY(mem_WREADY),
    .I_WDATA(grp_global_graph_prediction_fu_451_m_axi_mem_WDATA),
    .I_WID(grp_global_graph_prediction_fu_451_m_axi_mem_WID),
    .I_WUSER(grp_global_graph_prediction_fu_451_m_axi_mem_WUSER),
    .I_WLAST(grp_global_graph_prediction_fu_451_m_axi_mem_WLAST),
    .I_WSTRB(grp_global_graph_prediction_fu_451_m_axi_mem_WSTRB),
    .I_BVALID(mem_BVALID),
    .I_BREADY(mem_BREADY),
    .I_BRESP(mem_BRESP),
    .I_BID(mem_BID),
    .I_BUSER(mem_BUSER)
);

GAT_compute_one_graph_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U278(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_478),
    .din1(reg_474),
    .ce(grp_fu_490_ce),
    .dout(grp_fu_490_p2)
);

GAT_compute_one_graph_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U279(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_486),
    .din1(reg_482),
    .ce(grp_fu_496_ce),
    .dout(grp_fu_496_p2)
);

GAT_compute_one_graph_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U280(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_469),
    .din1(reg_464),
    .ce(grp_fu_567_ce),
    .dout(grp_fu_567_p2)
);

GAT_compute_one_graph_mul_32ns_32ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_3_1_U281(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_compute_connectivity_mask_fu_380_grp_fu_680_p_din0),
    .din1(grp_compute_connectivity_mask_fu_380_grp_fu_680_p_din1),
    .ce(grp_fu_680_ce),
    .dout(grp_fu_680_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_CONV_fu_390_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state25))) begin
            grp_CONV_fu_390_ap_start_reg <= 1'b1;
        end else if ((grp_CONV_fu_390_ap_ready == 1'b1)) begin
            grp_CONV_fu_390_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_compute_connectivity_mask_fu_380_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_compute_connectivity_mask_fu_380_ap_start_reg <= 1'b1;
        end else if ((grp_compute_connectivity_mask_fu_380_ap_ready == 1'b1)) begin
            grp_compute_connectivity_mask_fu_380_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_global_graph_prediction_fu_451_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state35)) begin
            grp_global_graph_prediction_fu_451_ap_start_reg <= 1'b1;
        end else if ((grp_global_graph_prediction_fu_451_ap_ready == 1'b1)) begin
            grp_global_graph_prediction_fu_451_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_global_mean_pooling_fu_440_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state33)) begin
            grp_global_mean_pooling_fu_440_ap_start_reg <= 1'b1;
        end else if ((grp_global_mean_pooling_fu_440_ap_ready == 1'b1)) begin
            grp_global_mean_pooling_fu_440_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_graph_fu_366_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_load_graph_fu_366_ap_start_reg <= 1'b1;
        end else if ((grp_load_graph_fu_366_ap_ready == 1'b1)) begin
            grp_load_graph_fu_366_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_misc_weights_fu_351_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_load_misc_weights_fu_351_ap_start_reg <= 1'b1;
        end else if ((grp_load_misc_weights_fu_351_ap_ready == 1'b1)) begin
            grp_load_misc_weights_fu_351_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_weights_first_layer_fu_314_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
            grp_load_weights_first_layer_fu_314_ap_start_reg <= 1'b1;
        end else if ((grp_load_weights_first_layer_fu_314_ap_ready == 1'b1)) begin
            grp_load_weights_first_layer_fu_314_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_weights_one_layer_fu_332_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
            grp_load_weights_one_layer_fu_332_ap_start_reg <= 1'b1;
        end else if ((grp_load_weights_one_layer_fu_332_ap_ready == 1'b1)) begin
            grp_load_weights_one_layer_fu_332_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        layer_fu_210 <= 3'd1;
    end else if (((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        layer_fu_210 <= layer_3_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        edge_list_in_read_reg_617 <= edge_list_in;
        gat_net_linear_proj_weight_fixed_read_reg_579 <= gat_net_linear_proj_weight_fixed;
        gat_net_scoring_fn_source_fixed_read_reg_585 <= gat_net_scoring_fn_source_fixed;
        gat_net_scoring_fn_target_fixed_read_reg_591 <= gat_net_scoring_fn_target_fixed;
        gat_net_skip_proj_weight_fixed_read_reg_573 <= gat_net_skip_proj_weight_fixed;
        graph_pred_linear_weight_fixed_read_reg_597 <= graph_pred_linear_weight_fixed;
        mem_addr_reg_627 <= sext_ln350_fu_522_p1;
        node_feature_in_read_reg_622 <= node_feature_in;
        num_features_per_layer_in_read_reg_607 <= num_features_per_layer_in;
        num_heads_per_layer_in_read_reg_612 <= num_heads_per_layer_in;
        task_tb_read_reg_602 <= task_tb;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln354_reg_656 <= icmp_ln354_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        is_first_reg_651 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_2_reg_667 <= layer_fu_210;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        mul_ln372_reg_675 <= grp_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        num_of_edges_reg_641 <= mem_RDATA;
        trunc_ln350_reg_646 <= trunc_ln350_fu_532_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        num_of_nodes_reg_633 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((grp_load_graph_fu_366_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)))) begin
        reg_464 <= num_features_per_layer_q0;
        reg_469 <= num_heads_per_layer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_474 <= num_features_per_layer_q0;
        reg_478 <= num_heads_per_layer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_482 <= num_features_per_layer_q0;
        reg_486 <= num_heads_per_layer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_502 <= grp_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_507 <= grp_fu_496_p2;
    end
end

always @ (*) begin
    if ((mem_RVALID == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((mem_RVALID == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_load_weights_first_layer_fu_314_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_load_weights_one_layer_fu_332_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state17_on_subcall_done)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((grp_load_graph_fu_366_ap_done == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((grp_compute_connectivity_mask_fu_380_ap_done == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

always @ (*) begin
    if ((grp_CONV_fu_390_ap_done == 1'b0)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

assign ap_ST_fsm_state25_blk = 1'b0;

always @ (*) begin
    if ((grp_CONV_fu_390_ap_done == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

assign ap_ST_fsm_state27_blk = 1'b0;

always @ (*) begin
    if ((grp_CONV_fu_390_ap_done == 1'b0)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((mem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_CONV_fu_390_ap_done == 1'b0)) begin
        ap_ST_fsm_state30_blk = 1'b1;
    end else begin
        ap_ST_fsm_state30_blk = 1'b0;
    end
end

assign ap_ST_fsm_state31_blk = 1'b0;

always @ (*) begin
    if ((grp_CONV_fu_390_ap_done == 1'b0)) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

assign ap_ST_fsm_state33_blk = 1'b0;

always @ (*) begin
    if ((grp_global_mean_pooling_fu_440_ap_done == 1'b0)) begin
        ap_ST_fsm_state34_blk = 1'b1;
    end else begin
        ap_ST_fsm_state34_blk = 1'b0;
    end
end

assign ap_ST_fsm_state35_blk = 1'b0;

always @ (*) begin
    if ((grp_global_graph_prediction_fu_451_ap_done == 1'b0)) begin
        ap_ST_fsm_state36_blk = 1'b1;
    end else begin
        ap_ST_fsm_state36_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((mem_RVALID == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_global_graph_prediction_fu_451_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_global_graph_prediction_fu_451_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        connectivity_mask_address0 = grp_CONV_fu_390_connectivity_mask_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        connectivity_mask_address0 = grp_compute_connectivity_mask_fu_380_connectivity_mask_address0;
    end else begin
        connectivity_mask_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        connectivity_mask_ce0 = grp_CONV_fu_390_connectivity_mask_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        connectivity_mask_ce0 = grp_compute_connectivity_mask_fu_380_connectivity_mask_ce0;
    end else begin
        connectivity_mask_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        connectivity_mask_ce1 = grp_compute_connectivity_mask_fu_380_connectivity_mask_ce1;
    end else begin
        connectivity_mask_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        connectivity_mask_we1 = grp_compute_connectivity_mask_fu_380_connectivity_mask_we1;
    end else begin
        connectivity_mask_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        edge_list_address1 = grp_compute_connectivity_mask_fu_380_edge_list_address1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        edge_list_address1 = grp_load_graph_fu_366_edge_list_address1;
    end else begin
        edge_list_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        edge_list_ce0 = grp_compute_connectivity_mask_fu_380_edge_list_ce0;
    end else begin
        edge_list_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        edge_list_ce1 = grp_compute_connectivity_mask_fu_380_edge_list_ce1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        edge_list_ce1 = grp_load_graph_fu_366_edge_list_ce1;
    end else begin
        edge_list_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        edge_list_we1 = grp_load_graph_fu_366_edge_list_we1;
    end else begin
        edge_list_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_CONV_fu_390_layer = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_CONV_fu_390_layer = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_CONV_fu_390_layer = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_CONV_fu_390_layer = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_CONV_fu_390_layer = 3'd0;
    end else begin
        grp_CONV_fu_390_layer = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_CONV_fu_390_num_in_features = reg_507;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_CONV_fu_390_num_in_features = reg_502;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_CONV_fu_390_num_in_features = mul_ln372_reg_675;
    end else begin
        grp_CONV_fu_390_num_in_features = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24)))) begin
        grp_fu_490_ce = 1'b1;
    end else begin
        grp_fu_490_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24)))) begin
        grp_fu_496_ce = 1'b1;
    end else begin
        grp_fu_496_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22) | ((grp_compute_connectivity_mask_fu_380_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_567_ce = 1'b1;
    end else begin
        grp_fu_567_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_680_ce = grp_compute_connectivity_mask_fu_380_grp_fu_680_p_ce;
    end else begin
        grp_fu_680_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        h_graph_V_ce0 = grp_global_graph_prediction_fu_451_h_graph_V_ce0;
    end else begin
        h_graph_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        h_graph_V_ce1 = grp_global_mean_pooling_fu_440_h_graph_V_ce1;
    end else begin
        h_graph_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        h_graph_V_we1 = grp_global_mean_pooling_fu_440_h_graph_V_we1;
    end else begin
        h_graph_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        linear_proj_weight_V_address0 = grp_CONV_fu_390_linear_proj_weight_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        linear_proj_weight_V_address0 = grp_load_weights_one_layer_fu_332_linear_proj_weight_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        linear_proj_weight_V_address0 = grp_load_weights_first_layer_fu_314_linear_proj_weight_V_address0;
    end else begin
        linear_proj_weight_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        linear_proj_weight_V_ce0 = grp_CONV_fu_390_linear_proj_weight_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        linear_proj_weight_V_ce0 = grp_load_weights_one_layer_fu_332_linear_proj_weight_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        linear_proj_weight_V_ce0 = grp_load_weights_first_layer_fu_314_linear_proj_weight_V_ce0;
    end else begin
        linear_proj_weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        linear_proj_weight_V_d0 = grp_load_weights_one_layer_fu_332_linear_proj_weight_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        linear_proj_weight_V_d0 = grp_load_weights_first_layer_fu_314_linear_proj_weight_V_d0;
    end else begin
        linear_proj_weight_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        linear_proj_weight_V_we0 = grp_load_weights_one_layer_fu_332_linear_proj_weight_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        linear_proj_weight_V_we0 = grp_load_weights_first_layer_fu_314_linear_proj_weight_V_we0;
    end else begin
        linear_proj_weight_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_ARADDR = mem_addr_reg_627;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARADDR = grp_load_graph_fu_366_m_axi_mem_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARADDR = grp_load_misc_weights_fu_351_m_axi_mem_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARADDR = grp_load_weights_one_layer_fu_332_m_axi_mem_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARADDR = grp_load_weights_first_layer_fu_314_m_axi_mem_ARADDR;
    end else begin
        mem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARBURST = grp_load_graph_fu_366_m_axi_mem_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARBURST = grp_load_misc_weights_fu_351_m_axi_mem_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARBURST = grp_load_weights_one_layer_fu_332_m_axi_mem_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARBURST = grp_load_weights_first_layer_fu_314_m_axi_mem_ARBURST;
    end else begin
        mem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARCACHE = grp_load_graph_fu_366_m_axi_mem_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARCACHE = grp_load_misc_weights_fu_351_m_axi_mem_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARCACHE = grp_load_weights_one_layer_fu_332_m_axi_mem_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARCACHE = grp_load_weights_first_layer_fu_314_m_axi_mem_ARCACHE;
    end else begin
        mem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARID = grp_load_graph_fu_366_m_axi_mem_ARID;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARID = grp_load_misc_weights_fu_351_m_axi_mem_ARID;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARID = grp_load_weights_one_layer_fu_332_m_axi_mem_ARID;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARID = grp_load_weights_first_layer_fu_314_m_axi_mem_ARID;
    end else begin
        mem_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_ARLEN = 32'd3;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARLEN = grp_load_graph_fu_366_m_axi_mem_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARLEN = grp_load_misc_weights_fu_351_m_axi_mem_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARLEN = grp_load_weights_one_layer_fu_332_m_axi_mem_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARLEN = grp_load_weights_first_layer_fu_314_m_axi_mem_ARLEN;
    end else begin
        mem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARLOCK = grp_load_graph_fu_366_m_axi_mem_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARLOCK = grp_load_misc_weights_fu_351_m_axi_mem_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARLOCK = grp_load_weights_one_layer_fu_332_m_axi_mem_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARLOCK = grp_load_weights_first_layer_fu_314_m_axi_mem_ARLOCK;
    end else begin
        mem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARPROT = grp_load_graph_fu_366_m_axi_mem_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARPROT = grp_load_misc_weights_fu_351_m_axi_mem_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARPROT = grp_load_weights_one_layer_fu_332_m_axi_mem_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARPROT = grp_load_weights_first_layer_fu_314_m_axi_mem_ARPROT;
    end else begin
        mem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARQOS = grp_load_graph_fu_366_m_axi_mem_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARQOS = grp_load_misc_weights_fu_351_m_axi_mem_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARQOS = grp_load_weights_one_layer_fu_332_m_axi_mem_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARQOS = grp_load_weights_first_layer_fu_314_m_axi_mem_ARQOS;
    end else begin
        mem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARREGION = grp_load_graph_fu_366_m_axi_mem_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARREGION = grp_load_misc_weights_fu_351_m_axi_mem_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARREGION = grp_load_weights_one_layer_fu_332_m_axi_mem_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARREGION = grp_load_weights_first_layer_fu_314_m_axi_mem_ARREGION;
    end else begin
        mem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARSIZE = grp_load_graph_fu_366_m_axi_mem_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARSIZE = grp_load_misc_weights_fu_351_m_axi_mem_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARSIZE = grp_load_weights_one_layer_fu_332_m_axi_mem_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARSIZE = grp_load_weights_first_layer_fu_314_m_axi_mem_ARSIZE;
    end else begin
        mem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARUSER = grp_load_graph_fu_366_m_axi_mem_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARUSER = grp_load_misc_weights_fu_351_m_axi_mem_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARUSER = grp_load_weights_one_layer_fu_332_m_axi_mem_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARUSER = grp_load_weights_first_layer_fu_314_m_axi_mem_ARUSER;
    end else begin
        mem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_ARVALID = grp_load_graph_fu_366_m_axi_mem_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_ARVALID = grp_load_misc_weights_fu_351_m_axi_mem_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_ARVALID = grp_load_weights_one_layer_fu_332_m_axi_mem_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_ARVALID = grp_load_weights_first_layer_fu_314_m_axi_mem_ARVALID;
    end else begin
        mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        mem_AWVALID = grp_global_graph_prediction_fu_451_m_axi_mem_AWVALID;
    end else begin
        mem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        mem_BREADY = grp_global_graph_prediction_fu_451_m_axi_mem_BREADY;
    end else begin
        mem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        mem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        mem_RREADY = grp_load_graph_fu_366_m_axi_mem_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        mem_RREADY = grp_load_misc_weights_fu_351_m_axi_mem_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln357_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        mem_RREADY = grp_load_weights_one_layer_fu_332_m_axi_mem_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln354_fu_536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        mem_RREADY = grp_load_weights_first_layer_fu_314_m_axi_mem_RREADY;
    end else begin
        mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        mem_WVALID = grp_global_graph_prediction_fu_451_m_axi_mem_WVALID;
    end else begin
        mem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        mem_blk_n_R = m_axi_mem_RVALID;
    end else begin
        mem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        num_features_per_layer_address0 = 3'd5;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        num_features_per_layer_address0 = 3'd4;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        num_features_per_layer_address0 = 3'd3;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        num_features_per_layer_address0 = 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21))) begin
        num_features_per_layer_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        num_features_per_layer_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        num_features_per_layer_address0 = grp_global_graph_prediction_fu_451_num_features_per_layer_address0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        num_features_per_layer_address0 = grp_global_mean_pooling_fu_440_num_features_per_layer_address0;
    end else if (((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        num_features_per_layer_address0 = grp_load_misc_weights_fu_351_num_features_per_layer_address0;
    end else begin
        num_features_per_layer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((grp_compute_connectivity_mask_fu_380_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        num_features_per_layer_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        num_features_per_layer_ce0 = grp_global_graph_prediction_fu_451_num_features_per_layer_ce0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        num_features_per_layer_ce0 = grp_global_mean_pooling_fu_440_num_features_per_layer_ce0;
    end else if (((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        num_features_per_layer_ce0 = grp_load_misc_weights_fu_351_num_features_per_layer_ce0;
    end else begin
        num_features_per_layer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        num_features_per_layer_we0 = grp_load_misc_weights_fu_351_num_features_per_layer_we0;
    end else begin
        num_features_per_layer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        num_heads_per_layer_address0 = 3'd5;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        num_heads_per_layer_address0 = 3'd4;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        num_heads_per_layer_address0 = 3'd3;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        num_heads_per_layer_address0 = 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21))) begin
        num_heads_per_layer_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        num_heads_per_layer_address0 = 3'd0;
    end else if (((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        num_heads_per_layer_address0 = grp_load_misc_weights_fu_351_num_heads_per_layer_address0;
    end else begin
        num_heads_per_layer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((grp_compute_connectivity_mask_fu_380_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        num_heads_per_layer_ce0 = 1'b1;
    end else if (((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        num_heads_per_layer_ce0 = grp_load_misc_weights_fu_351_num_heads_per_layer_ce0;
    end else begin
        num_heads_per_layer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        out_nodes_features_skip_concat_bias_V_address0 = grp_global_mean_pooling_fu_440_out_nodes_features_skip_concat_bias_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        out_nodes_features_skip_concat_bias_V_address0 = grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_address0;
    end else begin
        out_nodes_features_skip_concat_bias_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        out_nodes_features_skip_concat_bias_V_address1 = grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_nodes_features_skip_concat_bias_V_address1 = grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_address1;
    end else begin
        out_nodes_features_skip_concat_bias_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        out_nodes_features_skip_concat_bias_V_ce0 = grp_global_mean_pooling_fu_440_out_nodes_features_skip_concat_bias_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        out_nodes_features_skip_concat_bias_V_ce0 = grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_ce0;
    end else begin
        out_nodes_features_skip_concat_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        out_nodes_features_skip_concat_bias_V_ce1 = grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_nodes_features_skip_concat_bias_V_ce1 = grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_ce1;
    end else begin
        out_nodes_features_skip_concat_bias_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        out_nodes_features_skip_concat_bias_V_d1 = grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_d1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_nodes_features_skip_concat_bias_V_d1 = grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_d1;
    end else begin
        out_nodes_features_skip_concat_bias_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        out_nodes_features_skip_concat_bias_V_we1 = grp_CONV_fu_390_out_nodes_features_skip_concat_bias_V_we1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_nodes_features_skip_concat_bias_V_we1 = grp_load_graph_fu_366_out_nodes_features_skip_concat_bias_V_we1;
    end else begin
        out_nodes_features_skip_concat_bias_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        pred_linear_weight_V_address0 = grp_global_graph_prediction_fu_451_pred_linear_weight_V_address0;
    end else if (((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        pred_linear_weight_V_address0 = grp_load_misc_weights_fu_351_pred_linear_weight_V_address0;
    end else begin
        pred_linear_weight_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        pred_linear_weight_V_ce0 = grp_global_graph_prediction_fu_451_pred_linear_weight_V_ce0;
    end else if (((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        pred_linear_weight_V_ce0 = grp_load_misc_weights_fu_351_pred_linear_weight_V_ce0;
    end else begin
        pred_linear_weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln354_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        pred_linear_weight_V_we0 = grp_load_misc_weights_fu_351_pred_linear_weight_V_we0;
    end else begin
        pred_linear_weight_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        scoring_fn_source_V_address0 = grp_CONV_fu_390_scoring_fn_source_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        scoring_fn_source_V_address0 = grp_load_weights_one_layer_fu_332_scoring_fn_source_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_source_V_address0 = grp_load_weights_first_layer_fu_314_scoring_fn_source_V_address0;
    end else begin
        scoring_fn_source_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        scoring_fn_source_V_ce0 = grp_CONV_fu_390_scoring_fn_source_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        scoring_fn_source_V_ce0 = grp_load_weights_one_layer_fu_332_scoring_fn_source_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_source_V_ce0 = grp_load_weights_first_layer_fu_314_scoring_fn_source_V_ce0;
    end else begin
        scoring_fn_source_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        scoring_fn_source_V_d0 = grp_load_weights_one_layer_fu_332_scoring_fn_source_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_source_V_d0 = grp_load_weights_first_layer_fu_314_scoring_fn_source_V_d0;
    end else begin
        scoring_fn_source_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        scoring_fn_source_V_we0 = grp_load_weights_one_layer_fu_332_scoring_fn_source_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_source_V_we0 = grp_load_weights_first_layer_fu_314_scoring_fn_source_V_we0;
    end else begin
        scoring_fn_source_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        scoring_fn_target_V_address0 = grp_CONV_fu_390_scoring_fn_target_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        scoring_fn_target_V_address0 = grp_load_weights_one_layer_fu_332_scoring_fn_target_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_target_V_address0 = grp_load_weights_first_layer_fu_314_scoring_fn_target_V_address0;
    end else begin
        scoring_fn_target_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        scoring_fn_target_V_ce0 = grp_CONV_fu_390_scoring_fn_target_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        scoring_fn_target_V_ce0 = grp_load_weights_one_layer_fu_332_scoring_fn_target_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_target_V_ce0 = grp_load_weights_first_layer_fu_314_scoring_fn_target_V_ce0;
    end else begin
        scoring_fn_target_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        scoring_fn_target_V_d0 = grp_load_weights_one_layer_fu_332_scoring_fn_target_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_target_V_d0 = grp_load_weights_first_layer_fu_314_scoring_fn_target_V_d0;
    end else begin
        scoring_fn_target_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        scoring_fn_target_V_we0 = grp_load_weights_one_layer_fu_332_scoring_fn_target_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_target_V_we0 = grp_load_weights_first_layer_fu_314_scoring_fn_target_V_we0;
    end else begin
        scoring_fn_target_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        skip_proj_weight_V_address0 = grp_CONV_fu_390_skip_proj_weight_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        skip_proj_weight_V_address0 = grp_load_weights_one_layer_fu_332_skip_proj_weight_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        skip_proj_weight_V_address0 = grp_load_weights_first_layer_fu_314_skip_proj_weight_V_address0;
    end else begin
        skip_proj_weight_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        skip_proj_weight_V_ce0 = grp_CONV_fu_390_skip_proj_weight_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        skip_proj_weight_V_ce0 = grp_load_weights_one_layer_fu_332_skip_proj_weight_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        skip_proj_weight_V_ce0 = grp_load_weights_first_layer_fu_314_skip_proj_weight_V_ce0;
    end else begin
        skip_proj_weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        skip_proj_weight_V_d0 = grp_load_weights_one_layer_fu_332_skip_proj_weight_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        skip_proj_weight_V_d0 = grp_load_weights_first_layer_fu_314_skip_proj_weight_V_d0;
    end else begin
        skip_proj_weight_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        skip_proj_weight_V_we0 = grp_load_weights_one_layer_fu_332_skip_proj_weight_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        skip_proj_weight_V_we0 = grp_load_weights_first_layer_fu_314_skip_proj_weight_V_we0;
    end else begin
        skip_proj_weight_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln354_fu_536_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((grp_load_weights_first_layer_fu_314_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln357_fu_550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((grp_load_weights_one_layer_fu_332_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_load_graph_fu_366_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_compute_connectivity_mask_fu_380_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_CONV_fu_390_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_global_mean_pooling_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_global_graph_prediction_fu_451_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state17_on_subcall_done = ((grp_load_misc_weights_fu_351_ap_done == 1'b0) & (icmp_ln354_reg_656 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_CONV_fu_390_ap_start = grp_CONV_fu_390_ap_start_reg;

assign grp_compute_connectivity_mask_fu_380_ap_start = grp_compute_connectivity_mask_fu_380_ap_start_reg;

assign grp_global_graph_prediction_fu_451_ap_start = grp_global_graph_prediction_fu_451_ap_start_reg;

assign grp_global_mean_pooling_fu_440_ap_start = grp_global_mean_pooling_fu_440_ap_start_reg;

assign grp_load_graph_fu_366_ap_start = grp_load_graph_fu_366_ap_start_reg;

assign grp_load_misc_weights_fu_351_ap_start = grp_load_misc_weights_fu_351_ap_start_reg;

assign grp_load_weights_first_layer_fu_314_ap_start = grp_load_weights_first_layer_fu_314_ap_start_reg;

assign grp_load_weights_one_layer_fu_332_ap_start = grp_load_weights_one_layer_fu_332_ap_start_reg;

assign icmp_ln354_fu_536_p2 = ((is_first_reg_651 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln357_fu_550_p2 = ((layer_fu_210 == 3'd5) ? 1'b1 : 1'b0);

assign layer_3_fu_556_p2 = (layer_fu_210 + 3'd1);

assign sext_ln350_fu_522_p1 = $signed(trunc_ln_fu_512_p4);

assign trunc_ln350_fu_532_p1 = mem_RDATA[30:0];

assign trunc_ln_fu_512_p4 = {{graph_attr[63:2]}};

endmodule //GAT_compute_one_graph
