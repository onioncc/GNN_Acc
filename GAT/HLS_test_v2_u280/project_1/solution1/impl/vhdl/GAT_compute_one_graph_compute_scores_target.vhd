-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_compute_scores_target is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer : IN STD_LOGIC_VECTOR (2 downto 0);
    scoring_fn_target_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scoring_fn_target_V_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scoring_fn_target_V_ce1 : OUT STD_LOGIC;
    scoring_fn_target_V_q1 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    nodes_features_proj_V_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    nodes_features_proj_V_ce1 : OUT STD_LOGIC;
    nodes_features_proj_V_q1 : IN STD_LOGIC_VECTOR (27 downto 0);
    scores_target_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scores_target_V_ce1 : OUT STD_LOGIC;
    scores_target_V_we1 : OUT STD_LOGIC;
    scores_target_V_d1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_244_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_244_p_ce : OUT STD_LOGIC;
    grp_fu_248_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_248_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_248_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_248_p_ce : OUT STD_LOGIC;
    grp_fu_252_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_252_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_252_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_252_p_ce : OUT STD_LOGIC;
    grp_fu_256_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_256_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_256_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_256_p_ce : OUT STD_LOGIC;
    grp_fu_260_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_260_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_260_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_260_p_ce : OUT STD_LOGIC;
    grp_fu_264_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_264_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_264_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_264_p_ce : OUT STD_LOGIC;
    grp_fu_268_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_268_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_268_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_268_p_ce : OUT STD_LOGIC;
    grp_fu_272_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_272_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_272_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_272_p_ce : OUT STD_LOGIC;
    grp_fu_276_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_276_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_276_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_276_p_ce : OUT STD_LOGIC;
    grp_fu_280_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_280_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_280_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_280_p_ce : OUT STD_LOGIC;
    grp_fu_284_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_284_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_284_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_284_p_ce : OUT STD_LOGIC;
    grp_fu_288_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_288_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_288_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_288_p_ce : OUT STD_LOGIC;
    grp_fu_292_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_292_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_292_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_292_p_ce : OUT STD_LOGIC;
    grp_fu_296_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_296_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_296_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_296_p_ce : OUT STD_LOGIC;
    grp_fu_300_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_300_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_300_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_300_p_ce : OUT STD_LOGIC;
    grp_fu_304_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_304_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_304_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_304_p_ce : OUT STD_LOGIC );
end;


architecture behav of GAT_compute_one_graph_compute_scores_target is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_9 : STD_LOGIC_VECTOR (8 downto 0) := "000001001";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv9_A : STD_LOGIC_VECTOR (8 downto 0) := "000001010";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv12_A : STD_LOGIC_VECTOR (11 downto 0) := "000000001010";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv9_D : STD_LOGIC_VECTOR (8 downto 0) := "000001101";
    constant ap_const_lv12_C : STD_LOGIC_VECTOR (11 downto 0) := "000000001100";
    constant ap_const_lv12_D : STD_LOGIC_VECTOR (11 downto 0) := "000000001101";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_F : STD_LOGIC_VECTOR (11 downto 0) := "000000001111";
    constant ap_const_lv9_64 : STD_LOGIC_VECTOR (8 downto 0) := "001100100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal icmp_ln63_reg_1682 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage6 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal reg_453 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal reg_457 : STD_LOGIC_VECTOR (27 downto 0);
    signal reg_461 : STD_LOGIC_VECTOR (27 downto 0);
    signal reg_465 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_fu_469_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_1670 : STD_LOGIC_VECTOR (4 downto 0);
    signal nh_1_reg_1676 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln63_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln63_fu_513_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln63_reg_1686 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln64_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1692 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_fu_525_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln63_reg_1698 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln63_reg_1698_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln63_1_fu_581_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln63_1_reg_1704 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln63_1_reg_1704_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln63_2_fu_590_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_2_reg_1709 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_fu_630_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_reg_1737 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln63_fu_723_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_1_fu_727_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_fu_787_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_1_fu_797_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_2_fu_807_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_3_fu_811_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_2_fu_871_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_3_fu_881_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_4_fu_891_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_5_fu_895_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_1_reg_1895 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_17_reg_1900 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1171_4_fu_965_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_5_fu_975_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_6_fu_985_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_7_fu_989_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_2_reg_1945 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_18_reg_1950 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_3_reg_1955 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_6_fu_1071_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_7_fu_1081_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_8_fu_1091_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_9_fu_1095_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_4_reg_2000 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_20_reg_2005 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_5_reg_2010 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_8_fu_1200_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_9_fu_1210_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_10_fu_1220_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_11_fu_1224_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_6_reg_2055 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_22_reg_2060 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_7_reg_2065 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_10_fu_1329_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_11_fu_1339_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_12_fu_1349_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_13_fu_1353_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_8_reg_2090 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_24_reg_2095 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_9_reg_2100 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_12_fu_1402_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_13_fu_1412_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_14_fu_1422_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln63_15_fu_1426_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_10_reg_2125 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_26_reg_2130 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_11_reg_2135 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_14_fu_1475_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_15_fu_1485_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_12_reg_2155 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_28_reg_2160 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_13_reg_2165 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_14_reg_2170 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_30_reg_2175 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_15_reg_2180 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln717_s_reg_2190 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln1171_4_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln1171_5_fu_608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_5_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_6_fu_657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_6_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln1171_7_fu_682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_7_fu_700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_8_fu_718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_8_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln1171_9_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_9_fu_764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_10_fu_782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_10_fu_820_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln1171_11_fu_830_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_11_fu_848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_12_fu_866_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_12_fu_904_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln1171_13_fu_914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_13_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_14_fu_950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_14_fu_998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln1171_15_fu_1008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_15_fu_1026_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_16_fu_1044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_16_fu_1104_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln1171_17_fu_1114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_17_fu_1132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_18_fu_1150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_18_fu_1233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln1171_19_fu_1243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_19_fu_1261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_20_fu_1279_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln69_1_fu_1636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_144 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_load : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln64_fu_533_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal nh_fu_148 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_nh_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_fu_152 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln63_1_fu_504_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1171_fu_549_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1171_fu_552_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1171_3_fu_565_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1171_1_fu_568_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_49_cast_fu_573_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_cast_fu_557_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln63_fu_602_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_613_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1169_4_fu_620_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln69_fu_586_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1169_fu_624_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln1169_15_fu_643_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln_fu_649_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln63_1_fu_667_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln63_2_fu_677_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_fu_687_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_1_fu_692_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_16_fu_705_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_2_fu_710_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln63_3_fu_731_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln63_4_fu_741_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_17_fu_751_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_3_fu_756_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_18_fu_769_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_4_fu_774_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln63_5_fu_815_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln63_6_fu_825_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_19_fu_835_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_5_fu_840_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_20_fu_853_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_6_fu_858_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln63_7_fu_899_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln63_8_fu_909_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_21_fu_919_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_7_fu_924_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_22_fu_937_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_8_fu_942_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln63_9_fu_993_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln63_10_fu_1003_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_23_fu_1013_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_9_fu_1018_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_24_fu_1031_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_s_fu_1036_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_1049_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_fu_1056_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal or_ln63_11_fu_1099_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln63_12_fu_1109_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_25_fu_1119_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_10_fu_1124_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_26_fu_1137_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_11_fu_1142_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln737_1_fu_1155_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_1_fu_1162_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_19_fu_1167_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_2_fu_1177_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_2_fu_1185_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal or_ln63_13_fu_1228_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln63_14_fu_1238_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_27_fu_1248_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_12_fu_1253_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_28_fu_1266_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_13_fu_1271_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln737_3_fu_1284_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_3_fu_1291_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_21_fu_1296_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_4_fu_1306_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_4_fu_1314_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_5_fu_1357_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_5_fu_1364_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_23_fu_1369_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_6_fu_1379_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_6_fu_1387_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_7_fu_1430_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_7_fu_1437_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_25_fu_1442_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_8_fu_1452_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_8_fu_1460_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_9_fu_1498_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_9_fu_1505_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_27_fu_1510_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_s_fu_1520_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_10_fu_1528_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_10_fu_1543_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_11_fu_1550_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_29_fu_1555_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_11_fu_1565_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_12_fu_1573_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_12_fu_1591_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_13_fu_1598_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_31_fu_1603_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_13_fu_1613_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_14_fu_1621_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1640_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1640_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1640_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1640_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1640_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1640_p20 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_mul_28s_28s_46_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (27 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component GAT_compute_one_graph_mac_muladd_3ns_7ns_5ns_9_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mac_muladd_3ns_7ns_5ns_9_4_1_U122 : component GAT_compute_one_graph_mac_muladd_3ns_7ns_5ns_9_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 7,
        din2_WIDTH => 5,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1640_p0,
        din1 => grp_fu_1640_p1,
        din2 => grp_fu_1640_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1640_p3);

    flow_control_loop_pipe_sequential_init_U : component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage6,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage6)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln63_fu_498_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_152 <= add_ln63_1_fu_504_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_152 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    n_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln63_fu_498_p2 = ap_const_lv1_0))) then 
                    n_fu_144 <= add_ln64_fu_533_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_144 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    nh_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                nh_fu_148 <= ap_const_lv3_0;
            elsif (((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                nh_fu_148 <= select_ln63_1_fu_581_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln63_fu_498_p2 = ap_const_lv1_0))) then
                add_ln63_reg_1686 <= add_ln63_fu_513_p2;
                icmp_ln64_reg_1692 <= icmp_ln64_fu_519_p2;
                select_ln63_reg_1698 <= select_ln63_fu_525_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln63_reg_1682 <= icmp_ln63_fu_498_p2;
                mul_ln1171_6_reg_2055 <= grp_fu_268_p_dout0;
                mul_ln1171_7_reg_2065 <= grp_fu_272_p_dout0;
                nh_1_reg_1676 <= ap_sig_allocacmp_nh_1;
                select_ln63_reg_1698_pp0_iter1_reg <= select_ln63_reg_1698;
                tmp_22_reg_2060 <= add_ln1245_4_fu_1314_p2(45 downto 18);
                    tmp_reg_1670(4 downto 2) <= tmp_fu_469_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_ln1171_10_reg_2125 <= grp_fu_284_p_dout0;
                mul_ln1171_11_reg_2135 <= grp_fu_288_p_dout0;
                tmp_26_reg_2130 <= add_ln1245_8_fu_1460_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_ln1171_12_reg_2155 <= grp_fu_292_p_dout0;
                mul_ln1171_13_reg_2165 <= grp_fu_296_p_dout0;
                tmp_28_reg_2160 <= add_ln1245_10_fu_1528_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_ln1171_14_reg_2170 <= grp_fu_300_p_dout0;
                mul_ln1171_15_reg_2180 <= grp_fu_304_p_dout0;
                tmp_30_reg_2175 <= add_ln1245_12_fu_1573_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_ln1171_1_reg_1895 <= grp_fu_248_p_dout0;
                tmp_17_reg_1900 <= grp_fu_244_p_dout0(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_ln1171_2_reg_1945 <= grp_fu_252_p_dout0;
                mul_ln1171_3_reg_1955 <= grp_fu_256_p_dout0;
                tmp_18_reg_1950 <= add_ln1245_fu_1056_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_ln1171_4_reg_2000 <= grp_fu_260_p_dout0;
                mul_ln1171_5_reg_2010 <= grp_fu_264_p_dout0;
                tmp_20_reg_2005 <= add_ln1245_2_fu_1185_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_ln1171_8_reg_2090 <= grp_fu_276_p_dout0;
                mul_ln1171_9_reg_2100 <= grp_fu_280_p_dout0;
                select_ln63_1_reg_1704_pp0_iter1_reg <= select_ln63_1_reg_1704;
                tmp_24_reg_2095 <= add_ln1245_6_fu_1387_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_453 <= scoring_fn_target_V_q1;
                reg_457 <= scoring_fn_target_V_q0;
                reg_461 <= nodes_features_proj_V_q1;
                reg_465 <= nodes_features_proj_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln63_reg_1682 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                select_ln63_1_reg_1704 <= select_ln63_1_fu_581_p3;
                    select_ln63_2_reg_1709(8 downto 4) <= select_ln63_2_fu_590_p3(8 downto 4);
                    tmp_36_reg_1737(11 downto 4) <= tmp_36_fu_630_p3(11 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                trunc_ln717_s_reg_2190 <= add_ln1245_14_fu_1621_p2(45 downto 18);
            end if;
        end if;
    end process;
    tmp_reg_1670(1 downto 0) <= "00";
    select_ln63_2_reg_1709(3 downto 0) <= "0000";
    tmp_36_reg_1737(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage6_subdone, ap_condition_exit_pp0_iter0_stage6, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage6)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln1169_fu_624_p2 <= std_logic_vector(unsigned(zext_ln1169_4_fu_620_p1) + unsigned(zext_ln69_fu_586_p1));
    add_ln1171_1_fu_568_p2 <= std_logic_vector(unsigned(tmp_reg_1670) + unsigned(zext_ln1171_3_fu_565_p1));
    add_ln1171_fu_552_p2 <= std_logic_vector(unsigned(tmp_reg_1670) + unsigned(zext_ln1171_fu_549_p1));
    add_ln1245_10_fu_1528_p2 <= std_logic_vector(unsigned(shl_ln737_s_fu_1520_p3) + unsigned(mul_ln1171_11_reg_2135));
    add_ln1245_11_fu_1550_p2 <= std_logic_vector(unsigned(shl_ln737_10_fu_1543_p3) + unsigned(mul_ln1171_12_reg_2155));
    add_ln1245_12_fu_1573_p2 <= std_logic_vector(unsigned(shl_ln737_11_fu_1565_p3) + unsigned(mul_ln1171_13_reg_2165));
    add_ln1245_13_fu_1598_p2 <= std_logic_vector(unsigned(shl_ln737_12_fu_1591_p3) + unsigned(mul_ln1171_14_reg_2170));
    add_ln1245_14_fu_1621_p2 <= std_logic_vector(unsigned(shl_ln737_13_fu_1613_p3) + unsigned(mul_ln1171_15_reg_2180));
    add_ln1245_1_fu_1162_p2 <= std_logic_vector(unsigned(shl_ln737_1_fu_1155_p3) + unsigned(mul_ln1171_2_reg_1945));
    add_ln1245_2_fu_1185_p2 <= std_logic_vector(unsigned(shl_ln737_2_fu_1177_p3) + unsigned(mul_ln1171_3_reg_1955));
    add_ln1245_3_fu_1291_p2 <= std_logic_vector(unsigned(shl_ln737_3_fu_1284_p3) + unsigned(mul_ln1171_4_reg_2000));
    add_ln1245_4_fu_1314_p2 <= std_logic_vector(unsigned(shl_ln737_4_fu_1306_p3) + unsigned(mul_ln1171_5_reg_2010));
    add_ln1245_5_fu_1364_p2 <= std_logic_vector(unsigned(shl_ln737_5_fu_1357_p3) + unsigned(mul_ln1171_6_reg_2055));
    add_ln1245_6_fu_1387_p2 <= std_logic_vector(unsigned(shl_ln737_6_fu_1379_p3) + unsigned(mul_ln1171_7_reg_2065));
    add_ln1245_7_fu_1437_p2 <= std_logic_vector(unsigned(shl_ln737_7_fu_1430_p3) + unsigned(mul_ln1171_8_reg_2090));
    add_ln1245_8_fu_1460_p2 <= std_logic_vector(unsigned(shl_ln737_8_fu_1452_p3) + unsigned(mul_ln1171_9_reg_2100));
    add_ln1245_9_fu_1505_p2 <= std_logic_vector(unsigned(shl_ln737_9_fu_1498_p3) + unsigned(mul_ln1171_10_reg_2125));
    add_ln1245_fu_1056_p2 <= std_logic_vector(unsigned(shl_ln_fu_1049_p3) + unsigned(mul_ln1171_1_reg_1895));
    add_ln63_1_fu_504_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv7_1));
    add_ln63_fu_513_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_nh_1) + unsigned(ap_const_lv3_1));
    add_ln64_fu_533_p2 <= std_logic_vector(unsigned(select_ln63_fu_525_p3) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, icmp_ln63_reg_1682)
    begin
        if (((icmp_ln63_reg_1682 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage6;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_152)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_152;
        end if; 
    end process;


    ap_sig_allocacmp_n_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_fu_144, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_n_load <= n_fu_144;
        end if; 
    end process;


    ap_sig_allocacmp_nh_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, nh_fu_148)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_nh_1 <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_nh_1 <= nh_fu_148;
        end if; 
    end process;

    grp_fu_1640_p0 <= grp_fu_1640_p00(3 - 1 downto 0);
    grp_fu_1640_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln63_1_reg_1704_pp0_iter1_reg),9));
    grp_fu_1640_p1 <= ap_const_lv9_64(7 - 1 downto 0);
    grp_fu_1640_p2 <= grp_fu_1640_p20(5 - 1 downto 0);
    grp_fu_1640_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln63_reg_1698_pp0_iter1_reg),9));
    grp_fu_244_p_ce <= ap_const_logic_1;
    grp_fu_244_p_din0 <= sext_ln63_fu_723_p1(28 - 1 downto 0);
    grp_fu_244_p_din1 <= sext_ln1171_fu_787_p1(28 - 1 downto 0);
    grp_fu_248_p_ce <= ap_const_logic_1;
    grp_fu_248_p_din0 <= sext_ln63_1_fu_727_p1(28 - 1 downto 0);
    grp_fu_248_p_din1 <= sext_ln1171_1_fu_797_p1(28 - 1 downto 0);
    grp_fu_252_p_ce <= ap_const_logic_1;
    grp_fu_252_p_din0 <= sext_ln63_2_fu_807_p1(28 - 1 downto 0);
    grp_fu_252_p_din1 <= sext_ln1171_2_fu_871_p1(28 - 1 downto 0);
    grp_fu_256_p_ce <= ap_const_logic_1;
    grp_fu_256_p_din0 <= sext_ln63_3_fu_811_p1(28 - 1 downto 0);
    grp_fu_256_p_din1 <= sext_ln1171_3_fu_881_p1(28 - 1 downto 0);
    grp_fu_260_p_ce <= ap_const_logic_1;
    grp_fu_260_p_din0 <= sext_ln63_4_fu_891_p1(28 - 1 downto 0);
    grp_fu_260_p_din1 <= sext_ln1171_4_fu_965_p1(28 - 1 downto 0);
    grp_fu_264_p_ce <= ap_const_logic_1;
    grp_fu_264_p_din0 <= sext_ln63_5_fu_895_p1(28 - 1 downto 0);
    grp_fu_264_p_din1 <= sext_ln1171_5_fu_975_p1(28 - 1 downto 0);
    grp_fu_268_p_ce <= ap_const_logic_1;
    grp_fu_268_p_din0 <= sext_ln63_6_fu_985_p1(28 - 1 downto 0);
    grp_fu_268_p_din1 <= sext_ln1171_6_fu_1071_p1(28 - 1 downto 0);
    grp_fu_272_p_ce <= ap_const_logic_1;
    grp_fu_272_p_din0 <= sext_ln63_7_fu_989_p1(28 - 1 downto 0);
    grp_fu_272_p_din1 <= sext_ln1171_7_fu_1081_p1(28 - 1 downto 0);
    grp_fu_276_p_ce <= ap_const_logic_1;
    grp_fu_276_p_din0 <= sext_ln63_8_fu_1091_p1(28 - 1 downto 0);
    grp_fu_276_p_din1 <= sext_ln1171_8_fu_1200_p1(28 - 1 downto 0);
    grp_fu_280_p_ce <= ap_const_logic_1;
    grp_fu_280_p_din0 <= sext_ln63_9_fu_1095_p1(28 - 1 downto 0);
    grp_fu_280_p_din1 <= sext_ln1171_9_fu_1210_p1(28 - 1 downto 0);
    grp_fu_284_p_ce <= ap_const_logic_1;
    grp_fu_284_p_din0 <= sext_ln63_10_fu_1220_p1(28 - 1 downto 0);
    grp_fu_284_p_din1 <= sext_ln1171_10_fu_1329_p1(28 - 1 downto 0);
    grp_fu_288_p_ce <= ap_const_logic_1;
    grp_fu_288_p_din0 <= sext_ln63_11_fu_1224_p1(28 - 1 downto 0);
    grp_fu_288_p_din1 <= sext_ln1171_11_fu_1339_p1(28 - 1 downto 0);
    grp_fu_292_p_ce <= ap_const_logic_1;
    grp_fu_292_p_din0 <= sext_ln63_12_fu_1349_p1(28 - 1 downto 0);
    grp_fu_292_p_din1 <= sext_ln1171_12_fu_1402_p1(28 - 1 downto 0);
    grp_fu_296_p_ce <= ap_const_logic_1;
    grp_fu_296_p_din0 <= sext_ln63_13_fu_1353_p1(28 - 1 downto 0);
    grp_fu_296_p_din1 <= sext_ln1171_13_fu_1412_p1(28 - 1 downto 0);
    grp_fu_300_p_ce <= ap_const_logic_1;
    grp_fu_300_p_din0 <= sext_ln63_14_fu_1422_p1(28 - 1 downto 0);
    grp_fu_300_p_din1 <= sext_ln1171_14_fu_1475_p1(28 - 1 downto 0);
    grp_fu_304_p_ce <= ap_const_logic_1;
    grp_fu_304_p_din0 <= sext_ln63_15_fu_1426_p1(28 - 1 downto 0);
    grp_fu_304_p_din1 <= sext_ln1171_15_fu_1485_p1(28 - 1 downto 0);
    icmp_ln63_fu_498_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv7_4C) else "0";
    icmp_ln64_fu_519_p2 <= "1" when (ap_sig_allocacmp_n_load = ap_const_lv5_13) else "0";

    nodes_features_proj_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1169_6_fu_657_p1, ap_block_pp0_stage2, zext_ln1169_8_fu_718_p1, ap_block_pp0_stage3, zext_ln1169_10_fu_782_p1, ap_block_pp0_stage4, zext_ln1169_12_fu_866_p1, ap_block_pp0_stage5, zext_ln1169_14_fu_950_p1, ap_block_pp0_stage6, zext_ln1169_16_fu_1044_p1, ap_block_pp0_stage7, zext_ln1169_18_fu_1150_p1, ap_block_pp0_stage0, zext_ln1169_20_fu_1279_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_20_fu_1279_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_18_fu_1150_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_16_fu_1044_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_14_fu_950_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_12_fu_866_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_10_fu_782_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_8_fu_718_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_6_fu_657_p1(13 - 1 downto 0);
        else 
            nodes_features_proj_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    nodes_features_proj_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1169_5_fu_638_p1, ap_block_pp0_stage2, zext_ln1169_7_fu_700_p1, ap_block_pp0_stage3, zext_ln1169_9_fu_764_p1, ap_block_pp0_stage4, zext_ln1169_11_fu_848_p1, ap_block_pp0_stage5, zext_ln1169_13_fu_932_p1, ap_block_pp0_stage6, zext_ln1169_15_fu_1026_p1, ap_block_pp0_stage7, zext_ln1169_17_fu_1132_p1, ap_block_pp0_stage0, zext_ln1169_19_fu_1261_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_19_fu_1261_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_17_fu_1132_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_15_fu_1026_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_13_fu_932_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_11_fu_848_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_9_fu_764_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_7_fu_700_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_5_fu_638_p1(13 - 1 downto 0);
        else 
            nodes_features_proj_V_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    nodes_features_proj_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            nodes_features_proj_V_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    nodes_features_proj_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            nodes_features_proj_V_ce1 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1169_10_fu_1124_p3 <= (ap_const_lv1_0 & or_ln1169_25_fu_1119_p2);
    or_ln1169_11_fu_1142_p3 <= (ap_const_lv1_0 & or_ln1169_26_fu_1137_p2);
    or_ln1169_12_fu_1253_p3 <= (ap_const_lv1_0 & or_ln1169_27_fu_1248_p2);
    or_ln1169_13_fu_1271_p3 <= (ap_const_lv1_0 & or_ln1169_28_fu_1266_p2);
    or_ln1169_15_fu_643_p2 <= (tmp_36_fu_630_p3 or ap_const_lv12_1);
    or_ln1169_16_fu_705_p2 <= (tmp_36_reg_1737 or ap_const_lv12_3);
    or_ln1169_17_fu_751_p2 <= (tmp_36_reg_1737 or ap_const_lv12_4);
    or_ln1169_18_fu_769_p2 <= (tmp_36_reg_1737 or ap_const_lv12_5);
    or_ln1169_19_fu_835_p2 <= (tmp_36_reg_1737 or ap_const_lv12_6);
    or_ln1169_1_fu_692_p3 <= (ap_const_lv1_0 & or_ln1169_fu_687_p2);
    or_ln1169_20_fu_853_p2 <= (tmp_36_reg_1737 or ap_const_lv12_7);
    or_ln1169_21_fu_919_p2 <= (tmp_36_reg_1737 or ap_const_lv12_8);
    or_ln1169_22_fu_937_p2 <= (tmp_36_reg_1737 or ap_const_lv12_9);
    or_ln1169_23_fu_1013_p2 <= (tmp_36_reg_1737 or ap_const_lv12_A);
    or_ln1169_24_fu_1031_p2 <= (tmp_36_reg_1737 or ap_const_lv12_B);
    or_ln1169_25_fu_1119_p2 <= (tmp_36_reg_1737 or ap_const_lv12_C);
    or_ln1169_26_fu_1137_p2 <= (tmp_36_reg_1737 or ap_const_lv12_D);
    or_ln1169_27_fu_1248_p2 <= (tmp_36_reg_1737 or ap_const_lv12_E);
    or_ln1169_28_fu_1266_p2 <= (tmp_36_reg_1737 or ap_const_lv12_F);
    or_ln1169_2_fu_710_p3 <= (ap_const_lv1_0 & or_ln1169_16_fu_705_p2);
    or_ln1169_3_fu_756_p3 <= (ap_const_lv1_0 & or_ln1169_17_fu_751_p2);
    or_ln1169_4_fu_774_p3 <= (ap_const_lv1_0 & or_ln1169_18_fu_769_p2);
    or_ln1169_5_fu_840_p3 <= (ap_const_lv1_0 & or_ln1169_19_fu_835_p2);
    or_ln1169_6_fu_858_p3 <= (ap_const_lv1_0 & or_ln1169_20_fu_853_p2);
    or_ln1169_7_fu_924_p3 <= (ap_const_lv1_0 & or_ln1169_21_fu_919_p2);
    or_ln1169_8_fu_942_p3 <= (ap_const_lv1_0 & or_ln1169_22_fu_937_p2);
    or_ln1169_9_fu_1018_p3 <= (ap_const_lv1_0 & or_ln1169_23_fu_1013_p2);
    or_ln1169_fu_687_p2 <= (tmp_36_reg_1737 or ap_const_lv12_2);
    or_ln1169_s_fu_1036_p3 <= (ap_const_lv1_0 & or_ln1169_24_fu_1031_p2);
    or_ln63_10_fu_1003_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_B);
    or_ln63_11_fu_1099_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_C);
    or_ln63_12_fu_1109_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_D);
    or_ln63_13_fu_1228_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_E);
    or_ln63_14_fu_1238_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_F);
    or_ln63_1_fu_667_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_2);
    or_ln63_2_fu_677_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_3);
    or_ln63_3_fu_731_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_4);
    or_ln63_4_fu_741_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_5);
    or_ln63_5_fu_815_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_6);
    or_ln63_6_fu_825_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_7);
    or_ln63_7_fu_899_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_8);
    or_ln63_8_fu_909_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_9);
    or_ln63_9_fu_993_p2 <= (select_ln63_2_reg_1709 or ap_const_lv9_A);
    or_ln63_fu_602_p2 <= (select_ln63_2_fu_590_p3 or ap_const_lv9_1);
    or_ln_fu_649_p3 <= (ap_const_lv1_0 & or_ln1169_15_fu_643_p2);
    scores_target_V_address1 <= zext_ln69_1_fu_1636_p1(9 - 1 downto 0);

    scores_target_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            scores_target_V_ce1 <= ap_const_logic_1;
        else 
            scores_target_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    scores_target_V_d1 <= trunc_ln717_s_reg_2190;

    scores_target_V_we1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            scores_target_V_we1 <= ap_const_logic_1;
        else 
            scores_target_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    scoring_fn_target_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1171_5_fu_608_p1, ap_block_pp0_stage2, zext_ln1171_7_fu_682_p1, ap_block_pp0_stage3, zext_ln1171_9_fu_746_p1, ap_block_pp0_stage4, zext_ln1171_11_fu_830_p1, ap_block_pp0_stage5, zext_ln1171_13_fu_914_p1, ap_block_pp0_stage6, zext_ln1171_15_fu_1008_p1, ap_block_pp0_stage7, zext_ln1171_17_fu_1114_p1, ap_block_pp0_stage0, zext_ln1171_19_fu_1243_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_19_fu_1243_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_17_fu_1114_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_15_fu_1008_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_13_fu_914_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_11_fu_830_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_9_fu_746_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_7_fu_682_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_5_fu_608_p1(9 - 1 downto 0);
        else 
            scoring_fn_target_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    scoring_fn_target_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, zext_ln1171_4_fu_597_p1, ap_block_pp0_stage1, zext_ln1171_6_fu_672_p1, ap_block_pp0_stage2, zext_ln1171_8_fu_736_p1, ap_block_pp0_stage3, zext_ln1171_10_fu_820_p1, ap_block_pp0_stage4, zext_ln1171_12_fu_904_p1, ap_block_pp0_stage5, zext_ln1171_14_fu_998_p1, ap_block_pp0_stage6, zext_ln1171_16_fu_1104_p1, ap_block_pp0_stage7, zext_ln1171_18_fu_1233_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_18_fu_1233_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_16_fu_1104_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_14_fu_998_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_12_fu_904_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_10_fu_820_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_8_fu_736_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_6_fu_672_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_4_fu_597_p1(9 - 1 downto 0);
        else 
            scoring_fn_target_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    scoring_fn_target_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            scoring_fn_target_V_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    scoring_fn_target_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            scoring_fn_target_V_ce1 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln63_1_fu_581_p3 <= 
        add_ln63_reg_1686 when (icmp_ln64_reg_1692(0) = '1') else 
        nh_1_reg_1676;
    select_ln63_2_fu_590_p3 <= 
        tmp_49_cast_fu_573_p3 when (icmp_ln64_reg_1692(0) = '1') else 
        tmp_47_cast_fu_557_p3;
    select_ln63_fu_525_p3 <= 
        ap_const_lv5_0 when (icmp_ln64_fu_519_p2(0) = '1') else 
        ap_sig_allocacmp_n_load;
        sext_ln1171_10_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_461),46));

        sext_ln1171_11_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_465),46));

        sext_ln1171_12_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_461),46));

        sext_ln1171_13_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_465),46));

        sext_ln1171_14_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_461),46));

        sext_ln1171_15_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_465),46));

        sext_ln1171_1_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_465),46));

        sext_ln1171_2_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_461),46));

        sext_ln1171_3_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_465),46));

        sext_ln1171_4_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_461),46));

        sext_ln1171_5_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_465),46));

        sext_ln1171_6_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_461),46));

        sext_ln1171_7_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_465),46));

        sext_ln1171_8_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_461),46));

        sext_ln1171_9_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_465),46));

        sext_ln1171_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_461),46));

        sext_ln63_10_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_453),46));

        sext_ln63_11_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_457),46));

        sext_ln63_12_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_453),46));

        sext_ln63_13_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_457),46));

        sext_ln63_14_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_453),46));

        sext_ln63_15_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_457),46));

        sext_ln63_1_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_457),46));

        sext_ln63_2_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_453),46));

        sext_ln63_3_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_457),46));

        sext_ln63_4_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_453),46));

        sext_ln63_5_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_457),46));

        sext_ln63_6_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_453),46));

        sext_ln63_7_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_457),46));

        sext_ln63_8_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_453),46));

        sext_ln63_9_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_457),46));

        sext_ln63_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_453),46));

    shl_ln737_10_fu_1543_p3 <= (tmp_28_reg_2160 & ap_const_lv18_0);
    shl_ln737_11_fu_1565_p3 <= (tmp_29_fu_1555_p4 & ap_const_lv18_0);
    shl_ln737_12_fu_1591_p3 <= (tmp_30_reg_2175 & ap_const_lv18_0);
    shl_ln737_13_fu_1613_p3 <= (tmp_31_fu_1603_p4 & ap_const_lv18_0);
    shl_ln737_1_fu_1155_p3 <= (tmp_18_reg_1950 & ap_const_lv18_0);
    shl_ln737_2_fu_1177_p3 <= (tmp_19_fu_1167_p4 & ap_const_lv18_0);
    shl_ln737_3_fu_1284_p3 <= (tmp_20_reg_2005 & ap_const_lv18_0);
    shl_ln737_4_fu_1306_p3 <= (tmp_21_fu_1296_p4 & ap_const_lv18_0);
    shl_ln737_5_fu_1357_p3 <= (tmp_22_reg_2060 & ap_const_lv18_0);
    shl_ln737_6_fu_1379_p3 <= (tmp_23_fu_1369_p4 & ap_const_lv18_0);
    shl_ln737_7_fu_1430_p3 <= (tmp_24_reg_2095 & ap_const_lv18_0);
    shl_ln737_8_fu_1452_p3 <= (tmp_25_fu_1442_p4 & ap_const_lv18_0);
    shl_ln737_9_fu_1498_p3 <= (tmp_26_reg_2130 & ap_const_lv18_0);
    shl_ln737_s_fu_1520_p3 <= (tmp_27_fu_1510_p4 & ap_const_lv18_0);
    shl_ln_fu_1049_p3 <= (tmp_17_reg_1900 & ap_const_lv18_0);
    tmp_19_fu_1167_p4 <= add_ln1245_1_fu_1162_p2(45 downto 18);
    tmp_21_fu_1296_p4 <= add_ln1245_3_fu_1291_p2(45 downto 18);
    tmp_23_fu_1369_p4 <= add_ln1245_5_fu_1364_p2(45 downto 18);
    tmp_25_fu_1442_p4 <= add_ln1245_7_fu_1437_p2(45 downto 18);
    tmp_27_fu_1510_p4 <= add_ln1245_9_fu_1505_p2(45 downto 18);
    tmp_29_fu_1555_p4 <= add_ln1245_11_fu_1550_p2(45 downto 18);
    tmp_31_fu_1603_p4 <= add_ln1245_13_fu_1598_p2(45 downto 18);
    tmp_36_fu_630_p3 <= (add_ln1169_fu_624_p2 & ap_const_lv4_0);
    tmp_47_cast_fu_557_p3 <= (add_ln1171_fu_552_p2 & ap_const_lv4_0);
    tmp_49_cast_fu_573_p3 <= (add_ln1171_1_fu_568_p2 & ap_const_lv4_0);
    tmp_fu_469_p3 <= (layer & ap_const_lv2_0);
    tmp_s_fu_613_p3 <= (select_ln63_reg_1698 & ap_const_lv2_0);
    zext_ln1169_10_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_4_fu_774_p3),64));
    zext_ln1169_11_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_5_fu_840_p3),64));
    zext_ln1169_12_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_6_fu_858_p3),64));
    zext_ln1169_13_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_7_fu_924_p3),64));
    zext_ln1169_14_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_8_fu_942_p3),64));
    zext_ln1169_15_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_9_fu_1018_p3),64));
    zext_ln1169_16_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_s_fu_1036_p3),64));
    zext_ln1169_17_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_10_fu_1124_p3),64));
    zext_ln1169_18_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_11_fu_1142_p3),64));
    zext_ln1169_19_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_12_fu_1253_p3),64));
    zext_ln1169_20_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_13_fu_1271_p3),64));
    zext_ln1169_4_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_613_p3),8));
    zext_ln1169_5_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_630_p3),64));
    zext_ln1169_6_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_649_p3),64));
    zext_ln1169_7_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_1_fu_692_p3),64));
    zext_ln1169_8_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_2_fu_710_p3),64));
    zext_ln1169_9_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_3_fu_756_p3),64));
    zext_ln1171_10_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_5_fu_815_p2),64));
    zext_ln1171_11_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_6_fu_825_p2),64));
    zext_ln1171_12_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_7_fu_899_p2),64));
    zext_ln1171_13_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_8_fu_909_p2),64));
    zext_ln1171_14_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_9_fu_993_p2),64));
    zext_ln1171_15_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_10_fu_1003_p2),64));
    zext_ln1171_16_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_11_fu_1099_p2),64));
    zext_ln1171_17_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_12_fu_1109_p2),64));
    zext_ln1171_18_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_13_fu_1228_p2),64));
    zext_ln1171_19_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_14_fu_1238_p2),64));
    zext_ln1171_3_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln63_reg_1686),5));
    zext_ln1171_4_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln63_2_fu_590_p3),64));
    zext_ln1171_5_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_fu_602_p2),64));
    zext_ln1171_6_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_1_fu_667_p2),64));
    zext_ln1171_7_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_2_fu_677_p2),64));
    zext_ln1171_8_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_3_fu_731_p2),64));
    zext_ln1171_9_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln63_4_fu_741_p2),64));
    zext_ln1171_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nh_1_reg_1676),5));
    zext_ln69_1_fu_1636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1640_p3),64));
    zext_ln69_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln63_1_fu_581_p3),8));
end behav;
