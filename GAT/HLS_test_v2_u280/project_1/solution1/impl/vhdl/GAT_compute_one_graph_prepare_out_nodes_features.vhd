-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_prepare_out_nodes_features is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    num_in_features : IN STD_LOGIC_VECTOR (6 downto 0);
    layer : IN STD_LOGIC_VECTOR (2 downto 0);
    out_nodes_features_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_nodes_features_V_ce0 : OUT STD_LOGIC;
    out_nodes_features_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    out_nodes_features_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_nodes_features_V_ce1 : OUT STD_LOGIC;
    out_nodes_features_V_we1 : OUT STD_LOGIC;
    out_nodes_features_V_d1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    out_nodes_features_skip_concat_bias_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_nodes_features_skip_concat_bias_V_ce0 : OUT STD_LOGIC;
    out_nodes_features_skip_concat_bias_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    skip_proj_weight_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    skip_proj_weight_V_ce0 : OUT STD_LOGIC;
    skip_proj_weight_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0) );
end;


architecture behav of GAT_compute_one_graph_prepare_out_nodes_features is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv11_4C0 : STD_LOGIC_VECTOR (10 downto 0) := "10011000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_122_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_293 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln154_1_fu_186_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln154_1_reg_301 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln154_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1171_fu_198_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1171_reg_306 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_nodes_features_V_addr_reg_311 : STD_LOGIC_VECTOR (12 downto 0);
    signal out_nodes_features_V_load_reg_317 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_1_fu_241_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_reg_322 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_3_cast_fu_249_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_3_cast_reg_327 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start : STD_LOGIC;
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_done : STD_LOGIC;
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_idle : STD_LOGIC;
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_ready : STD_LOGIC;
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_lhs_out : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_lhs_out_ap_vld : STD_LOGIC;
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_out_nodes_features_skip_concat_bias_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_out_nodes_features_skip_concat_bias_V_ce0 : STD_LOGIC;
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_skip_proj_weight_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_skip_proj_weight_V_ce0 : STD_LOGIC;
    signal grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_5_cast_fu_215_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dim_out_fu_64 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln155_fu_220_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal nd_fu_68 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_72 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln154_1_fu_154_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln155_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln154_fu_166_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln154_fu_178_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1171_fu_194_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_78_fu_203_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_207_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_nodes_features_V_load : IN STD_LOGIC_VECTOR (27 downto 0);
        num_in_features : IN STD_LOGIC_VECTOR (6 downto 0);
        zext_ln1169 : IN STD_LOGIC_VECTOR (10 downto 0);
        tmp_3 : IN STD_LOGIC_VECTOR (14 downto 0);
        lhs_out : OUT STD_LOGIC_VECTOR (27 downto 0);
        lhs_out_ap_vld : OUT STD_LOGIC;
        out_nodes_features_skip_concat_bias_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        out_nodes_features_skip_concat_bias_V_ce0 : OUT STD_LOGIC;
        out_nodes_features_skip_concat_bias_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
        skip_proj_weight_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        skip_proj_weight_V_ce0 : OUT STD_LOGIC;
        skip_proj_weight_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0) );
    end component;



begin
    grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109 : component GAT_compute_one_graph_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start,
        ap_done => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_done,
        ap_idle => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_idle,
        ap_ready => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_ready,
        out_nodes_features_V_load => out_nodes_features_V_load_reg_317,
        num_in_features => num_in_features,
        zext_ln1169 => tmp_1_reg_322,
        tmp_3 => tmp_3_cast_reg_327,
        lhs_out => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_lhs_out,
        lhs_out_ap_vld => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_lhs_out_ap_vld,
        out_nodes_features_skip_concat_bias_V_address0 => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_out_nodes_features_skip_concat_bias_V_address0,
        out_nodes_features_skip_concat_bias_V_ce0 => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_out_nodes_features_skip_concat_bias_V_ce0,
        out_nodes_features_skip_concat_bias_V_q0 => out_nodes_features_skip_concat_bias_V_q0,
        skip_proj_weight_V_address0 => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_skip_proj_weight_V_address0,
        skip_proj_weight_V_ce0 => grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_skip_proj_weight_V_ce0,
        skip_proj_weight_V_q0 => skip_proj_weight_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_ready = ap_const_logic_1)) then 
                    grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    dim_out_fu_64_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                dim_out_fu_64 <= ap_const_lv7_0;
            elsif (((icmp_ln154_fu_148_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                dim_out_fu_64 <= add_ln155_fu_220_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_fu_72 <= ap_const_lv11_0;
            elsif (((icmp_ln154_fu_148_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_fu_72 <= add_ln154_1_fu_154_p2;
            end if; 
        end if;
    end process;

    nd_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                nd_fu_68 <= ap_const_lv5_0;
            elsif (((icmp_ln154_fu_148_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                nd_fu_68 <= select_ln154_1_fu_186_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln154_fu_148_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln1171_reg_306 <= add_ln1171_fu_198_p2;
                    out_nodes_features_V_addr_reg_311(10 downto 0) <= tmp_5_cast_fu_215_p1(13 - 1 downto 0)(10 downto 0);
                select_ln154_1_reg_301 <= select_ln154_1_fu_186_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                out_nodes_features_V_load_reg_317 <= out_nodes_features_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    tmp_1_reg_322(10 downto 6) <= tmp_1_fu_241_p3(10 downto 6);
                    tmp_3_cast_reg_327(14 downto 6) <= tmp_3_cast_fu_249_p3(14 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    tmp_reg_293(8 downto 6) <= tmp_fu_122_p3(8 downto 6);
            end if;
        end if;
    end process;
    tmp_reg_293(5 downto 0) <= "000000";
    out_nodes_features_V_addr_reg_311(12 downto 11) <= "00";
    tmp_1_reg_322(5 downto 0) <= "000000";
    tmp_3_cast_reg_327(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln154_fu_148_p2, grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln154_fu_148_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln1171_fu_198_p2 <= std_logic_vector(unsigned(tmp_reg_293) + unsigned(zext_ln1171_fu_194_p1));
    add_ln154_1_fu_154_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_72) + unsigned(ap_const_lv11_1));
    add_ln154_fu_166_p2 <= std_logic_vector(unsigned(nd_fu_68) + unsigned(ap_const_lv5_1));
    add_ln155_fu_220_p2 <= std_logic_vector(unsigned(select_ln154_fu_178_p3) + unsigned(ap_const_lv7_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_done)
    begin
        if ((grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln154_fu_148_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((icmp_ln154_fu_148_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln154_fu_148_p2)
    begin
        if (((icmp_ln154_fu_148_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_78_fu_203_p1 <= select_ln154_fu_178_p3(6 - 1 downto 0);
    grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start <= grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_ap_start_reg;
    icmp_ln154_fu_148_p2 <= "1" when (indvar_flatten_fu_72 = ap_const_lv11_4C0) else "0";
    icmp_ln155_fu_172_p2 <= "1" when (dim_out_fu_64 = ap_const_lv7_40) else "0";
    out_nodes_features_V_address0 <= tmp_5_cast_fu_215_p1(13 - 1 downto 0);
    out_nodes_features_V_address1 <= out_nodes_features_V_addr_reg_311;

    out_nodes_features_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_nodes_features_V_ce0 <= ap_const_logic_1;
        else 
            out_nodes_features_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_nodes_features_V_ce1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_nodes_features_V_ce1 <= ap_const_logic_1;
        else 
            out_nodes_features_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_nodes_features_V_d1 <= grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_lhs_out;

    out_nodes_features_V_we1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_nodes_features_V_we1 <= ap_const_logic_1;
        else 
            out_nodes_features_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    out_nodes_features_skip_concat_bias_V_address0 <= grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_out_nodes_features_skip_concat_bias_V_address0;
    out_nodes_features_skip_concat_bias_V_ce0 <= grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_out_nodes_features_skip_concat_bias_V_ce0;
    select_ln154_1_fu_186_p3 <= 
        add_ln154_fu_166_p2 when (icmp_ln155_fu_172_p2(0) = '1') else 
        nd_fu_68;
    select_ln154_fu_178_p3 <= 
        ap_const_lv7_0 when (icmp_ln155_fu_172_p2(0) = '1') else 
        dim_out_fu_64;
    skip_proj_weight_V_address0 <= grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_skip_proj_weight_V_address0;
    skip_proj_weight_V_ce0 <= grp_prepare_out_nodes_features_Pipeline_VITIS_LOOP_156_3_fu_109_skip_proj_weight_V_ce0;
    tmp_1_fu_241_p3 <= (select_ln154_1_reg_301 & ap_const_lv6_0);
    tmp_3_cast_fu_249_p3 <= (add_ln1171_reg_306 & ap_const_lv6_0);
    tmp_5_cast_fu_215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_207_p3),64));
    tmp_5_fu_207_p3 <= (select_ln154_1_fu_186_p3 & empty_78_fu_203_p1);
    tmp_fu_122_p3 <= (layer & ap_const_lv6_0);
    zext_ln1171_fu_194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln154_fu_178_p3),9));
end behav;
