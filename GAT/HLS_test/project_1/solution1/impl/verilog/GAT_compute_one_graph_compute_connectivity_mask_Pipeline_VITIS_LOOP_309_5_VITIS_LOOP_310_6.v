// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_compute_connectivity_mask_Pipeline_VITIS_LOOP_309_5_VITIS_LOOP_310_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_of_nodes,
        bound,
        connectivity_mask_address0,
        connectivity_mask_ce0,
        connectivity_mask_q0,
        connectivity_mask_address1,
        connectivity_mask_ce1,
        connectivity_mask_we1,
        connectivity_mask_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [30:0] num_of_nodes;
input  [61:0] bound;
output  [13:0] connectivity_mask_address0;
output   connectivity_mask_ce0;
input  [31:0] connectivity_mask_q0;
output  [13:0] connectivity_mask_address1;
output   connectivity_mask_ce1;
output   connectivity_mask_we1;
output  [31:0] connectivity_mask_d1;

reg ap_idle;
reg connectivity_mask_ce0;
reg connectivity_mask_ce1;
reg connectivity_mask_we1;
reg[31:0] connectivity_mask_d1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln309_fu_127_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [13:0] select_ln309_fu_147_p3;
reg   [13:0] select_ln309_reg_242;
reg   [13:0] select_ln309_reg_242_pp0_iter2_reg;
wire  signed [13:0] select_ln309_1_fu_155_p3;
reg   [13:0] connectivity_mask_addr_reg_253;
reg   [13:0] connectivity_mask_addr_reg_253_pp0_iter5_reg;
wire   [0:0] icmp_ln311_fu_187_p2;
reg   [0:0] icmp_ln311_reg_259;
wire   [0:0] icmp_ln313_fu_193_p2;
reg   [0:0] icmp_ln313_reg_263;
wire   [63:0] zext_ln311_fu_183_p1;
wire    ap_block_pp0_stage0;
reg   [13:0] j_fu_54;
wire   [13:0] add_ln310_fu_173_p2;
reg   [13:0] ap_sig_allocacmp_j_3;
wire    ap_loop_init;
reg   [13:0] i_fu_58;
reg   [61:0] indvar_flatten7_fu_62;
wire   [61:0] add_ln309_1_fu_132_p2;
wire   [30:0] j_5_cast1_fu_118_p1;
wire   [0:0] icmp_ln310_fu_122_p2;
wire   [13:0] add_ln309_fu_141_p2;
wire  signed [13:0] zext_ln311_fu_183_p0;
wire   [13:0] grp_fu_199_p3;
wire  signed [13:0] grp_fu_199_p0;
wire   [6:0] grp_fu_199_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_mac_muladd_14s_7ns_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_14s_7ns_14ns_14_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_199_p0),
    .din1(grp_fu_199_p1),
    .din2(select_ln309_reg_242_pp0_iter2_reg),
    .ce(1'b1),
    .dout(grp_fu_199_p3)
);

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_58 <= 14'd0;
        end else if (((icmp_ln309_fu_127_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_58 <= select_ln309_1_fu_155_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten7_fu_62 <= 62'd0;
        end else if (((icmp_ln309_fu_127_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten7_fu_62 <= add_ln309_1_fu_132_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            j_fu_54 <= 14'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            j_fu_54 <= add_ln310_fu_173_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        connectivity_mask_addr_reg_253 <= zext_ln311_fu_183_p1;
        connectivity_mask_addr_reg_253_pp0_iter5_reg <= connectivity_mask_addr_reg_253;
        icmp_ln311_reg_259 <= icmp_ln311_fu_187_p2;
        select_ln309_reg_242_pp0_iter2_reg <= select_ln309_reg_242;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln311_fu_187_p2 == 1'd0))) begin
        icmp_ln313_reg_263 <= icmp_ln313_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_fu_127_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln309_reg_242 <= select_ln309_fu_147_p3;
    end
end

always @ (*) begin
    if (((icmp_ln309_fu_127_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_j_3 = add_ln310_fu_173_p2;
    end else begin
        ap_sig_allocacmp_j_3 = j_fu_54;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        connectivity_mask_ce0 = 1'b1;
    end else begin
        connectivity_mask_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln311_reg_259 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln313_reg_263 == 1'd1) & (icmp_ln311_reg_259 == 1'd0)))) begin
        connectivity_mask_ce1 = 1'b1;
    end else begin
        connectivity_mask_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        if ((icmp_ln311_reg_259 == 1'd1)) begin
            connectivity_mask_d1 = 32'd2147483648;
        end else if (((icmp_ln313_reg_263 == 1'd1) & (icmp_ln311_reg_259 == 1'd0))) begin
            connectivity_mask_d1 = 32'd0;
        end else begin
            connectivity_mask_d1 = 'bx;
        end
    end else begin
        connectivity_mask_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln311_reg_259 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln313_reg_263 == 1'd1) & (icmp_ln311_reg_259 == 1'd0)))) begin
        connectivity_mask_we1 = 1'b1;
    end else begin
        connectivity_mask_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln309_1_fu_132_p2 = (indvar_flatten7_fu_62 + 62'd1);

assign add_ln309_fu_141_p2 = (i_fu_58 + 14'd1);

assign add_ln310_fu_173_p2 = (select_ln309_reg_242 + 14'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign connectivity_mask_address0 = zext_ln311_fu_183_p1;

assign connectivity_mask_address1 = connectivity_mask_addr_reg_253_pp0_iter5_reg;

assign grp_fu_199_p0 = ((icmp_ln310_fu_122_p2[0:0] == 1'b1) ? add_ln309_fu_141_p2 : i_fu_58);

assign grp_fu_199_p1 = 14'd100;

assign icmp_ln309_fu_127_p2 = ((indvar_flatten7_fu_62 == bound) ? 1'b1 : 1'b0);

assign icmp_ln310_fu_122_p2 = ((j_5_cast1_fu_118_p1 == num_of_nodes) ? 1'b1 : 1'b0);

assign icmp_ln311_fu_187_p2 = ((connectivity_mask_q0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln313_fu_193_p2 = (($signed(connectivity_mask_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign j_5_cast1_fu_118_p1 = ap_sig_allocacmp_j_3;

assign select_ln309_1_fu_155_p3 = ((icmp_ln310_fu_122_p2[0:0] == 1'b1) ? add_ln309_fu_141_p2 : i_fu_58);

assign select_ln309_fu_147_p3 = ((icmp_ln310_fu_122_p2[0:0] == 1'b1) ? 14'd0 : ap_sig_allocacmp_j_3);

assign zext_ln311_fu_183_p0 = grp_fu_199_p3;

assign zext_ln311_fu_183_p1 = $unsigned(zext_ln311_fu_183_p0);

endmodule //GAT_compute_one_graph_compute_connectivity_mask_Pipeline_VITIS_LOOP_309_5_VITIS_LOOP_310_6
