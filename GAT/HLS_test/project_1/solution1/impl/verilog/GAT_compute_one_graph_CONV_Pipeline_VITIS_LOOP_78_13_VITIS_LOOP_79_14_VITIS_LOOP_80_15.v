// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_CONV_Pipeline_VITIS_LOOP_78_13_VITIS_LOOP_79_14_VITIS_LOOP_80_15 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mul_ln65_1,
        mul_ln65,
        num_of_nodes,
        icmp_ln67_1,
        all_scores_V_address0,
        all_scores_V_ce0,
        all_scores_V_q0,
        all_scores_V_address1,
        all_scores_V_ce1,
        all_scores_V_we1,
        all_scores_V_d1,
        connectivity_mask_address0,
        connectivity_mask_ce0,
        connectivity_mask_q0,
        attention_coefficients_sum_V_address0,
        attention_coefficients_sum_V_ce0,
        attention_coefficients_sum_V_q0,
        attention_coefficients_sum_V_address1,
        attention_coefficients_sum_V_ce1,
        attention_coefficients_sum_V_we1,
        attention_coefficients_sum_V_d1,
        grp_exp_28_10_s_fu_2688_p_din1,
        grp_exp_28_10_s_fu_2688_p_dout0,
        grp_exp_28_10_s_fu_2688_p_start,
        grp_exp_28_10_s_fu_2688_p_ready,
        grp_exp_28_10_s_fu_2688_p_done,
        grp_exp_28_10_s_fu_2688_p_idle
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [94:0] mul_ln65_1;
input  [63:0] mul_ln65;
input  [31:0] num_of_nodes;
input  [0:0] icmp_ln67_1;
output  [15:0] all_scores_V_address0;
output   all_scores_V_ce0;
input  [27:0] all_scores_V_q0;
output  [15:0] all_scores_V_address1;
output   all_scores_V_ce1;
output   all_scores_V_we1;
output  [27:0] all_scores_V_d1;
output  [13:0] connectivity_mask_address0;
output   connectivity_mask_ce0;
input  [31:0] connectivity_mask_q0;
output  [8:0] attention_coefficients_sum_V_address0;
output   attention_coefficients_sum_V_ce0;
input  [27:0] attention_coefficients_sum_V_q0;
output  [8:0] attention_coefficients_sum_V_address1;
output   attention_coefficients_sum_V_ce1;
output   attention_coefficients_sum_V_we1;
output  [27:0] attention_coefficients_sum_V_d1;
output  [27:0] grp_exp_28_10_s_fu_2688_p_din1;
input  [27:0] grp_exp_28_10_s_fu_2688_p_dout0;
output   grp_exp_28_10_s_fu_2688_p_start;
input   grp_exp_28_10_s_fu_2688_p_ready;
input   grp_exp_28_10_s_fu_2688_p_done;
input   grp_exp_28_10_s_fu_2688_p_idle;

reg ap_idle;
reg all_scores_V_ce0;
reg all_scores_V_ce1;
reg all_scores_V_we1;
reg connectivity_mask_ce0;
reg attention_coefficients_sum_V_ce0;
reg attention_coefficients_sum_V_ce1;
reg attention_coefficients_sum_V_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_state27_pp0_stage2_iter8;
wire    ap_block_state30_pp0_stage2_iter9;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln78_reg_490;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln78_fu_218_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln79_fu_232_p2;
reg   [0:0] icmp_ln79_reg_494;
reg   [31:0] n2_1_load_reg_503;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] select_ln78_3_fu_313_p3;
reg   [0:0] select_ln78_3_reg_513;
wire   [15:0] select_ln79_1_fu_329_p3;
reg   [15:0] select_ln79_1_reg_518;
wire  signed [13:0] trunc_ln81_fu_337_p1;
reg  signed [13:0] trunc_ln81_reg_523;
wire   [13:0] trunc_ln84_1_fu_370_p1;
reg   [13:0] trunc_ln84_1_reg_528;
wire   [15:0] trunc_ln84_2_fu_374_p1;
reg   [15:0] trunc_ln84_2_reg_533;
reg   [15:0] trunc_ln84_2_reg_533_pp0_iter2_reg;
wire   [15:0] grp_fu_413_p3;
reg   [15:0] add_ln84_reg_538;
reg   [8:0] attention_coefficients_sum_V_addr_reg_549;
reg   [8:0] attention_coefficients_sum_V_addr_reg_549_pp0_iter3_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_549_pp0_iter4_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_549_pp0_iter5_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_549_pp0_iter6_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_549_pp0_iter7_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_549_pp0_iter8_reg;
reg   [8:0] attention_coefficients_sum_V_addr_reg_549_pp0_iter9_reg;
wire   [0:0] icmp_ln81_fu_397_p2;
reg   [0:0] icmp_ln81_reg_555;
reg   [0:0] icmp_ln81_reg_555_pp0_iter3_reg;
reg   [0:0] icmp_ln81_reg_555_pp0_iter4_reg;
reg   [0:0] icmp_ln81_reg_555_pp0_iter5_reg;
reg   [0:0] icmp_ln81_reg_555_pp0_iter6_reg;
reg   [0:0] icmp_ln81_reg_555_pp0_iter7_reg;
reg   [0:0] icmp_ln81_reg_555_pp0_iter8_reg;
reg   [0:0] icmp_ln81_reg_555_pp0_iter9_reg;
reg   [27:0] attention_coefficients_sum_V_load_reg_564;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_exp_28_10_s_fu_174_ap_ready;
reg    grp_exp_28_10_s_fu_174_ap_start_reg;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln81_fu_389_p1;
wire   [63:0] zext_ln84_fu_393_p1;
wire   [63:0] zext_ln84_1_fu_403_p1;
reg   [31:0] n2_1_fu_82;
wire   [31:0] add_ln80_fu_378_p2;
wire    ap_loop_init;
reg   [31:0] n1_1_fu_86;
wire   [31:0] select_ln79_2_fu_341_p3;
reg   [63:0] indvar_flatten55_fu_90;
wire   [63:0] select_ln79_3_fu_246_p3;
reg   [30:0] nh_fu_94;
wire   [30:0] select_ln78_1_fu_286_p3;
reg   [94:0] indvar_flatten69_fu_98;
wire   [94:0] add_ln78_1_fu_223_p2;
wire   [63:0] add_ln79_1_fu_240_p2;
wire   [30:0] add_ln78_fu_273_p2;
wire   [15:0] trunc_ln78_fu_297_p1;
wire   [0:0] icmp_ln80_fu_308_p2;
wire   [31:0] select_ln78_fu_279_p3;
wire   [31:0] add_ln79_fu_319_p2;
wire   [15:0] trunc_ln79_fu_325_p1;
wire   [15:0] select_ln78_2_fu_301_p3;
wire   [0:0] or_ln79_fu_359_p2;
wire   [31:0] select_ln79_fu_363_p3;
wire  signed [13:0] zext_ln81_fu_389_p0;
wire   [13:0] grp_fu_420_p3;
wire  signed [15:0] zext_ln84_1_fu_403_p0;
wire   [15:0] grp_fu_427_p3;
wire  signed [15:0] grp_fu_413_p0;
wire   [6:0] grp_fu_413_p1;
wire   [6:0] grp_fu_420_p1;
wire   [6:0] grp_fu_427_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to9;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_exp_28_10_s_fu_174_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_mac_muladd_16s_7ns_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_7ns_16ns_16_4_1_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_413_p0),
    .din1(grp_fu_413_p1),
    .din2(select_ln79_1_reg_518),
    .ce(1'b1),
    .dout(grp_fu_413_p3)
);

GAT_compute_one_graph_mac_muladd_14s_7ns_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_14s_7ns_14ns_14_4_1_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln81_reg_523),
    .din1(grp_fu_420_p1),
    .din2(trunc_ln84_1_reg_528),
    .ce(1'b1),
    .dout(grp_fu_420_p3)
);

GAT_compute_one_graph_mac_muladd_16ns_7ns_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16ns_7ns_16ns_16_4_1_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln84_reg_538),
    .din1(grp_fu_427_p1),
    .din2(trunc_ln84_2_reg_533_pp0_iter2_reg),
    .ce(1'b1),
    .dout(grp_fu_427_p3)
);

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_exp_28_10_s_fu_174_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln81_reg_555 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_exp_28_10_s_fu_174_ap_start_reg <= 1'b1;
        end else if ((grp_exp_28_10_s_fu_174_ap_ready == 1'b1)) begin
            grp_exp_28_10_s_fu_174_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten55_fu_90 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln78_fu_218_p2 == 1'd0))) begin
        indvar_flatten55_fu_90 <= select_ln79_3_fu_246_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten69_fu_98 <= 95'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln78_fu_218_p2 == 1'd0))) begin
        indvar_flatten69_fu_98 <= add_ln78_1_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n1_1_fu_86 <= 32'd0;
    end else if (((icmp_ln78_reg_490 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        n1_1_fu_86 <= select_ln79_2_fu_341_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            n2_1_fu_82 <= 32'd0;
        end else if (((icmp_ln78_reg_490 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            n2_1_fu_82 <= add_ln80_fu_378_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nh_fu_94 <= 31'd0;
    end else if (((icmp_ln78_reg_490 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        nh_fu_94 <= select_ln78_1_fu_286_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln84_reg_538 <= grp_fu_413_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        attention_coefficients_sum_V_addr_reg_549 <= zext_ln84_fu_393_p1;
        attention_coefficients_sum_V_addr_reg_549_pp0_iter3_reg <= attention_coefficients_sum_V_addr_reg_549;
        attention_coefficients_sum_V_addr_reg_549_pp0_iter4_reg <= attention_coefficients_sum_V_addr_reg_549_pp0_iter3_reg;
        attention_coefficients_sum_V_addr_reg_549_pp0_iter5_reg <= attention_coefficients_sum_V_addr_reg_549_pp0_iter4_reg;
        attention_coefficients_sum_V_addr_reg_549_pp0_iter6_reg <= attention_coefficients_sum_V_addr_reg_549_pp0_iter5_reg;
        attention_coefficients_sum_V_addr_reg_549_pp0_iter7_reg <= attention_coefficients_sum_V_addr_reg_549_pp0_iter6_reg;
        attention_coefficients_sum_V_addr_reg_549_pp0_iter8_reg <= attention_coefficients_sum_V_addr_reg_549_pp0_iter7_reg;
        attention_coefficients_sum_V_addr_reg_549_pp0_iter9_reg <= attention_coefficients_sum_V_addr_reg_549_pp0_iter8_reg;
        icmp_ln78_reg_490 <= icmp_ln78_fu_218_p2;
        icmp_ln81_reg_555 <= icmp_ln81_fu_397_p2;
        icmp_ln81_reg_555_pp0_iter3_reg <= icmp_ln81_reg_555;
        icmp_ln81_reg_555_pp0_iter4_reg <= icmp_ln81_reg_555_pp0_iter3_reg;
        icmp_ln81_reg_555_pp0_iter5_reg <= icmp_ln81_reg_555_pp0_iter4_reg;
        icmp_ln81_reg_555_pp0_iter6_reg <= icmp_ln81_reg_555_pp0_iter5_reg;
        icmp_ln81_reg_555_pp0_iter7_reg <= icmp_ln81_reg_555_pp0_iter6_reg;
        icmp_ln81_reg_555_pp0_iter8_reg <= icmp_ln81_reg_555_pp0_iter7_reg;
        icmp_ln81_reg_555_pp0_iter9_reg <= icmp_ln81_reg_555_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln81_reg_555_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        attention_coefficients_sum_V_load_reg_564 <= attention_coefficients_sum_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln78_fu_218_p2 == 1'd0))) begin
        icmp_ln79_reg_494 <= icmp_ln79_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_490 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        n2_1_load_reg_503 <= n2_1_fu_82;
        select_ln78_3_reg_513 <= select_ln78_3_fu_313_p3;
        select_ln79_1_reg_518 <= select_ln79_1_fu_329_p3;
        trunc_ln81_reg_523 <= trunc_ln81_fu_337_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_490 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln84_1_reg_528 <= trunc_ln84_1_fu_370_p1;
        trunc_ln84_2_reg_533 <= trunc_ln84_2_fu_374_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln84_2_reg_533_pp0_iter2_reg <= trunc_ln84_2_reg_533;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        all_scores_V_ce0 = 1'b1;
    end else begin
        all_scores_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        all_scores_V_ce1 = 1'b1;
    end else begin
        all_scores_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln81_reg_555 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        all_scores_V_we1 = 1'b1;
    end else begin
        all_scores_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_490 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to9 = 1'b1;
    end else begin
        ap_idle_pp0_1to9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        attention_coefficients_sum_V_ce0 = 1'b1;
    end else begin
        attention_coefficients_sum_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        attention_coefficients_sum_V_ce1 = 1'b1;
    end else begin
        attention_coefficients_sum_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln81_reg_555_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        attention_coefficients_sum_V_we1 = 1'b1;
    end else begin
        attention_coefficients_sum_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        connectivity_mask_ce0 = 1'b1;
    end else begin
        connectivity_mask_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to9 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_1_fu_223_p2 = (indvar_flatten69_fu_98 + 95'd1);

assign add_ln78_fu_273_p2 = (nh_fu_94 + 31'd1);

assign add_ln79_1_fu_240_p2 = (indvar_flatten55_fu_90 + 64'd1);

assign add_ln79_fu_319_p2 = (select_ln78_fu_279_p3 + 32'd1);

assign add_ln80_fu_378_p2 = (select_ln79_fu_363_p3 + 32'd1);

assign all_scores_V_address0 = zext_ln84_1_fu_403_p1;

assign all_scores_V_address1 = zext_ln84_1_fu_403_p1;

assign all_scores_V_d1 = 28'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign attention_coefficients_sum_V_address0 = attention_coefficients_sum_V_addr_reg_549_pp0_iter8_reg;

assign attention_coefficients_sum_V_address1 = attention_coefficients_sum_V_addr_reg_549_pp0_iter9_reg;

assign attention_coefficients_sum_V_d1 = (attention_coefficients_sum_V_load_reg_564 + grp_exp_28_10_s_fu_2688_p_dout0);

assign connectivity_mask_address0 = zext_ln81_fu_389_p1;

assign grp_exp_28_10_s_fu_174_ap_ready = grp_exp_28_10_s_fu_2688_p_ready;

assign grp_exp_28_10_s_fu_2688_p_din1 = all_scores_V_q0;

assign grp_exp_28_10_s_fu_2688_p_start = grp_exp_28_10_s_fu_174_ap_start_reg;

assign grp_fu_413_p0 = select_ln78_1_fu_286_p3[15:0];

assign grp_fu_413_p1 = 16'd100;

assign grp_fu_420_p1 = 14'd100;

assign grp_fu_427_p1 = 16'd100;

assign icmp_ln78_fu_218_p2 = ((indvar_flatten69_fu_98 == mul_ln65_1) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_232_p2 = ((indvar_flatten55_fu_90 == mul_ln65) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_308_p2 = ((n2_1_fu_82 == num_of_nodes) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_397_p2 = ((connectivity_mask_q0 == 32'd2147483648) ? 1'b1 : 1'b0);

assign or_ln79_fu_359_p2 = (select_ln78_3_reg_513 | icmp_ln79_reg_494);

assign select_ln78_1_fu_286_p3 = ((icmp_ln79_reg_494[0:0] == 1'b1) ? add_ln78_fu_273_p2 : nh_fu_94);

assign select_ln78_2_fu_301_p3 = ((icmp_ln79_reg_494[0:0] == 1'b1) ? 16'd0 : trunc_ln78_fu_297_p1);

assign select_ln78_3_fu_313_p3 = ((icmp_ln79_reg_494[0:0] == 1'b1) ? icmp_ln67_1 : icmp_ln80_fu_308_p2);

assign select_ln78_fu_279_p3 = ((icmp_ln79_reg_494[0:0] == 1'b1) ? 32'd0 : n1_1_fu_86);

assign select_ln79_1_fu_329_p3 = ((select_ln78_3_fu_313_p3[0:0] == 1'b1) ? trunc_ln79_fu_325_p1 : select_ln78_2_fu_301_p3);

assign select_ln79_2_fu_341_p3 = ((select_ln78_3_fu_313_p3[0:0] == 1'b1) ? add_ln79_fu_319_p2 : select_ln78_fu_279_p3);

assign select_ln79_3_fu_246_p3 = ((icmp_ln79_fu_232_p2[0:0] == 1'b1) ? 64'd1 : add_ln79_1_fu_240_p2);

assign select_ln79_fu_363_p3 = ((or_ln79_fu_359_p2[0:0] == 1'b1) ? 32'd0 : n2_1_load_reg_503);

assign trunc_ln78_fu_297_p1 = n1_1_fu_86[15:0];

assign trunc_ln79_fu_325_p1 = add_ln79_fu_319_p2[15:0];

assign trunc_ln81_fu_337_p1 = select_ln79_1_fu_329_p3[13:0];

assign trunc_ln84_1_fu_370_p1 = select_ln79_fu_363_p3[13:0];

assign trunc_ln84_2_fu_374_p1 = select_ln79_fu_363_p3[15:0];

assign zext_ln81_fu_389_p0 = grp_fu_420_p3;

assign zext_ln81_fu_389_p1 = $unsigned(zext_ln81_fu_389_p0);

assign zext_ln84_1_fu_403_p0 = grp_fu_427_p3;

assign zext_ln84_1_fu_403_p1 = $unsigned(zext_ln84_1_fu_403_p0);

assign zext_ln84_fu_393_p1 = add_ln84_reg_538;

endmodule //GAT_compute_one_graph_CONV_Pipeline_VITIS_LOOP_78_13_VITIS_LOOP_79_14_VITIS_LOOP_80_15
