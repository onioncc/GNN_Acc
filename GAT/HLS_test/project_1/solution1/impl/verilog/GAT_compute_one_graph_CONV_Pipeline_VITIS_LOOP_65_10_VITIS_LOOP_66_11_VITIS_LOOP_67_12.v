// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_CONV_Pipeline_VITIS_LOOP_65_10_VITIS_LOOP_66_11_VITIS_LOOP_67_12 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_of_nodes,
        mul_ln65_1,
        mul_ln65,
        icmp_ln67_1,
        scores_source_V_address0,
        scores_source_V_ce0,
        scores_source_V_q0,
        scores_target_V_address0,
        scores_target_V_ce0,
        scores_target_V_q0,
        all_scores_V_address1,
        all_scores_V_ce1,
        all_scores_V_we1,
        all_scores_V_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] num_of_nodes;
input  [94:0] mul_ln65_1;
input  [63:0] mul_ln65;
input  [0:0] icmp_ln67_1;
output  [8:0] scores_source_V_address0;
output   scores_source_V_ce0;
input  [27:0] scores_source_V_q0;
output  [8:0] scores_target_V_address0;
output   scores_target_V_ce0;
input  [27:0] scores_target_V_q0;
output  [15:0] all_scores_V_address1;
output   all_scores_V_ce1;
output   all_scores_V_we1;
output  [27:0] all_scores_V_d1;

reg ap_idle;
reg scores_source_V_ce0;
reg scores_target_V_ce0;
reg all_scores_V_ce1;
reg all_scores_V_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln65_fu_224_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] n2_2_reg_612;
wire  signed [8:0] empty_fu_211_p1;
reg  signed [8:0] empty_reg_617;
reg   [0:0] icmp_ln65_reg_622;
reg   [0:0] icmp_ln65_reg_622_pp0_iter2_reg;
reg   [0:0] icmp_ln65_reg_622_pp0_iter3_reg;
reg   [0:0] icmp_ln65_reg_622_pp0_iter4_reg;
wire   [0:0] icmp_ln66_fu_244_p2;
reg   [0:0] icmp_ln66_reg_626;
reg   [0:0] icmp_ln66_reg_626_pp0_iter2_reg;
reg   [0:0] icmp_ln66_reg_626_pp0_iter3_reg;
reg   [0:0] icmp_ln66_reg_626_pp0_iter4_reg;
wire  signed [8:0] empty_253_fu_249_p1;
reg  signed [8:0] empty_253_reg_634;
reg  signed [8:0] empty_253_reg_634_pp0_iter2_reg;
reg  signed [8:0] empty_253_reg_634_pp0_iter3_reg;
wire   [0:0] select_ln65_4_fu_273_p3;
reg   [0:0] select_ln65_4_reg_644;
reg   [0:0] select_ln65_4_reg_644_pp0_iter2_reg;
reg   [0:0] select_ln65_4_reg_644_pp0_iter3_reg;
reg   [0:0] select_ln65_4_reg_644_pp0_iter4_reg;
wire   [15:0] select_ln66_fu_321_p3;
reg   [15:0] select_ln66_reg_652;
reg   [15:0] select_ln66_reg_652_pp0_iter3_reg;
reg   [15:0] select_ln66_reg_652_pp0_iter4_reg;
reg   [15:0] select_ln66_reg_652_pp0_iter5_reg;
reg   [15:0] select_ln66_reg_652_pp0_iter6_reg;
wire   [8:0] trunc_ln71_1_fu_328_p1;
reg   [8:0] trunc_ln71_1_reg_657;
reg   [8:0] trunc_ln71_1_reg_657_pp0_iter3_reg;
wire   [8:0] empty_254_fu_361_p2;
reg   [8:0] empty_254_reg_667;
wire   [15:0] trunc_ln71_fu_366_p1;
reg   [15:0] trunc_ln71_reg_672;
wire   [8:0] empty_257_fu_393_p2;
reg   [8:0] empty_257_reg_677;
wire   [15:0] select_ln66_1_fu_399_p3;
reg   [15:0] select_ln66_1_reg_682;
wire   [8:0] add_ln712_fu_413_p2;
reg   [8:0] add_ln712_reg_687;
wire   [27:0] temp_V_fu_451_p2;
reg   [27:0] temp_V_reg_702;
wire   [26:0] add_ln68_fu_457_p2;
reg   [26:0] add_ln68_reg_708;
reg   [26:0] add_ln68_reg_708_pp0_iter7_reg;
reg   [26:0] add_ln68_reg_708_pp0_iter8_reg;
reg   [26:0] add_ln68_reg_708_pp0_iter9_reg;
reg   [0:0] tmp_reg_713;
wire   [0:0] icmp_ln1548_fu_471_p2;
reg   [0:0] icmp_ln1548_reg_718;
reg   [0:0] icmp_ln1548_reg_718_pp0_iter8_reg;
reg   [0:0] icmp_ln1548_reg_718_pp0_iter9_reg;
wire   [15:0] grp_fu_543_p4;
reg  signed [15:0] add_ln71_1_reg_728;
reg  signed [15:0] add_ln71_1_reg_728_pp0_iter9_reg;
reg  signed [15:0] add_ln71_1_reg_728_pp0_iter10_reg;
reg   [27:0] trunc_ln717_3_reg_733;
reg    ap_condition_exit_pp0_iter5_stage0;
wire   [63:0] select_ln66_2_cast_fu_434_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln712_fu_439_p1;
wire   [63:0] zext_ln71_1_fu_523_p1;
reg   [15:0] n2_fu_90;
wire   [15:0] add_ln67_fu_332_p2;
reg   [15:0] ap_sig_allocacmp_n2_2;
wire    ap_loop_init;
reg   [31:0] n1_fu_94;
wire   [31:0] select_ln66_3_fu_406_p3;
reg   [63:0] indvar_flatten23_fu_98;
wire   [63:0] select_ln66_4_fu_294_p3;
reg   [30:0] nh_fu_102;
wire   [30:0] select_ln65_5_fu_280_p3;
reg   [94:0] indvar_flatten45_fu_106;
wire   [94:0] add_ln65_1_fu_229_p2;
wire   [31:0] n2_cast_fu_215_p1;
wire   [30:0] add_ln65_fu_238_p2;
wire   [15:0] trunc_ln65_fu_253_p1;
wire   [15:0] trunc_ln65_1_fu_257_p1;
wire   [15:0] select_ln65_1_fu_261_p3;
wire   [0:0] icmp_ln67_fu_219_p2;
wire   [63:0] add_ln66_1_fu_288_p2;
wire   [0:0] or_ln66_fu_317_p2;
wire   [7:0] empty_254_fu_361_p1;
wire   [22:0] trunc_ln71_fu_366_p0;
wire  signed [22:0] grp_fu_527_p2;
wire   [22:0] trunc_ln65_2_fu_369_p0;
wire   [15:0] empty_250_fu_346_p1;
wire   [31:0] select_ln65_fu_354_p3;
wire   [31:0] add_ln66_fu_379_p2;
wire   [8:0] trunc_ln65_2_fu_369_p1;
wire   [8:0] empty_256_fu_389_p1;
wire   [15:0] empty_255_fu_385_p1;
wire   [15:0] select_ln65_2_fu_372_p3;
wire  signed [8:0] select_ln65_3_fu_423_p2;
wire   [8:0] grp_fu_535_p3;
wire   [8:0] select_ln65_3_fu_423_p3;
wire   [8:0] select_ln66_2_fu_428_p3;
wire   [26:0] trunc_ln712_fu_447_p1;
wire   [26:0] trunc_ln66_fu_443_p1;
wire  signed [27:0] min_V_fu_476_p3;
wire   [26:0] select_ln69_fu_486_p3;
wire   [44:0] lhs_fu_492_p3;
wire  signed [44:0] grp_fu_550_p2;
wire   [45:0] zext_ln1245_fu_500_p1;
wire  signed [45:0] sext_ln712_fu_504_p1;
wire   [45:0] ret_V_fu_507_p2;
wire   [15:0] grp_fu_527_p0;
wire   [6:0] grp_fu_527_p1;
wire   [6:0] grp_fu_535_p1;
wire   [8:0] grp_fu_535_p2;
wire   [6:0] grp_fu_543_p2;
wire   [15:0] grp_fu_550_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [22:0] grp_fu_527_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_mul_9s_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_9s_8ns_9_1_1_U118(
    .din0(empty_253_reg_634_pp0_iter3_reg),
    .din1(empty_254_fu_361_p1),
    .dout(empty_254_fu_361_p2)
);

GAT_compute_one_graph_mul_mul_16ns_7ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 23 ))
mul_mul_16ns_7ns_23_4_1_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_527_p0),
    .din1(grp_fu_527_p1),
    .ce(1'b1),
    .dout(grp_fu_527_p2)
);

GAT_compute_one_graph_mac_muladd_9s_7ns_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_7ns_9ns_9_4_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_reg_617),
    .din1(grp_fu_535_p1),
    .din2(grp_fu_535_p2),
    .ce(1'b1),
    .dout(grp_fu_535_p3)
);

GAT_compute_one_graph_ama_addmuladd_16ns_16ns_7ns_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
ama_addmuladd_16ns_16ns_7ns_16ns_16_4_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln71_reg_672),
    .din1(select_ln66_1_reg_682),
    .din2(grp_fu_543_p2),
    .din3(select_ln66_reg_652_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_543_p4)
);

GAT_compute_one_graph_mul_mul_28s_16ns_45_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 45 ))
mul_mul_28s_16ns_45_4_1_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(min_V_fu_476_p3),
    .din1(grp_fu_550_p1),
    .ce(1'b1),
    .dout(grp_fu_550_p2)
);

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter5_stage0)) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten23_fu_98 <= 64'd0;
        end else if (((icmp_ln65_fu_224_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten23_fu_98 <= select_ln66_4_fu_294_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten45_fu_106 <= 95'd0;
        end else if (((icmp_ln65_fu_224_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten45_fu_106 <= add_ln65_1_fu_229_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            n1_fu_94 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln65_reg_622_pp0_iter3_reg == 1'd0))) begin
            n1_fu_94 <= select_ln66_3_fu_406_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            n2_fu_90 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln65_reg_622 == 1'd0))) begin
            n2_fu_90 <= add_ln67_fu_332_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            nh_fu_102 <= 31'd0;
        end else if (((icmp_ln65_fu_224_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            nh_fu_102 <= select_ln65_5_fu_280_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln68_reg_708 <= add_ln68_fu_457_p2;
        add_ln68_reg_708_pp0_iter7_reg <= add_ln68_reg_708;
        add_ln68_reg_708_pp0_iter8_reg <= add_ln68_reg_708_pp0_iter7_reg;
        add_ln68_reg_708_pp0_iter9_reg <= add_ln68_reg_708_pp0_iter8_reg;
        add_ln71_1_reg_728_pp0_iter10_reg <= add_ln71_1_reg_728_pp0_iter9_reg;
        add_ln71_1_reg_728_pp0_iter9_reg <= add_ln71_1_reg_728;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_253_reg_634_pp0_iter2_reg <= empty_253_reg_634;
        empty_253_reg_634_pp0_iter3_reg <= empty_253_reg_634_pp0_iter2_reg;
        icmp_ln1548_reg_718 <= icmp_ln1548_fu_471_p2;
        icmp_ln1548_reg_718_pp0_iter8_reg <= icmp_ln1548_reg_718;
        icmp_ln1548_reg_718_pp0_iter9_reg <= icmp_ln1548_reg_718_pp0_iter8_reg;
        icmp_ln65_reg_622_pp0_iter2_reg <= icmp_ln65_reg_622;
        icmp_ln65_reg_622_pp0_iter3_reg <= icmp_ln65_reg_622_pp0_iter2_reg;
        icmp_ln65_reg_622_pp0_iter4_reg <= icmp_ln65_reg_622_pp0_iter3_reg;
        icmp_ln66_reg_626_pp0_iter2_reg <= icmp_ln66_reg_626;
        icmp_ln66_reg_626_pp0_iter3_reg <= icmp_ln66_reg_626_pp0_iter2_reg;
        icmp_ln66_reg_626_pp0_iter4_reg <= icmp_ln66_reg_626_pp0_iter3_reg;
        select_ln65_4_reg_644_pp0_iter2_reg <= select_ln65_4_reg_644;
        select_ln65_4_reg_644_pp0_iter3_reg <= select_ln65_4_reg_644_pp0_iter2_reg;
        select_ln65_4_reg_644_pp0_iter4_reg <= select_ln65_4_reg_644_pp0_iter3_reg;
        select_ln66_reg_652_pp0_iter3_reg <= select_ln66_reg_652;
        select_ln66_reg_652_pp0_iter4_reg <= select_ln66_reg_652_pp0_iter3_reg;
        select_ln66_reg_652_pp0_iter5_reg <= select_ln66_reg_652_pp0_iter4_reg;
        select_ln66_reg_652_pp0_iter6_reg <= select_ln66_reg_652_pp0_iter5_reg;
        temp_V_reg_702 <= temp_V_fu_451_p2;
        tmp_reg_713 <= temp_V_fu_451_p2[32'd27];
        trunc_ln717_3_reg_733 <= {{ret_V_fu_507_p2[45:18]}};
        trunc_ln71_1_reg_657_pp0_iter3_reg <= trunc_ln71_1_reg_657;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln65_reg_622_pp0_iter3_reg == 1'd0))) begin
        add_ln712_reg_687 <= add_ln712_fu_413_p2;
        select_ln66_1_reg_682 <= select_ln66_1_fu_399_p3;
        trunc_ln71_reg_672 <= trunc_ln71_fu_366_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        add_ln71_1_reg_728 <= grp_fu_543_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        empty_reg_617 <= empty_fu_211_p1;
        icmp_ln65_reg_622 <= icmp_ln65_fu_224_p2;
        n2_2_reg_612 <= ap_sig_allocacmp_n2_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_224_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_253_reg_634 <= empty_253_fu_249_p1;
        icmp_ln66_reg_626 <= icmp_ln66_fu_244_p2;
        select_ln65_4_reg_644 <= select_ln65_4_fu_273_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln65_4_reg_644_pp0_iter3_reg == 1'd0) & (icmp_ln66_reg_626_pp0_iter3_reg == 1'd1) & (icmp_ln65_reg_622_pp0_iter3_reg == 1'd0))) begin
        empty_254_reg_667 <= empty_254_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln65_4_reg_644_pp0_iter3_reg == 1'd1) & (icmp_ln65_reg_622_pp0_iter3_reg == 1'd0))) begin
        empty_257_reg_677 <= empty_257_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln65_reg_622 == 1'd0))) begin
        select_ln66_reg_652 <= select_ln66_fu_321_p3;
        trunc_ln71_1_reg_657 <= trunc_ln71_1_fu_328_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        all_scores_V_ce1 = 1'b1;
    end else begin
        all_scores_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        all_scores_V_we1 = 1'b1;
    end else begin
        all_scores_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_fu_224_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln65_reg_622_pp0_iter4_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln65_reg_622 == 1'd0))) begin
        ap_sig_allocacmp_n2_2 = add_ln67_fu_332_p2;
    end else begin
        ap_sig_allocacmp_n2_2 = n2_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        scores_source_V_ce0 = 1'b1;
    end else begin
        scores_source_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        scores_target_V_ce0 = 1'b1;
    end else begin
        scores_target_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln65_1_fu_229_p2 = (indvar_flatten45_fu_106 + 95'd1);

assign add_ln65_fu_238_p2 = (nh_fu_102 + 31'd1);

assign add_ln66_1_fu_288_p2 = (indvar_flatten23_fu_98 + 64'd1);

assign add_ln66_fu_379_p2 = (select_ln65_fu_354_p3 + 32'd1);

assign add_ln67_fu_332_p2 = (select_ln66_fu_321_p3 + 16'd1);

assign add_ln68_fu_457_p2 = (trunc_ln712_fu_447_p1 + trunc_ln66_fu_443_p1);

assign add_ln712_fu_413_p2 = (trunc_ln65_2_fu_369_p1 + trunc_ln71_1_reg_657_pp0_iter3_reg);

assign all_scores_V_address1 = zext_ln71_1_fu_523_p1;

assign all_scores_V_d1 = trunc_ln717_3_reg_733;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_250_fu_346_p1 = n1_fu_94[15:0];

assign empty_253_fu_249_p1 = add_ln65_fu_238_p2[8:0];

assign empty_254_fu_361_p1 = 9'd100;

assign empty_255_fu_385_p1 = add_ln66_fu_379_p2[15:0];

assign empty_256_fu_389_p1 = add_ln66_fu_379_p2[8:0];

assign empty_257_fu_393_p2 = (trunc_ln65_2_fu_369_p1 + empty_256_fu_389_p1);

assign empty_fu_211_p1 = nh_fu_102[8:0];

assign grp_fu_527_p0 = grp_fu_527_p00;

assign grp_fu_527_p00 = select_ln65_1_fu_261_p3;

assign grp_fu_527_p1 = 23'd100;

assign grp_fu_535_p1 = 9'd100;

assign grp_fu_535_p2 = n1_fu_94[8:0];

assign grp_fu_543_p2 = 16'd100;

assign grp_fu_550_p1 = 45'd52428;

assign icmp_ln1548_fu_471_p2 = (($signed(temp_V_reg_702) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_224_p2 = ((indvar_flatten45_fu_106 == mul_ln65_1) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_244_p2 = ((indvar_flatten23_fu_98 == mul_ln65) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_219_p2 = ((n2_cast_fu_215_p1 == num_of_nodes) ? 1'b1 : 1'b0);

assign lhs_fu_492_p3 = {{select_ln69_fu_486_p3}, {18'd0}};

assign min_V_fu_476_p3 = ((tmp_reg_713[0:0] == 1'b1) ? temp_V_reg_702 : 28'd0);

assign n2_cast_fu_215_p1 = ap_sig_allocacmp_n2_2;

assign or_ln66_fu_317_p2 = (select_ln65_4_reg_644 | icmp_ln66_reg_626);

assign ret_V_fu_507_p2 = ($signed(zext_ln1245_fu_500_p1) + $signed(sext_ln712_fu_504_p1));

assign scores_source_V_address0 = select_ln66_2_cast_fu_434_p1;

assign scores_target_V_address0 = zext_ln712_fu_439_p1;

assign select_ln65_1_fu_261_p3 = ((icmp_ln66_fu_244_p2[0:0] == 1'b1) ? trunc_ln65_fu_253_p1 : trunc_ln65_1_fu_257_p1);

assign select_ln65_2_fu_372_p3 = ((icmp_ln66_reg_626_pp0_iter3_reg[0:0] == 1'b1) ? 16'd0 : empty_250_fu_346_p1);

assign select_ln65_3_fu_423_p2 = grp_fu_535_p3;

assign select_ln65_3_fu_423_p3 = ((icmp_ln66_reg_626_pp0_iter4_reg[0:0] == 1'b1) ? empty_254_reg_667 : select_ln65_3_fu_423_p2);

assign select_ln65_4_fu_273_p3 = ((icmp_ln66_fu_244_p2[0:0] == 1'b1) ? icmp_ln67_1 : icmp_ln67_fu_219_p2);

assign select_ln65_5_fu_280_p3 = ((icmp_ln66_fu_244_p2[0:0] == 1'b1) ? add_ln65_fu_238_p2 : nh_fu_102);

assign select_ln65_fu_354_p3 = ((icmp_ln66_reg_626_pp0_iter3_reg[0:0] == 1'b1) ? 32'd0 : n1_fu_94);

assign select_ln66_1_fu_399_p3 = ((select_ln65_4_reg_644_pp0_iter3_reg[0:0] == 1'b1) ? empty_255_fu_385_p1 : select_ln65_2_fu_372_p3);

assign select_ln66_2_cast_fu_434_p1 = select_ln66_2_fu_428_p3;

assign select_ln66_2_fu_428_p3 = ((select_ln65_4_reg_644_pp0_iter4_reg[0:0] == 1'b1) ? empty_257_reg_677 : select_ln65_3_fu_423_p3);

assign select_ln66_3_fu_406_p3 = ((select_ln65_4_reg_644_pp0_iter3_reg[0:0] == 1'b1) ? add_ln66_fu_379_p2 : select_ln65_fu_354_p3);

assign select_ln66_4_fu_294_p3 = ((icmp_ln66_fu_244_p2[0:0] == 1'b1) ? 64'd1 : add_ln66_1_fu_288_p2);

assign select_ln66_fu_321_p3 = ((or_ln66_fu_317_p2[0:0] == 1'b1) ? 16'd0 : n2_2_reg_612);

assign select_ln69_fu_486_p3 = ((icmp_ln1548_reg_718_pp0_iter9_reg[0:0] == 1'b1) ? add_ln68_reg_708_pp0_iter9_reg : 27'd0);

assign sext_ln712_fu_504_p1 = grp_fu_550_p2;

assign temp_V_fu_451_p2 = (scores_target_V_q0 + scores_source_V_q0);

assign trunc_ln65_1_fu_257_p1 = nh_fu_102[15:0];

assign trunc_ln65_2_fu_369_p0 = grp_fu_527_p2;

assign trunc_ln65_2_fu_369_p1 = trunc_ln65_2_fu_369_p0[8:0];

assign trunc_ln65_fu_253_p1 = add_ln65_fu_238_p2[15:0];

assign trunc_ln66_fu_443_p1 = scores_source_V_q0[26:0];

assign trunc_ln712_fu_447_p1 = scores_target_V_q0[26:0];

assign trunc_ln71_1_fu_328_p1 = select_ln66_fu_321_p3[8:0];

assign trunc_ln71_fu_366_p0 = grp_fu_527_p2;

assign trunc_ln71_fu_366_p1 = trunc_ln71_fu_366_p0[15:0];

assign zext_ln1245_fu_500_p1 = lhs_fu_492_p3;

assign zext_ln712_fu_439_p1 = add_ln712_reg_687;

assign zext_ln71_1_fu_523_p1 = $unsigned(add_ln71_1_reg_728_pp0_iter10_reg);

endmodule //GAT_compute_one_graph_CONV_Pipeline_VITIS_LOOP_65_10_VITIS_LOOP_66_11_VITIS_LOOP_67_12
