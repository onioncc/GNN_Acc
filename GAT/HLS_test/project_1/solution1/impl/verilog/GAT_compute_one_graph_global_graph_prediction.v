// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_global_graph_prediction (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        task_r,
        h_graph_V_address0,
        h_graph_V_ce0,
        h_graph_V_q0,
        pred_linear_weight_V_address0,
        pred_linear_weight_V_ce0,
        pred_linear_weight_V_q0,
        num_features_per_layer_address0,
        num_features_per_layer_ce0,
        num_features_per_layer_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [63:0] m_axi_mem_AWADDR;
output  [0:0] m_axi_mem_AWID;
output  [31:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [0:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [31:0] m_axi_mem_WDATA;
output  [3:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [0:0] m_axi_mem_WID;
output  [0:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [63:0] m_axi_mem_ARADDR;
output  [0:0] m_axi_mem_ARID;
output  [31:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [0:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [31:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [0:0] m_axi_mem_RID;
input  [0:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [0:0] m_axi_mem_BID;
input  [0:0] m_axi_mem_BUSER;
input  [63:0] task_r;
output  [6:0] h_graph_V_address0;
output   h_graph_V_ce0;
input  [27:0] h_graph_V_q0;
output  [3:0] pred_linear_weight_V_address0;
output   pred_linear_weight_V_ce0;
input  [27:0] pred_linear_weight_V_q0;
output  [2:0] num_features_per_layer_address0;
output   num_features_per_layer_ce0;
input  [31:0] num_features_per_layer_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_mem_AWVALID;
reg[63:0] m_axi_mem_AWADDR;
reg m_axi_mem_WVALID;
reg[31:0] m_axi_mem_WDATA;
reg m_axi_mem_BREADY;
reg num_features_per_layer_ce0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    mem_blk_n_AW;
reg    mem_blk_n_W;
wire    ap_CS_fsm_state2;
reg    mem_blk_n_B;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state14;
reg   [0:0] cmp350_reg_166;
reg   [63:0] mem_addr_reg_153;
reg   [31:0] num_features_per_layer_load_reg_160;
wire    ap_CS_fsm_state6;
wire   [0:0] cmp350_fu_130_p2;
wire   [30:0] trunc_ln199_fu_135_p1;
reg   [30:0] trunc_ln199_reg_170;
wire    grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start;
wire    grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_done;
wire    grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_idle;
wire    grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_ready;
wire   [27:0] grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_lhs_out;
wire    grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_lhs_out_ap_vld;
wire   [6:0] grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_h_graph_V_address0;
wire    grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_h_graph_V_ce0;
wire   [3:0] grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_pred_linear_weight_V_address0;
wire    grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_pred_linear_weight_V_ce0;
reg    grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start_reg;
wire  signed [63:0] sext_ln198_fu_119_p1;
reg    ap_block_state14;
wire   [31:0] zext_ln736_fu_142_p1;
wire    ap_CS_fsm_state5;
wire   [61:0] trunc_ln_fu_109_p4;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start_reg = 1'b0;
end

GAT_compute_one_graph_global_graph_prediction_Pipeline_VITIS_LOOP_199_2 grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start),
    .ap_done(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_done),
    .ap_idle(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_idle),
    .ap_ready(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_ready),
    .trunc_ln14(trunc_ln199_reg_170),
    .lhs_out(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_lhs_out),
    .lhs_out_ap_vld(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_lhs_out_ap_vld),
    .h_graph_V_address0(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_h_graph_V_address0),
    .h_graph_V_ce0(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_h_graph_V_ce0),
    .h_graph_V_q0(h_graph_V_q0),
    .pred_linear_weight_V_address0(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_pred_linear_weight_V_address0),
    .pred_linear_weight_V_ce0(grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_pred_linear_weight_V_ce0),
    .pred_linear_weight_V_q0(pred_linear_weight_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start_reg <= 1'b0;
    end else begin
        if (((m_axi_mem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7) & (cmp350_fu_130_p2 == 1'd1))) begin
            grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start_reg <= 1'b1;
        end else if ((grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_ready == 1'b1)) begin
            grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        cmp350_reg_166 <= cmp350_fu_130_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        mem_addr_reg_153 <= sext_ln198_fu_119_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        num_features_per_layer_load_reg_160 <= num_features_per_layer_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (cmp350_fu_130_p2 == 1'd1))) begin
        trunc_ln199_reg_170 <= trunc_ln199_fu_135_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if (((m_axi_mem_BVALID == 1'b0) & (cmp350_reg_166 == 1'd1))) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_mem_AWREADY == 1'b0) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_mem_WREADY == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((m_axi_mem_BVALID == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_mem_AWREADY == 1'b0) | (grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_done == 1'b0))) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_mem_WREADY == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | (~((m_axi_mem_BVALID == 1'b0) & (cmp350_reg_166 == 1'd1)) & (1'b1 == ap_CS_fsm_state14)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_mem_BVALID == 1'b0) & (cmp350_reg_166 == 1'd1)) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_mem_AWREADY == 1'b0) | (grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        m_axi_mem_AWADDR = mem_addr_reg_153;
    end else if ((~((m_axi_mem_AWREADY == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_mem_AWADDR = sext_ln198_fu_119_p1;
    end else begin
        m_axi_mem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((~((m_axi_mem_AWREADY == 1'b0) | (grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((m_axi_mem_AWREADY == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        m_axi_mem_AWVALID = 1'b1;
    end else begin
        m_axi_mem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((m_axi_mem_BVALID == 1'b0) & (cmp350_reg_166 == 1'd1)) & (1'b1 == ap_CS_fsm_state14) & (cmp350_reg_166 == 1'd1)) | ((m_axi_mem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        m_axi_mem_BREADY = 1'b1;
    end else begin
        m_axi_mem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        m_axi_mem_WDATA = zext_ln736_fu_142_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        m_axi_mem_WDATA = 32'd0;
    end else begin
        m_axi_mem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_mem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((m_axi_mem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_mem_WVALID = 1'b1;
    end else begin
        m_axi_mem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mem_blk_n_AW = m_axi_mem_AWREADY;
    end else begin
        mem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state14) & (cmp350_reg_166 == 1'd1)))) begin
        mem_blk_n_B = m_axi_mem_BVALID;
    end else begin
        mem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2))) begin
        mem_blk_n_W = m_axi_mem_WREADY;
    end else begin
        mem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        num_features_per_layer_ce0 = 1'b1;
    end else begin
        num_features_per_layer_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((m_axi_mem_AWREADY == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((m_axi_mem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((m_axi_mem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7) & (cmp350_fu_130_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((m_axi_mem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7) & (cmp350_fu_130_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((m_axi_mem_AWREADY == 1'b0) | (grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((m_axi_mem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if ((~((m_axi_mem_BVALID == 1'b0) & (cmp350_reg_166 == 1'd1)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state14 = ((m_axi_mem_BVALID == 1'b0) & (cmp350_reg_166 == 1'd1));
end

assign cmp350_fu_130_p2 = (($signed(num_features_per_layer_load_reg_160) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start = grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_ap_start_reg;

assign h_graph_V_address0 = grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_h_graph_V_address0;

assign h_graph_V_ce0 = grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_h_graph_V_ce0;

assign m_axi_mem_ARADDR = 64'd0;

assign m_axi_mem_ARBURST = 2'd0;

assign m_axi_mem_ARCACHE = 4'd0;

assign m_axi_mem_ARID = 1'd0;

assign m_axi_mem_ARLEN = 32'd0;

assign m_axi_mem_ARLOCK = 2'd0;

assign m_axi_mem_ARPROT = 3'd0;

assign m_axi_mem_ARQOS = 4'd0;

assign m_axi_mem_ARREGION = 4'd0;

assign m_axi_mem_ARSIZE = 3'd0;

assign m_axi_mem_ARUSER = 1'd0;

assign m_axi_mem_ARVALID = 1'b0;

assign m_axi_mem_AWBURST = 2'd0;

assign m_axi_mem_AWCACHE = 4'd0;

assign m_axi_mem_AWID = 1'd0;

assign m_axi_mem_AWLEN = 32'd1;

assign m_axi_mem_AWLOCK = 2'd0;

assign m_axi_mem_AWPROT = 3'd0;

assign m_axi_mem_AWQOS = 4'd0;

assign m_axi_mem_AWREGION = 4'd0;

assign m_axi_mem_AWSIZE = 3'd0;

assign m_axi_mem_AWUSER = 1'd0;

assign m_axi_mem_RREADY = 1'b0;

assign m_axi_mem_WID = 1'd0;

assign m_axi_mem_WLAST = 1'b0;

assign m_axi_mem_WSTRB = 4'd15;

assign m_axi_mem_WUSER = 1'd0;

assign num_features_per_layer_address0 = 3'd2;

assign pred_linear_weight_V_address0 = grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_pred_linear_weight_V_address0;

assign pred_linear_weight_V_ce0 = grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_pred_linear_weight_V_ce0;

assign sext_ln198_fu_119_p1 = $signed(trunc_ln_fu_109_p4);

assign trunc_ln199_fu_135_p1 = num_features_per_layer_load_reg_160[30:0];

assign trunc_ln_fu_109_p4 = {{task_r[63:2]}};

assign zext_ln736_fu_142_p1 = grp_global_graph_prediction_Pipeline_VITIS_LOOP_199_2_fu_99_lhs_out;

endmodule //GAT_compute_one_graph_global_graph_prediction
