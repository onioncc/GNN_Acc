// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_load_weights_one_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        gat_net_scoring_fn_target_fixed,
        gat_net_scoring_fn_source_fixed,
        gat_net_linear_proj_weight_fixed,
        gat_net_skip_proj_weight_fixed,
        scoring_fn_target_V_address0,
        scoring_fn_target_V_ce0,
        scoring_fn_target_V_we0,
        scoring_fn_target_V_d0,
        scoring_fn_source_V_address0,
        scoring_fn_source_V_ce0,
        scoring_fn_source_V_we0,
        scoring_fn_source_V_d0,
        linear_proj_weight_V_address0,
        linear_proj_weight_V_ce0,
        linear_proj_weight_V_we0,
        linear_proj_weight_V_d0,
        skip_proj_weight_V_address0,
        skip_proj_weight_V_ce0,
        skip_proj_weight_V_we0,
        skip_proj_weight_V_d0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] layer;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [63:0] m_axi_mem_AWADDR;
output  [0:0] m_axi_mem_AWID;
output  [31:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [0:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [31:0] m_axi_mem_WDATA;
output  [3:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [0:0] m_axi_mem_WID;
output  [0:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [63:0] m_axi_mem_ARADDR;
output  [0:0] m_axi_mem_ARID;
output  [31:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [0:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [31:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [0:0] m_axi_mem_RID;
input  [0:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [0:0] m_axi_mem_BID;
input  [0:0] m_axi_mem_BUSER;
input  [63:0] gat_net_scoring_fn_target_fixed;
input  [63:0] gat_net_scoring_fn_source_fixed;
input  [63:0] gat_net_linear_proj_weight_fixed;
input  [63:0] gat_net_skip_proj_weight_fixed;
output  [8:0] scoring_fn_target_V_address0;
output   scoring_fn_target_V_ce0;
output   scoring_fn_target_V_we0;
output  [27:0] scoring_fn_target_V_d0;
output  [8:0] scoring_fn_source_V_address0;
output   scoring_fn_source_V_ce0;
output   scoring_fn_source_V_we0;
output  [27:0] scoring_fn_source_V_d0;
output  [14:0] linear_proj_weight_V_address0;
output   linear_proj_weight_V_ce0;
output   linear_proj_weight_V_we0;
output  [27:0] linear_proj_weight_V_d0;
output  [14:0] skip_proj_weight_V_address0;
output   skip_proj_weight_V_ce0;
output   skip_proj_weight_V_we0;
output  [27:0] skip_proj_weight_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_mem_ARVALID;
reg[63:0] m_axi_mem_ARADDR;
reg[0:0] m_axi_mem_ARID;
reg[31:0] m_axi_mem_ARLEN;
reg[2:0] m_axi_mem_ARSIZE;
reg[1:0] m_axi_mem_ARBURST;
reg[1:0] m_axi_mem_ARLOCK;
reg[3:0] m_axi_mem_ARCACHE;
reg[2:0] m_axi_mem_ARPROT;
reg[3:0] m_axi_mem_ARQOS;
reg[3:0] m_axi_mem_ARREGION;
reg[0:0] m_axi_mem_ARUSER;
reg m_axi_mem_RREADY;
reg scoring_fn_target_V_ce0;
reg scoring_fn_target_V_we0;
reg scoring_fn_source_V_ce0;
reg scoring_fn_source_V_we0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    mem_blk_n_AR;
wire    ap_CS_fsm_state4;
reg    mem_blk_n_R;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state12;
wire   [8:0] tmp_fu_208_p3;
reg   [8:0] tmp_reg_472;
wire   [4:0] tmp_1_fu_216_p3;
reg   [4:0] tmp_1_reg_477;
wire  signed [62:0] sext_ln229_fu_252_p1;
reg  signed [62:0] sext_ln229_reg_482;
wire  signed [62:0] sext_ln229_1_fu_272_p1;
reg  signed [62:0] sext_ln229_1_reg_487;
wire   [8:0] tmp_3_cast_fu_293_p3;
reg   [8:0] tmp_3_cast_reg_492;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln229_2_fu_307_p2;
reg   [2:0] add_ln229_2_reg_500;
wire   [5:0] tmp_5_fu_317_p3;
reg   [5:0] tmp_5_reg_505;
wire   [0:0] icmp_ln229_fu_301_p2;
reg   [61:0] trunc_ln1_reg_510;
reg   [61:0] trunc_ln236_1_reg_515;
reg   [8:0] scoring_fn_source_V_addr_reg_520;
wire    ap_CS_fsm_state3;
reg   [8:0] scoring_fn_target_V_addr_reg_525;
wire   [4:0] add_ln230_fu_393_p2;
reg   [4:0] add_ln230_reg_533;
reg   [63:0] mem_addr_reg_538;
wire   [0:0] icmp_ln230_fu_387_p2;
reg   [63:0] mem_addr_1_reg_544;
wire   [27:0] trunc_ln231_fu_442_p1;
reg   [27:0] trunc_ln231_reg_550;
wire   [27:0] trunc_ln232_fu_446_p1;
reg   [27:0] trunc_ln232_reg_555;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_idle;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_ready;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWVALID;
wire   [63:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWADDR;
wire   [0:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWID;
wire   [31:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWLEN;
wire   [2:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWSIZE;
wire   [1:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWBURST;
wire   [1:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWLOCK;
wire   [3:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWCACHE;
wire   [2:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWPROT;
wire   [3:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWQOS;
wire   [3:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWREGION;
wire   [0:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWUSER;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WVALID;
wire   [31:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WDATA;
wire   [3:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WSTRB;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WLAST;
wire   [0:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WID;
wire   [0:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WUSER;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARVALID;
wire   [63:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARADDR;
wire   [0:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARID;
wire   [31:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLEN;
wire   [2:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARSIZE;
wire   [1:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARBURST;
wire   [1:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLOCK;
wire   [3:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARCACHE;
wire   [2:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARPROT;
wire   [3:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARQOS;
wire   [3:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARREGION;
wire   [0:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARUSER;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_RREADY;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_BREADY;
wire   [14:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_address0;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_ce0;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_we0;
wire   [27:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_d0;
wire   [14:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_address0;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_ce0;
wire    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_we0;
wire   [27:0] grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_d0;
reg   [4:0] j_reg_184;
wire    ap_CS_fsm_state13;
reg    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln232_2_fu_377_p1;
wire  signed [63:0] sext_ln231_fu_413_p1;
wire  signed [63:0] sext_ln232_fu_428_p1;
reg   [2:0] i_fu_102;
wire   [10:0] shl_ln_fu_224_p3;
wire   [63:0] zext_ln229_fu_232_p1;
wire   [63:0] add_ln229_fu_236_p2;
wire   [61:0] trunc_ln_fu_242_p4;
wire   [63:0] add_ln229_1_fu_256_p2;
wire   [61:0] trunc_ln229_1_fu_262_p4;
wire   [4:0] zext_ln232_fu_284_p1;
wire   [4:0] add_ln232_1_fu_288_p2;
wire   [1:0] empty_78_fu_313_p1;
wire   [16:0] shl_ln1_fu_325_p3;
wire   [63:0] zext_ln236_fu_332_p1;
wire   [63:0] add_ln236_fu_336_p2;
wire   [63:0] add_ln236_1_fu_352_p2;
wire   [8:0] zext_ln232_1_fu_368_p1;
wire   [8:0] add_ln232_2_fu_372_p2;
wire   [5:0] zext_ln230_fu_383_p1;
wire   [5:0] add_ln231_fu_399_p2;
wire   [62:0] zext_ln231_fu_404_p1;
wire   [62:0] add_ln231_1_fu_408_p2;
wire   [62:0] add_ln232_fu_423_p2;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg = 1'b0;
end

GAT_compute_one_graph_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4 grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start),
    .ap_done(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done),
    .ap_idle(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_idle),
    .ap_ready(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_ready),
    .m_axi_mem_AWVALID(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(m_axi_mem_ARREADY),
    .m_axi_mem_ARADDR(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(m_axi_mem_RVALID),
    .m_axi_mem_RREADY(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(m_axi_mem_RDATA),
    .m_axi_mem_RLAST(m_axi_mem_RLAST),
    .m_axi_mem_RID(m_axi_mem_RID),
    .m_axi_mem_RUSER(m_axi_mem_RUSER),
    .m_axi_mem_RRESP(m_axi_mem_RRESP),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .zext_ln238_1(tmp_reg_472),
    .sext_ln236(trunc_ln1_reg_510),
    .sext_ln236_1(trunc_ln236_1_reg_515),
    .linear_proj_weight_V_address0(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_address0),
    .linear_proj_weight_V_ce0(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_ce0),
    .linear_proj_weight_V_we0(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_we0),
    .linear_proj_weight_V_d0(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_d0),
    .skip_proj_weight_V_address0(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_address0),
    .skip_proj_weight_V_ce0(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_ce0),
    .skip_proj_weight_V_we0(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_we0),
    .skip_proj_weight_V_d0(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1))) begin
            grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg <= 1'b1;
        end else if ((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_ready == 1'b1)) begin
            grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_102 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln230_fu_387_p2 == 1'd1))) begin
        i_fu_102 <= add_ln229_2_reg_500;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd0))) begin
        j_reg_184 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        j_reg_184 <= add_ln230_reg_533;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln229_2_reg_500 <= add_ln229_2_fu_307_p2;
        tmp_3_cast_reg_492[8 : 4] <= tmp_3_cast_fu_293_p3[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln230_reg_533 <= add_ln230_fu_393_p2;
        scoring_fn_source_V_addr_reg_520 <= zext_ln232_2_fu_377_p1;
        scoring_fn_target_V_addr_reg_525 <= zext_ln232_2_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln230_fu_387_p2 == 1'd0))) begin
        mem_addr_1_reg_544 <= sext_ln232_fu_428_p1;
        mem_addr_reg_538 <= sext_ln231_fu_413_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        sext_ln229_1_reg_487 <= sext_ln229_1_fu_272_p1;
        sext_ln229_reg_482 <= sext_ln229_fu_252_p1;
        tmp_1_reg_477[4 : 2] <= tmp_1_fu_216_p3[4 : 2];
        tmp_reg_472[8 : 6] <= tmp_fu_208_p3[8 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd0))) begin
        tmp_5_reg_505[5 : 4] <= tmp_5_fu_317_p3[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1))) begin
        trunc_ln1_reg_510 <= {{add_ln236_fu_336_p2[63:2]}};
        trunc_ln236_1_reg_515 <= {{add_ln236_1_fu_352_p2[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln231_reg_550 <= trunc_ln231_fu_442_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln232_reg_555 <= trunc_ln232_fu_446_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((m_axi_mem_RVALID == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_mem_RVALID == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((m_axi_mem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_mem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_mem_ARADDR = mem_addr_1_reg_544;
    end else if (((m_axi_mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_mem_ARADDR = mem_addr_reg_538;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARADDR = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARADDR;
    end else begin
        m_axi_mem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARBURST = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARBURST;
    end else begin
        m_axi_mem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARCACHE = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARCACHE;
    end else begin
        m_axi_mem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARID = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARID;
    end else begin
        m_axi_mem_ARID = 1'd0;
    end
end

always @ (*) begin
    if ((((m_axi_mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((m_axi_mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        m_axi_mem_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARLEN = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLEN;
    end else begin
        m_axi_mem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARLOCK = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLOCK;
    end else begin
        m_axi_mem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARPROT = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARPROT;
    end else begin
        m_axi_mem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARQOS = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARQOS;
    end else begin
        m_axi_mem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARREGION = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARREGION;
    end else begin
        m_axi_mem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARSIZE = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARSIZE;
    end else begin
        m_axi_mem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARUSER = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARUSER;
    end else begin
        m_axi_mem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((m_axi_mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((m_axi_mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        m_axi_mem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_ARVALID = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARVALID;
    end else begin
        m_axi_mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((m_axi_mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((m_axi_mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_mem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd1)))) begin
        m_axi_mem_RREADY = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_RREADY;
    end else begin
        m_axi_mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        mem_blk_n_R = m_axi_mem_RVALID;
    end else begin
        mem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_source_V_ce0 = 1'b1;
    end else begin
        scoring_fn_source_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        scoring_fn_source_V_we0 = 1'b1;
    end else begin
        scoring_fn_source_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        scoring_fn_target_V_ce0 = 1'b1;
    end else begin
        scoring_fn_target_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        scoring_fn_target_V_we0 = 1'b1;
    end else begin
        scoring_fn_target_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln229_fu_301_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln230_fu_387_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((m_axi_mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((m_axi_mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((m_axi_mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((m_axi_mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln229_1_fu_256_p2 = (zext_ln229_fu_232_p1 + gat_net_scoring_fn_source_fixed);

assign add_ln229_2_fu_307_p2 = (i_fu_102 + 3'd1);

assign add_ln229_fu_236_p2 = (zext_ln229_fu_232_p1 + gat_net_scoring_fn_target_fixed);

assign add_ln230_fu_393_p2 = (j_reg_184 + 5'd1);

assign add_ln231_1_fu_408_p2 = ($signed(zext_ln231_fu_404_p1) + $signed(sext_ln229_reg_482));

assign add_ln231_fu_399_p2 = (zext_ln230_fu_383_p1 + tmp_5_reg_505);

assign add_ln232_1_fu_288_p2 = (tmp_1_reg_477 + zext_ln232_fu_284_p1);

assign add_ln232_2_fu_372_p2 = (tmp_3_cast_reg_492 + zext_ln232_1_fu_368_p1);

assign add_ln232_fu_423_p2 = ($signed(zext_ln231_fu_404_p1) + $signed(sext_ln229_1_reg_487));

assign add_ln236_1_fu_352_p2 = (zext_ln236_fu_332_p1 + gat_net_skip_proj_weight_fixed);

assign add_ln236_fu_336_p2 = (zext_ln236_fu_332_p1 + gat_net_linear_proj_weight_fixed);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign empty_78_fu_313_p1 = i_fu_102[1:0];

assign grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg;

assign icmp_ln229_fu_301_p2 = ((i_fu_102 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln230_fu_387_p2 = ((j_reg_184 == 5'd16) ? 1'b1 : 1'b0);

assign linear_proj_weight_V_address0 = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_address0;

assign linear_proj_weight_V_ce0 = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_ce0;

assign linear_proj_weight_V_d0 = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_d0;

assign linear_proj_weight_V_we0 = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_we0;

assign m_axi_mem_AWADDR = 64'd0;

assign m_axi_mem_AWBURST = 2'd0;

assign m_axi_mem_AWCACHE = 4'd0;

assign m_axi_mem_AWID = 1'd0;

assign m_axi_mem_AWLEN = 32'd0;

assign m_axi_mem_AWLOCK = 2'd0;

assign m_axi_mem_AWPROT = 3'd0;

assign m_axi_mem_AWQOS = 4'd0;

assign m_axi_mem_AWREGION = 4'd0;

assign m_axi_mem_AWSIZE = 3'd0;

assign m_axi_mem_AWUSER = 1'd0;

assign m_axi_mem_AWVALID = 1'b0;

assign m_axi_mem_BREADY = 1'b0;

assign m_axi_mem_WDATA = 32'd0;

assign m_axi_mem_WID = 1'd0;

assign m_axi_mem_WLAST = 1'b0;

assign m_axi_mem_WSTRB = 4'd0;

assign m_axi_mem_WUSER = 1'd0;

assign m_axi_mem_WVALID = 1'b0;

assign scoring_fn_source_V_address0 = scoring_fn_source_V_addr_reg_520;

assign scoring_fn_source_V_d0 = trunc_ln232_reg_555;

assign scoring_fn_target_V_address0 = scoring_fn_target_V_addr_reg_525;

assign scoring_fn_target_V_d0 = trunc_ln231_reg_550;

assign sext_ln229_1_fu_272_p1 = $signed(trunc_ln229_1_fu_262_p4);

assign sext_ln229_fu_252_p1 = $signed(trunc_ln_fu_242_p4);

assign sext_ln231_fu_413_p1 = $signed(add_ln231_1_fu_408_p2);

assign sext_ln232_fu_428_p1 = $signed(add_ln232_fu_423_p2);

assign shl_ln1_fu_325_p3 = {{layer}, {14'd0}};

assign shl_ln_fu_224_p3 = {{layer}, {8'd0}};

assign skip_proj_weight_V_address0 = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_address0;

assign skip_proj_weight_V_ce0 = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_ce0;

assign skip_proj_weight_V_d0 = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_d0;

assign skip_proj_weight_V_we0 = grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_we0;

assign tmp_1_fu_216_p3 = {{layer}, {2'd0}};

assign tmp_3_cast_fu_293_p3 = {{add_ln232_1_fu_288_p2}, {4'd0}};

assign tmp_5_fu_317_p3 = {{empty_78_fu_313_p1}, {4'd0}};

assign tmp_fu_208_p3 = {{layer}, {6'd0}};

assign trunc_ln229_1_fu_262_p4 = {{add_ln229_1_fu_256_p2[63:2]}};

assign trunc_ln231_fu_442_p1 = m_axi_mem_RDATA[27:0];

assign trunc_ln232_fu_446_p1 = m_axi_mem_RDATA[27:0];

assign trunc_ln_fu_242_p4 = {{add_ln229_fu_236_p2[63:2]}};

assign zext_ln229_fu_232_p1 = shl_ln_fu_224_p3;

assign zext_ln230_fu_383_p1 = j_reg_184;

assign zext_ln231_fu_404_p1 = add_ln231_fu_399_p2;

assign zext_ln232_1_fu_368_p1 = j_reg_184;

assign zext_ln232_2_fu_377_p1 = add_ln232_2_fu_372_p2;

assign zext_ln232_fu_284_p1 = i_fu_102;

assign zext_ln236_fu_332_p1 = shl_ln1_fu_325_p3;

always @ (posedge ap_clk) begin
    tmp_reg_472[5:0] <= 6'b000000;
    tmp_1_reg_477[1:0] <= 2'b00;
    tmp_3_cast_reg_492[3:0] <= 4'b0000;
    tmp_5_reg_505[3:0] <= 4'b0000;
end

endmodule //GAT_compute_one_graph_load_weights_one_layer
