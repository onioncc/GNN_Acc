-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_compute_connectivity_mask_Pipeline_VITIS_LOOP_374_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    connectivity_mask_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_0_ce0 : OUT STD_LOGIC;
    connectivity_mask_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_0_ce1 : OUT STD_LOGIC;
    connectivity_mask_0_we1 : OUT STD_LOGIC;
    connectivity_mask_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_1_ce0 : OUT STD_LOGIC;
    connectivity_mask_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_1_ce1 : OUT STD_LOGIC;
    connectivity_mask_1_we1 : OUT STD_LOGIC;
    connectivity_mask_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_2_ce0 : OUT STD_LOGIC;
    connectivity_mask_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_2_ce1 : OUT STD_LOGIC;
    connectivity_mask_2_we1 : OUT STD_LOGIC;
    connectivity_mask_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_3_ce0 : OUT STD_LOGIC;
    connectivity_mask_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_3_ce1 : OUT STD_LOGIC;
    connectivity_mask_3_we1 : OUT STD_LOGIC;
    connectivity_mask_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_4_ce0 : OUT STD_LOGIC;
    connectivity_mask_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_4_ce1 : OUT STD_LOGIC;
    connectivity_mask_4_we1 : OUT STD_LOGIC;
    connectivity_mask_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_5_ce0 : OUT STD_LOGIC;
    connectivity_mask_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_5_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_5_ce1 : OUT STD_LOGIC;
    connectivity_mask_5_we1 : OUT STD_LOGIC;
    connectivity_mask_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_6_ce0 : OUT STD_LOGIC;
    connectivity_mask_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_6_ce1 : OUT STD_LOGIC;
    connectivity_mask_6_we1 : OUT STD_LOGIC;
    connectivity_mask_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_7_ce0 : OUT STD_LOGIC;
    connectivity_mask_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_7_ce1 : OUT STD_LOGIC;
    connectivity_mask_7_we1 : OUT STD_LOGIC;
    connectivity_mask_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_8_ce0 : OUT STD_LOGIC;
    connectivity_mask_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_8_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_8_ce1 : OUT STD_LOGIC;
    connectivity_mask_8_we1 : OUT STD_LOGIC;
    connectivity_mask_8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_9_ce0 : OUT STD_LOGIC;
    connectivity_mask_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_9_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_9_ce1 : OUT STD_LOGIC;
    connectivity_mask_9_we1 : OUT STD_LOGIC;
    connectivity_mask_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_10_ce0 : OUT STD_LOGIC;
    connectivity_mask_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_10_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_10_ce1 : OUT STD_LOGIC;
    connectivity_mask_10_we1 : OUT STD_LOGIC;
    connectivity_mask_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_11_ce0 : OUT STD_LOGIC;
    connectivity_mask_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_11_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_11_ce1 : OUT STD_LOGIC;
    connectivity_mask_11_we1 : OUT STD_LOGIC;
    connectivity_mask_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_12_ce0 : OUT STD_LOGIC;
    connectivity_mask_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_12_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_12_ce1 : OUT STD_LOGIC;
    connectivity_mask_12_we1 : OUT STD_LOGIC;
    connectivity_mask_12_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_13_ce0 : OUT STD_LOGIC;
    connectivity_mask_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_13_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_13_ce1 : OUT STD_LOGIC;
    connectivity_mask_13_we1 : OUT STD_LOGIC;
    connectivity_mask_13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_14_ce0 : OUT STD_LOGIC;
    connectivity_mask_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_14_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_14_ce1 : OUT STD_LOGIC;
    connectivity_mask_14_we1 : OUT STD_LOGIC;
    connectivity_mask_14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_15_ce0 : OUT STD_LOGIC;
    connectivity_mask_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_15_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_15_ce1 : OUT STD_LOGIC;
    connectivity_mask_15_we1 : OUT STD_LOGIC;
    connectivity_mask_15_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_16_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_16_ce0 : OUT STD_LOGIC;
    connectivity_mask_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_16_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_16_ce1 : OUT STD_LOGIC;
    connectivity_mask_16_we1 : OUT STD_LOGIC;
    connectivity_mask_16_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_17_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_17_ce0 : OUT STD_LOGIC;
    connectivity_mask_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_17_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_17_ce1 : OUT STD_LOGIC;
    connectivity_mask_17_we1 : OUT STD_LOGIC;
    connectivity_mask_17_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_18_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_18_ce0 : OUT STD_LOGIC;
    connectivity_mask_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    connectivity_mask_18_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    connectivity_mask_18_ce1 : OUT STD_LOGIC;
    connectivity_mask_18_we1 : OUT STD_LOGIC;
    connectivity_mask_18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of GAT_compute_one_graph_compute_connectivity_mask_Pipeline_VITIS_LOOP_374_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln374_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal i_5_reg_554 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_5_reg_554_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln374_reg_558 : STD_LOGIC_VECTOR (0 downto 0);
    signal connectivity_mask_0_addr_1_reg_562 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_0_addr_1_reg_562_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_1_addr_1_reg_568 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_1_addr_1_reg_568_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_2_addr_1_reg_574 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_2_addr_1_reg_574_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_3_addr_1_reg_580 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_3_addr_1_reg_580_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_4_addr_1_reg_586 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_4_addr_1_reg_586_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_5_addr_1_reg_592 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_5_addr_1_reg_592_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_6_addr_1_reg_598 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_6_addr_1_reg_598_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_7_addr_1_reg_604 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_7_addr_1_reg_604_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_8_addr_1_reg_610 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_8_addr_1_reg_610_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_9_addr_1_reg_616 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_9_addr_1_reg_616_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_10_addr_1_reg_622 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_10_addr_1_reg_622_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_11_addr_1_reg_628 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_11_addr_1_reg_628_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_12_addr_1_reg_634 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_12_addr_1_reg_634_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_13_addr_1_reg_640 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_13_addr_1_reg_640_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_14_addr_1_reg_646 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_14_addr_1_reg_646_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_15_addr_1_reg_652 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_15_addr_1_reg_652_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_16_addr_1_reg_658 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_16_addr_1_reg_658_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_17_addr_1_reg_664 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_17_addr_1_reg_664_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_18_addr_1_reg_670 : STD_LOGIC_VECTOR (6 downto 0);
    signal connectivity_mask_18_addr_1_reg_670_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln375_reg_431 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln375_reg_431 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_phi_ln375_reg_431 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln375_cast_fu_494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_fu_104 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_5 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln374_fu_488_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln375_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_461 : BOOLEAN;
    signal ap_condition_334 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_phi_ln375_reg_431_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_334)) then
                if ((ap_const_boolean_1 = ap_condition_461)) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_18_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_11))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_17_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_10))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_16_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_F))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_15_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_E))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_14_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_D))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_13_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_C))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_12_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_B))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_11_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_A))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_10_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_9))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_9_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_8))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_8_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_7))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_7_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_6))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_6_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_5))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_5_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_4))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_4_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_3))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_3_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_2))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_2_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_1))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_1_q0;
                elsif (((icmp_ln374_reg_558 = ap_const_lv1_0) and (i_5_reg_554 = ap_const_lv5_0))) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= connectivity_mask_0_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_phi_ln375_reg_431 <= ap_phi_reg_pp0_iter1_phi_ln375_reg_431;
                end if;
            end if; 
        end if;
    end process;

    i_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln374_fu_482_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_104 <= add_ln374_fu_488_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_104 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                    connectivity_mask_0_addr_1_reg_562_pp0_iter1_reg(4 downto 0) <= connectivity_mask_0_addr_1_reg_562(4 downto 0);
                    connectivity_mask_10_addr_1_reg_622_pp0_iter1_reg(4 downto 0) <= connectivity_mask_10_addr_1_reg_622(4 downto 0);
                    connectivity_mask_11_addr_1_reg_628_pp0_iter1_reg(4 downto 0) <= connectivity_mask_11_addr_1_reg_628(4 downto 0);
                    connectivity_mask_12_addr_1_reg_634_pp0_iter1_reg(4 downto 0) <= connectivity_mask_12_addr_1_reg_634(4 downto 0);
                    connectivity_mask_13_addr_1_reg_640_pp0_iter1_reg(4 downto 0) <= connectivity_mask_13_addr_1_reg_640(4 downto 0);
                    connectivity_mask_14_addr_1_reg_646_pp0_iter1_reg(4 downto 0) <= connectivity_mask_14_addr_1_reg_646(4 downto 0);
                    connectivity_mask_15_addr_1_reg_652_pp0_iter1_reg(4 downto 0) <= connectivity_mask_15_addr_1_reg_652(4 downto 0);
                    connectivity_mask_16_addr_1_reg_658_pp0_iter1_reg(4 downto 0) <= connectivity_mask_16_addr_1_reg_658(4 downto 0);
                    connectivity_mask_17_addr_1_reg_664_pp0_iter1_reg(4 downto 0) <= connectivity_mask_17_addr_1_reg_664(4 downto 0);
                    connectivity_mask_18_addr_1_reg_670_pp0_iter1_reg(4 downto 0) <= connectivity_mask_18_addr_1_reg_670(4 downto 0);
                    connectivity_mask_1_addr_1_reg_568_pp0_iter1_reg(4 downto 0) <= connectivity_mask_1_addr_1_reg_568(4 downto 0);
                    connectivity_mask_2_addr_1_reg_574_pp0_iter1_reg(4 downto 0) <= connectivity_mask_2_addr_1_reg_574(4 downto 0);
                    connectivity_mask_3_addr_1_reg_580_pp0_iter1_reg(4 downto 0) <= connectivity_mask_3_addr_1_reg_580(4 downto 0);
                    connectivity_mask_4_addr_1_reg_586_pp0_iter1_reg(4 downto 0) <= connectivity_mask_4_addr_1_reg_586(4 downto 0);
                    connectivity_mask_5_addr_1_reg_592_pp0_iter1_reg(4 downto 0) <= connectivity_mask_5_addr_1_reg_592(4 downto 0);
                    connectivity_mask_6_addr_1_reg_598_pp0_iter1_reg(4 downto 0) <= connectivity_mask_6_addr_1_reg_598(4 downto 0);
                    connectivity_mask_7_addr_1_reg_604_pp0_iter1_reg(4 downto 0) <= connectivity_mask_7_addr_1_reg_604(4 downto 0);
                    connectivity_mask_8_addr_1_reg_610_pp0_iter1_reg(4 downto 0) <= connectivity_mask_8_addr_1_reg_610(4 downto 0);
                    connectivity_mask_9_addr_1_reg_616_pp0_iter1_reg(4 downto 0) <= connectivity_mask_9_addr_1_reg_616(4 downto 0);
                i_5_reg_554 <= ap_sig_allocacmp_i_5;
                i_5_reg_554_pp0_iter1_reg <= i_5_reg_554;
                icmp_ln374_reg_558 <= icmp_ln374_fu_482_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_phi_ln375_reg_431 <= ap_phi_reg_pp0_iter0_phi_ln375_reg_431;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln374_fu_482_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    connectivity_mask_0_addr_1_reg_562(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_10_addr_1_reg_622(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_11_addr_1_reg_628(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_12_addr_1_reg_634(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_13_addr_1_reg_640(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_14_addr_1_reg_646(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_15_addr_1_reg_652(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_16_addr_1_reg_658(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_17_addr_1_reg_664(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_18_addr_1_reg_670(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_1_addr_1_reg_568(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_2_addr_1_reg_574(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_3_addr_1_reg_580(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_4_addr_1_reg_586(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_5_addr_1_reg_592(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_6_addr_1_reg_598(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_7_addr_1_reg_604(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_8_addr_1_reg_610(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
                    connectivity_mask_9_addr_1_reg_616(4 downto 0) <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0)(4 downto 0);
            end if;
        end if;
    end process;
    connectivity_mask_0_addr_1_reg_562(6 downto 5) <= "00";
    connectivity_mask_0_addr_1_reg_562_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_1_addr_1_reg_568(6 downto 5) <= "00";
    connectivity_mask_1_addr_1_reg_568_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_2_addr_1_reg_574(6 downto 5) <= "00";
    connectivity_mask_2_addr_1_reg_574_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_3_addr_1_reg_580(6 downto 5) <= "00";
    connectivity_mask_3_addr_1_reg_580_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_4_addr_1_reg_586(6 downto 5) <= "00";
    connectivity_mask_4_addr_1_reg_586_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_5_addr_1_reg_592(6 downto 5) <= "00";
    connectivity_mask_5_addr_1_reg_592_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_6_addr_1_reg_598(6 downto 5) <= "00";
    connectivity_mask_6_addr_1_reg_598_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_7_addr_1_reg_604(6 downto 5) <= "00";
    connectivity_mask_7_addr_1_reg_604_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_8_addr_1_reg_610(6 downto 5) <= "00";
    connectivity_mask_8_addr_1_reg_610_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_9_addr_1_reg_616(6 downto 5) <= "00";
    connectivity_mask_9_addr_1_reg_616_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_10_addr_1_reg_622(6 downto 5) <= "00";
    connectivity_mask_10_addr_1_reg_622_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_11_addr_1_reg_628(6 downto 5) <= "00";
    connectivity_mask_11_addr_1_reg_628_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_12_addr_1_reg_634(6 downto 5) <= "00";
    connectivity_mask_12_addr_1_reg_634_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_13_addr_1_reg_640(6 downto 5) <= "00";
    connectivity_mask_13_addr_1_reg_640_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_14_addr_1_reg_646(6 downto 5) <= "00";
    connectivity_mask_14_addr_1_reg_646_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_15_addr_1_reg_652(6 downto 5) <= "00";
    connectivity_mask_15_addr_1_reg_652_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_16_addr_1_reg_658(6 downto 5) <= "00";
    connectivity_mask_16_addr_1_reg_658_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_17_addr_1_reg_664(6 downto 5) <= "00";
    connectivity_mask_17_addr_1_reg_664_pp0_iter1_reg(6 downto 5) <= "00";
    connectivity_mask_18_addr_1_reg_670(6 downto 5) <= "00";
    connectivity_mask_18_addr_1_reg_670_pp0_iter1_reg(6 downto 5) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln374_fu_488_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_5) + unsigned(ap_const_lv5_1));
    add_ln375_fu_522_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter2_phi_ln375_reg_431) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_334_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_334 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_461_assign_proc : process(i_5_reg_554, icmp_ln374_reg_558)
    begin
                ap_condition_461 <= (not((i_5_reg_554 = ap_const_lv5_0)) and not((i_5_reg_554 = ap_const_lv5_1)) and not((i_5_reg_554 = ap_const_lv5_2)) and not((i_5_reg_554 = ap_const_lv5_3)) and not((i_5_reg_554 = ap_const_lv5_4)) and not((i_5_reg_554 = ap_const_lv5_5)) and not((i_5_reg_554 = ap_const_lv5_6)) and not((i_5_reg_554 = ap_const_lv5_7)) and not((i_5_reg_554 = ap_const_lv5_8)) and not((i_5_reg_554 = ap_const_lv5_9)) and not((i_5_reg_554 = ap_const_lv5_A)) and not((i_5_reg_554 = ap_const_lv5_B)) and not((i_5_reg_554 = ap_const_lv5_C)) and not((i_5_reg_554 = ap_const_lv5_D)) and not((i_5_reg_554 = ap_const_lv5_E)) and not((i_5_reg_554 = ap_const_lv5_F)) and not((i_5_reg_554 = ap_const_lv5_10)) and not((i_5_reg_554 = ap_const_lv5_11)) and (icmp_ln374_reg_558 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln374_fu_482_p2)
    begin
        if (((icmp_ln374_fu_482_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_phi_ln375_reg_431 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_104, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_5 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_i_5 <= i_fu_104;
        end if; 
    end process;

    connectivity_mask_0_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_0_address1 <= connectivity_mask_0_addr_1_reg_562_pp0_iter1_reg;

    connectivity_mask_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_0_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_0_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_0_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_0_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_0))) then 
            connectivity_mask_0_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_10_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_10_address1 <= connectivity_mask_10_addr_1_reg_622_pp0_iter1_reg;

    connectivity_mask_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_10_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_10_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_10_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_10_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_10_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_A))) then 
            connectivity_mask_10_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_11_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_11_address1 <= connectivity_mask_11_addr_1_reg_628_pp0_iter1_reg;

    connectivity_mask_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_11_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_11_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_11_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_11_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_11_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_B))) then 
            connectivity_mask_11_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_11_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_12_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_12_address1 <= connectivity_mask_12_addr_1_reg_634_pp0_iter1_reg;

    connectivity_mask_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_12_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_12_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_12_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_12_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_12_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_C))) then 
            connectivity_mask_12_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_12_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_13_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_13_address1 <= connectivity_mask_13_addr_1_reg_640_pp0_iter1_reg;

    connectivity_mask_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_13_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_13_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_13_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_13_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_13_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_D))) then 
            connectivity_mask_13_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_13_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_14_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_14_address1 <= connectivity_mask_14_addr_1_reg_646_pp0_iter1_reg;

    connectivity_mask_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_14_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_14_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_14_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_14_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_14_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_E))) then 
            connectivity_mask_14_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_14_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_15_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_15_address1 <= connectivity_mask_15_addr_1_reg_652_pp0_iter1_reg;

    connectivity_mask_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_15_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_15_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_15_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_15_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_15_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_F))) then 
            connectivity_mask_15_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_15_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_16_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_16_address1 <= connectivity_mask_16_addr_1_reg_658_pp0_iter1_reg;

    connectivity_mask_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_16_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_16_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_16_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_16_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_16_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_10))) then 
            connectivity_mask_16_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_16_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_17_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_17_address1 <= connectivity_mask_17_addr_1_reg_664_pp0_iter1_reg;

    connectivity_mask_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_17_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_17_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_17_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_17_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_17_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_11))) then 
            connectivity_mask_17_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_17_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_18_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_18_address1 <= connectivity_mask_18_addr_1_reg_670_pp0_iter1_reg;

    connectivity_mask_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_18_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_18_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_18_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_18_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_18_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_12) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_13) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_14) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_15) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_16) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_17) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_18) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_19) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_1A) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_1B) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_1C) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_1D) or ((i_5_reg_554_pp0_iter1_reg = ap_const_lv5_1E) or (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_1F)))))))))))))))) then 
            connectivity_mask_18_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_18_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_1_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_1_address1 <= connectivity_mask_1_addr_1_reg_568_pp0_iter1_reg;

    connectivity_mask_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_1_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_1_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_1_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_1_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_1))) then 
            connectivity_mask_1_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_2_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_2_address1 <= connectivity_mask_2_addr_1_reg_574_pp0_iter1_reg;

    connectivity_mask_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_2_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_2_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_2_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_2_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_2))) then 
            connectivity_mask_2_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_3_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_3_address1 <= connectivity_mask_3_addr_1_reg_580_pp0_iter1_reg;

    connectivity_mask_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_3_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_3_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_3_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_3))) then 
            connectivity_mask_3_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_4_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_4_address1 <= connectivity_mask_4_addr_1_reg_586_pp0_iter1_reg;

    connectivity_mask_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_4_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_4_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_4_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_4))) then 
            connectivity_mask_4_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_5_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_5_address1 <= connectivity_mask_5_addr_1_reg_592_pp0_iter1_reg;

    connectivity_mask_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_5_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_5_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_5_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_5))) then 
            connectivity_mask_5_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_6_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_6_address1 <= connectivity_mask_6_addr_1_reg_598_pp0_iter1_reg;

    connectivity_mask_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_6_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_6_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_6_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_6_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_6))) then 
            connectivity_mask_6_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_7_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_7_address1 <= connectivity_mask_7_addr_1_reg_604_pp0_iter1_reg;

    connectivity_mask_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_7_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_7_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_7_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_7_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_7))) then 
            connectivity_mask_7_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_8_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_8_address1 <= connectivity_mask_8_addr_1_reg_610_pp0_iter1_reg;

    connectivity_mask_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_8_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_8_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_8_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_8_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_8_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_8))) then 
            connectivity_mask_8_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_9_address0 <= trunc_ln375_cast_fu_494_p1(7 - 1 downto 0);
    connectivity_mask_9_address1 <= connectivity_mask_9_addr_1_reg_616_pp0_iter1_reg;

    connectivity_mask_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            connectivity_mask_9_ce0 <= ap_const_logic_1;
        else 
            connectivity_mask_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    connectivity_mask_9_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            connectivity_mask_9_ce1 <= ap_const_logic_1;
        else 
            connectivity_mask_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    connectivity_mask_9_d1 <= add_ln375_fu_522_p2;

    connectivity_mask_9_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, i_5_reg_554_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (i_5_reg_554_pp0_iter1_reg = ap_const_lv5_9))) then 
            connectivity_mask_9_we1 <= ap_const_logic_1;
        else 
            connectivity_mask_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln374_fu_482_p2 <= "1" when (ap_sig_allocacmp_i_5 = ap_const_lv5_13) else "0";
    trunc_ln375_cast_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_5),64));
end behav;
