-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_CONV_Pipeline_VITIS_LOOP_56_7_VITIS_LOOP_57_8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zext_ln1171_3 : IN STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scoring_fn_target_V_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scoring_fn_target_V_ce1 : OUT STD_LOGIC;
    scoring_fn_target_V_q1 : IN STD_LOGIC_VECTOR (27 downto 0);
    scores_target_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scores_target_V_ce0 : OUT STD_LOGIC;
    scores_target_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scores_target_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scores_target_V_ce1 : OUT STD_LOGIC;
    scores_target_V_we1 : OUT STD_LOGIC;
    scores_target_V_d1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    nodes_features_proj_V_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    nodes_features_proj_V_ce1 : OUT STD_LOGIC;
    nodes_features_proj_V_q1 : IN STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_830_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_830_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_830_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_830_p_ce : OUT STD_LOGIC;
    grp_fu_834_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_834_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_834_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_834_p_ce : OUT STD_LOGIC;
    grp_fu_838_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_838_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_838_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_838_p_ce : OUT STD_LOGIC;
    grp_fu_842_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_842_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_842_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_842_p_ce : OUT STD_LOGIC;
    grp_fu_846_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_846_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_846_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_846_p_ce : OUT STD_LOGIC;
    grp_fu_850_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_850_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_850_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_850_p_ce : OUT STD_LOGIC;
    grp_fu_854_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_854_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_854_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_854_p_ce : OUT STD_LOGIC;
    grp_fu_858_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_858_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_858_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_858_p_ce : OUT STD_LOGIC;
    grp_fu_862_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_862_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_862_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_862_p_ce : OUT STD_LOGIC;
    grp_fu_866_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_866_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_866_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_866_p_ce : OUT STD_LOGIC;
    grp_fu_870_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_870_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_870_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_870_p_ce : OUT STD_LOGIC;
    grp_fu_874_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_874_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_874_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_874_p_ce : OUT STD_LOGIC;
    grp_fu_878_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_878_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_878_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_878_p_ce : OUT STD_LOGIC;
    grp_fu_882_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_882_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_882_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_882_p_ce : OUT STD_LOGIC;
    grp_fu_886_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_886_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_886_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_886_p_ce : OUT STD_LOGIC;
    grp_fu_890_p_din0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_890_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
    grp_fu_890_p_dout0 : IN STD_LOGIC_VECTOR (45 downto 0);
    grp_fu_890_p_ce : OUT STD_LOGIC );
end;


architecture behav of GAT_compute_one_graph_CONV_Pipeline_VITIS_LOOP_56_7_VITIS_LOOP_57_8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_9 : STD_LOGIC_VECTOR (8 downto 0) := "000001001";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv9_A : STD_LOGIC_VECTOR (8 downto 0) := "000001010";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv12_A : STD_LOGIC_VECTOR (11 downto 0) := "000000001010";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv9_D : STD_LOGIC_VECTOR (8 downto 0) := "000001101";
    constant ap_const_lv12_C : STD_LOGIC_VECTOR (11 downto 0) := "000000001100";
    constant ap_const_lv12_D : STD_LOGIC_VECTOR (11 downto 0) := "000000001101";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_F : STD_LOGIC_VECTOR (11 downto 0) := "000000001111";
    constant ap_const_lv9_64 : STD_LOGIC_VECTOR (8 downto 0) := "001100100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal icmp_ln56_reg_1679 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage6 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal reg_451 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal reg_455 : STD_LOGIC_VECTOR (27 downto 0);
    signal reg_459 : STD_LOGIC_VECTOR (27 downto 0);
    signal reg_463 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln56_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln56_fu_533_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln56_reg_1683 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln56_1_fu_559_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln56_1_reg_1689 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln56_2_fu_571_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln56_2_reg_1699 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_634_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_reg_1729 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln56_fu_725_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_1_fu_729_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal scores_target_V_addr_1_reg_1812 : STD_LOGIC_VECTOR (8 downto 0);
    signal scores_target_V_addr_1_reg_1812_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1171_17_fu_793_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_18_fu_803_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_2_fu_813_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_3_fu_817_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal scores_target_V_load_reg_1858 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1171_fu_877_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_19_fu_887_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_4_fu_897_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_5_fu_901_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_17_reg_1903 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_18_reg_1908 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_20_fu_961_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_21_fu_971_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_6_fu_981_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_7_fu_985_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_reg_1953 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_18_reg_1958 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_19_reg_1963 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_22_fu_1090_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_23_fu_1100_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_8_fu_1110_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_9_fu_1114_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_20_reg_2008 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_20_reg_2013 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_21_reg_2018 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_24_fu_1219_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_25_fu_1229_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_10_fu_1239_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_11_fu_1243_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_22_reg_2063 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_22_reg_2068 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_23_reg_2073 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_26_fu_1348_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_27_fu_1358_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_12_fu_1368_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_13_fu_1372_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_24_reg_2098 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_24_reg_2103 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_25_reg_2108 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_28_fu_1421_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_29_fu_1431_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_14_fu_1441_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln56_15_fu_1445_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_26_reg_2133 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_26_reg_2138 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_27_reg_2143 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_30_fu_1494_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1171_31_fu_1504_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_28_reg_2158 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_28_reg_2163 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_29_reg_2168 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_30_reg_2173 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_30_reg_2178 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_31_reg_2183 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln717_1_reg_2188 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln1171_5_fu_603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln1171_6_fu_612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_4_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_5_fu_661_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_7_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln1171_8_fu_681_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_6_fu_702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_7_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_9_fu_738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln1171_10_fu_748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_8_fu_766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_9_fu_784_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast2_fu_789_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_11_fu_826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln1171_12_fu_836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_10_fu_854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_11_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_13_fu_910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln1171_14_fu_920_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_12_fu_938_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_13_fu_956_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_15_fu_994_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln1171_16_fu_1004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_14_fu_1022_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_15_fu_1040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_17_fu_1123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln1171_18_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_16_fu_1151_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_17_fu_1169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_19_fu_1252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln1171_20_fu_1262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_18_fu_1280_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_19_fu_1298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_142 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_load : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln57_fu_579_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal nh_1_fu_146 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_nh : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten50_fu_150 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten50_load : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln56_1_fu_512_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1171_fu_488_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1171_fu_492_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln57_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln56_fu_521_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1171_4_fu_541_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1171_1_fu_545_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_72_cast_fu_551_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_70_cast_fu_498_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_fu_607_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_617_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1169_3_fu_624_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln56_1_cast1_fu_600_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1169_fu_628_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln1169_fu_647_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_s_fu_653_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln56_1_fu_666_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_2_fu_676_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_1_fu_689_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_2_fu_694_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_3_fu_707_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_4_fu_712_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln56_3_fu_733_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_4_fu_743_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_5_fu_753_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_6_fu_758_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_7_fu_771_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_8_fu_776_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1649_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_5_fu_821_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_6_fu_831_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_9_fu_841_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_10_fu_846_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_11_fu_859_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_12_fu_864_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln56_7_fu_905_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_8_fu_915_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_13_fu_925_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_14_fu_930_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_15_fu_943_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_16_fu_948_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln56_9_fu_989_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_10_fu_999_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_17_fu_1009_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_18_fu_1014_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_19_fu_1027_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_20_fu_1032_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln737_15_fu_1045_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_17_fu_1052_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_17_fu_1057_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_16_fu_1067_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_18_fu_1075_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal or_ln56_11_fu_1118_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_12_fu_1128_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_21_fu_1138_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_22_fu_1143_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_23_fu_1156_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_24_fu_1161_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln737_17_fu_1174_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_fu_1181_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_19_fu_1186_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_18_fu_1196_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_19_fu_1204_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal or_ln56_13_fu_1247_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln56_14_fu_1257_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln1169_25_fu_1267_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_26_fu_1272_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1169_27_fu_1285_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1169_28_fu_1290_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln737_s_fu_1303_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_20_fu_1310_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_21_fu_1315_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_19_fu_1325_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_21_fu_1333_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_20_fu_1376_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_22_fu_1383_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_23_fu_1388_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_21_fu_1398_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_23_fu_1406_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_22_fu_1449_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_24_fu_1456_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_25_fu_1461_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_23_fu_1471_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_25_fu_1479_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_24_fu_1514_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_26_fu_1521_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_27_fu_1526_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_25_fu_1536_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_27_fu_1544_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_26_fu_1559_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_28_fu_1566_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_29_fu_1571_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_27_fu_1581_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_29_fu_1589_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_28_fu_1604_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_30_fu_1611_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_31_fu_1616_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_29_fu_1626_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_31_fu_1634_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1649_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1649_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1649_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1649_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1649_p20 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_mul_28s_28s_46_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (27 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component GAT_compute_one_graph_mac_muladd_3ns_7ns_5ns_9_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mac_muladd_3ns_7ns_5ns_9_4_1_U119 : component GAT_compute_one_graph_mac_muladd_3ns_7ns_5ns_9_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 7,
        din2_WIDTH => 5,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1649_p0,
        din1 => grp_fu_1649_p1,
        din2 => grp_fu_1649_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1649_p3);

    flow_control_loop_pipe_sequential_init_U : component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage6,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage6)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten50_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln56_fu_506_p2 = ap_const_lv1_0))) then 
                    indvar_flatten50_fu_150 <= add_ln56_1_fu_512_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten50_fu_150 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    n_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln56_fu_506_p2 = ap_const_lv1_0))) then 
                    n_fu_142 <= add_ln57_fu_579_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_142 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    nh_1_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln56_fu_506_p2 = ap_const_lv1_0))) then 
                    nh_1_fu_146 <= select_ln56_1_fu_559_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    nh_1_fu_146 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln56_reg_1679 <= icmp_ln56_fu_506_p2;
                mul_ln1171_22_reg_2063 <= grp_fu_854_p_dout0;
                mul_ln1171_23_reg_2073 <= grp_fu_858_p_dout0;
                tmp_22_reg_2068 <= add_ln1245_21_fu_1333_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_ln1171_17_reg_1903 <= grp_fu_830_p_dout0;
                mul_ln1171_18_reg_1908 <= grp_fu_834_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_ln1171_19_reg_1963 <= grp_fu_842_p_dout0;
                mul_ln1171_reg_1953 <= grp_fu_838_p_dout0;
                tmp_18_reg_1958 <= add_ln1245_18_fu_1075_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_ln1171_20_reg_2008 <= grp_fu_846_p_dout0;
                mul_ln1171_21_reg_2018 <= grp_fu_850_p_dout0;
                tmp_20_reg_2013 <= add_ln1245_19_fu_1204_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_ln1171_24_reg_2098 <= grp_fu_862_p_dout0;
                mul_ln1171_25_reg_2108 <= grp_fu_866_p_dout0;
                tmp_24_reg_2103 <= add_ln1245_23_fu_1406_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_ln1171_26_reg_2133 <= grp_fu_870_p_dout0;
                mul_ln1171_27_reg_2143 <= grp_fu_874_p_dout0;
                tmp_26_reg_2138 <= add_ln1245_25_fu_1479_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_ln1171_28_reg_2158 <= grp_fu_878_p_dout0;
                mul_ln1171_29_reg_2168 <= grp_fu_882_p_dout0;
                scores_target_V_addr_1_reg_1812_pp0_iter1_reg <= scores_target_V_addr_1_reg_1812;
                tmp_28_reg_2163 <= add_ln1245_27_fu_1544_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_ln1171_30_reg_2173 <= grp_fu_886_p_dout0;
                mul_ln1171_31_reg_2183 <= grp_fu_890_p_dout0;
                tmp_30_reg_2178 <= add_ln1245_29_fu_1589_p2(45 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_451 <= scoring_fn_target_V_q1;
                reg_455 <= scoring_fn_target_V_q0;
                reg_459 <= nodes_features_proj_V_q1;
                reg_463 <= nodes_features_proj_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                scores_target_V_addr_1_reg_1812 <= p_cast2_fu_789_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                scores_target_V_load_reg_1858 <= scores_target_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln56_fu_506_p2 = ap_const_lv1_0))) then
                select_ln56_1_reg_1689 <= select_ln56_1_fu_559_p3;
                    select_ln56_2_reg_1699(8 downto 4) <= select_ln56_2_fu_571_p3(8 downto 4);
                select_ln56_reg_1683 <= select_ln56_fu_533_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    tmp_reg_1729(11 downto 4) <= tmp_fu_634_p3(11 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                trunc_ln717_1_reg_2188 <= add_ln1245_31_fu_1634_p2(45 downto 18);
            end if;
        end if;
    end process;
    select_ln56_2_reg_1699(3 downto 0) <= "0000";
    tmp_reg_1729(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage6_subdone, ap_condition_exit_pp0_iter0_stage6, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage6)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln1169_fu_628_p2 <= std_logic_vector(unsigned(zext_ln1169_3_fu_624_p1) + unsigned(select_ln56_1_cast1_fu_600_p1));
    add_ln1171_1_fu_545_p2 <= std_logic_vector(unsigned(zext_ln1171_3) + unsigned(zext_ln1171_4_fu_541_p1));
    add_ln1171_fu_492_p2 <= std_logic_vector(unsigned(zext_ln1171_3) + unsigned(zext_ln1171_fu_488_p1));
    add_ln1245_17_fu_1052_p2 <= std_logic_vector(unsigned(shl_ln737_15_fu_1045_p3) + unsigned(mul_ln1171_17_reg_1903));
    add_ln1245_18_fu_1075_p2 <= std_logic_vector(unsigned(shl_ln737_16_fu_1067_p3) + unsigned(mul_ln1171_18_reg_1908));
    add_ln1245_19_fu_1204_p2 <= std_logic_vector(unsigned(shl_ln737_18_fu_1196_p3) + unsigned(mul_ln1171_19_reg_1963));
    add_ln1245_20_fu_1310_p2 <= std_logic_vector(unsigned(shl_ln737_s_fu_1303_p3) + unsigned(mul_ln1171_20_reg_2008));
    add_ln1245_21_fu_1333_p2 <= std_logic_vector(unsigned(shl_ln737_19_fu_1325_p3) + unsigned(mul_ln1171_21_reg_2018));
    add_ln1245_22_fu_1383_p2 <= std_logic_vector(unsigned(shl_ln737_20_fu_1376_p3) + unsigned(mul_ln1171_22_reg_2063));
    add_ln1245_23_fu_1406_p2 <= std_logic_vector(unsigned(shl_ln737_21_fu_1398_p3) + unsigned(mul_ln1171_23_reg_2073));
    add_ln1245_24_fu_1456_p2 <= std_logic_vector(unsigned(shl_ln737_22_fu_1449_p3) + unsigned(mul_ln1171_24_reg_2098));
    add_ln1245_25_fu_1479_p2 <= std_logic_vector(unsigned(shl_ln737_23_fu_1471_p3) + unsigned(mul_ln1171_25_reg_2108));
    add_ln1245_26_fu_1521_p2 <= std_logic_vector(unsigned(shl_ln737_24_fu_1514_p3) + unsigned(mul_ln1171_26_reg_2133));
    add_ln1245_27_fu_1544_p2 <= std_logic_vector(unsigned(shl_ln737_25_fu_1536_p3) + unsigned(mul_ln1171_27_reg_2143));
    add_ln1245_28_fu_1566_p2 <= std_logic_vector(unsigned(shl_ln737_26_fu_1559_p3) + unsigned(mul_ln1171_28_reg_2158));
    add_ln1245_29_fu_1589_p2 <= std_logic_vector(unsigned(shl_ln737_27_fu_1581_p3) + unsigned(mul_ln1171_29_reg_2168));
    add_ln1245_30_fu_1611_p2 <= std_logic_vector(unsigned(shl_ln737_28_fu_1604_p3) + unsigned(mul_ln1171_30_reg_2173));
    add_ln1245_31_fu_1634_p2 <= std_logic_vector(unsigned(shl_ln737_29_fu_1626_p3) + unsigned(mul_ln1171_31_reg_2183));
    add_ln1245_fu_1181_p2 <= std_logic_vector(unsigned(shl_ln737_17_fu_1174_p3) + unsigned(mul_ln1171_reg_1953));
    add_ln56_1_fu_512_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten50_load) + unsigned(ap_const_lv7_1));
    add_ln56_fu_521_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_nh) + unsigned(ap_const_lv3_1));
    add_ln57_fu_579_p2 <= std_logic_vector(unsigned(select_ln56_fu_533_p3) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, icmp_ln56_reg_1679)
    begin
        if (((icmp_ln56_reg_1679 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage6;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten50_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten50_fu_150)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten50_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten50_load <= indvar_flatten50_fu_150;
        end if; 
    end process;


    ap_sig_allocacmp_n_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_fu_142, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_n_load <= n_fu_142;
        end if; 
    end process;


    ap_sig_allocacmp_nh_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, nh_1_fu_146)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_nh <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_nh <= nh_1_fu_146;
        end if; 
    end process;

    grp_fu_1649_p0 <= grp_fu_1649_p00(3 - 1 downto 0);
    grp_fu_1649_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln56_1_fu_559_p3),9));
    grp_fu_1649_p1 <= ap_const_lv9_64(7 - 1 downto 0);
    grp_fu_1649_p2 <= grp_fu_1649_p20(5 - 1 downto 0);
    grp_fu_1649_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln56_reg_1683),9));
    grp_fu_830_p_ce <= ap_const_logic_1;
    grp_fu_830_p_din0 <= sext_ln56_fu_725_p1(28 - 1 downto 0);
    grp_fu_830_p_din1 <= sext_ln1171_17_fu_793_p1(28 - 1 downto 0);
    grp_fu_834_p_ce <= ap_const_logic_1;
    grp_fu_834_p_din0 <= sext_ln56_1_fu_729_p1(28 - 1 downto 0);
    grp_fu_834_p_din1 <= sext_ln1171_18_fu_803_p1(28 - 1 downto 0);
    grp_fu_838_p_ce <= ap_const_logic_1;
    grp_fu_838_p_din0 <= sext_ln56_2_fu_813_p1(28 - 1 downto 0);
    grp_fu_838_p_din1 <= sext_ln1171_fu_877_p1(28 - 1 downto 0);
    grp_fu_842_p_ce <= ap_const_logic_1;
    grp_fu_842_p_din0 <= sext_ln56_3_fu_817_p1(28 - 1 downto 0);
    grp_fu_842_p_din1 <= sext_ln1171_19_fu_887_p1(28 - 1 downto 0);
    grp_fu_846_p_ce <= ap_const_logic_1;
    grp_fu_846_p_din0 <= sext_ln56_4_fu_897_p1(28 - 1 downto 0);
    grp_fu_846_p_din1 <= sext_ln1171_20_fu_961_p1(28 - 1 downto 0);
    grp_fu_850_p_ce <= ap_const_logic_1;
    grp_fu_850_p_din0 <= sext_ln56_5_fu_901_p1(28 - 1 downto 0);
    grp_fu_850_p_din1 <= sext_ln1171_21_fu_971_p1(28 - 1 downto 0);
    grp_fu_854_p_ce <= ap_const_logic_1;
    grp_fu_854_p_din0 <= sext_ln56_6_fu_981_p1(28 - 1 downto 0);
    grp_fu_854_p_din1 <= sext_ln1171_22_fu_1090_p1(28 - 1 downto 0);
    grp_fu_858_p_ce <= ap_const_logic_1;
    grp_fu_858_p_din0 <= sext_ln56_7_fu_985_p1(28 - 1 downto 0);
    grp_fu_858_p_din1 <= sext_ln1171_23_fu_1100_p1(28 - 1 downto 0);
    grp_fu_862_p_ce <= ap_const_logic_1;
    grp_fu_862_p_din0 <= sext_ln56_8_fu_1110_p1(28 - 1 downto 0);
    grp_fu_862_p_din1 <= sext_ln1171_24_fu_1219_p1(28 - 1 downto 0);
    grp_fu_866_p_ce <= ap_const_logic_1;
    grp_fu_866_p_din0 <= sext_ln56_9_fu_1114_p1(28 - 1 downto 0);
    grp_fu_866_p_din1 <= sext_ln1171_25_fu_1229_p1(28 - 1 downto 0);
    grp_fu_870_p_ce <= ap_const_logic_1;
    grp_fu_870_p_din0 <= sext_ln56_10_fu_1239_p1(28 - 1 downto 0);
    grp_fu_870_p_din1 <= sext_ln1171_26_fu_1348_p1(28 - 1 downto 0);
    grp_fu_874_p_ce <= ap_const_logic_1;
    grp_fu_874_p_din0 <= sext_ln56_11_fu_1243_p1(28 - 1 downto 0);
    grp_fu_874_p_din1 <= sext_ln1171_27_fu_1358_p1(28 - 1 downto 0);
    grp_fu_878_p_ce <= ap_const_logic_1;
    grp_fu_878_p_din0 <= sext_ln56_12_fu_1368_p1(28 - 1 downto 0);
    grp_fu_878_p_din1 <= sext_ln1171_28_fu_1421_p1(28 - 1 downto 0);
    grp_fu_882_p_ce <= ap_const_logic_1;
    grp_fu_882_p_din0 <= sext_ln56_13_fu_1372_p1(28 - 1 downto 0);
    grp_fu_882_p_din1 <= sext_ln1171_29_fu_1431_p1(28 - 1 downto 0);
    grp_fu_886_p_ce <= ap_const_logic_1;
    grp_fu_886_p_din0 <= sext_ln56_14_fu_1441_p1(28 - 1 downto 0);
    grp_fu_886_p_din1 <= sext_ln1171_30_fu_1494_p1(28 - 1 downto 0);
    grp_fu_890_p_ce <= ap_const_logic_1;
    grp_fu_890_p_din0 <= sext_ln56_15_fu_1445_p1(28 - 1 downto 0);
    grp_fu_890_p_din1 <= sext_ln1171_31_fu_1504_p1(28 - 1 downto 0);
    icmp_ln56_fu_506_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten50_load = ap_const_lv7_4C) else "0";
    icmp_ln57_fu_527_p2 <= "1" when (ap_sig_allocacmp_n_load = ap_const_lv5_13) else "0";

    nodes_features_proj_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1169_5_fu_661_p1, ap_block_pp0_stage2, zext_ln1169_7_fu_720_p1, ap_block_pp0_stage3, zext_ln1169_9_fu_784_p1, ap_block_pp0_stage4, zext_ln1169_11_fu_872_p1, ap_block_pp0_stage5, zext_ln1169_13_fu_956_p1, ap_block_pp0_stage6, zext_ln1169_15_fu_1040_p1, ap_block_pp0_stage7, zext_ln1169_17_fu_1169_p1, ap_block_pp0_stage0, zext_ln1169_19_fu_1298_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_19_fu_1298_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_17_fu_1169_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_15_fu_1040_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_13_fu_956_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_11_fu_872_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_9_fu_784_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_7_fu_720_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            nodes_features_proj_V_address0 <= zext_ln1169_5_fu_661_p1(13 - 1 downto 0);
        else 
            nodes_features_proj_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    nodes_features_proj_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1169_4_fu_642_p1, ap_block_pp0_stage2, zext_ln1169_6_fu_702_p1, ap_block_pp0_stage3, zext_ln1169_8_fu_766_p1, ap_block_pp0_stage4, zext_ln1169_10_fu_854_p1, ap_block_pp0_stage5, zext_ln1169_12_fu_938_p1, ap_block_pp0_stage6, zext_ln1169_14_fu_1022_p1, ap_block_pp0_stage7, zext_ln1169_16_fu_1151_p1, ap_block_pp0_stage0, zext_ln1169_18_fu_1280_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_18_fu_1280_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_16_fu_1151_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_14_fu_1022_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_12_fu_938_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_10_fu_854_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_8_fu_766_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_6_fu_702_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            nodes_features_proj_V_address1 <= zext_ln1169_4_fu_642_p1(13 - 1 downto 0);
        else 
            nodes_features_proj_V_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    nodes_features_proj_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            nodes_features_proj_V_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    nodes_features_proj_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            nodes_features_proj_V_ce1 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1169_10_fu_846_p3 <= (ap_const_lv1_0 & or_ln1169_9_fu_841_p2);
    or_ln1169_11_fu_859_p2 <= (tmp_reg_1729 or ap_const_lv12_7);
    or_ln1169_12_fu_864_p3 <= (ap_const_lv1_0 & or_ln1169_11_fu_859_p2);
    or_ln1169_13_fu_925_p2 <= (tmp_reg_1729 or ap_const_lv12_8);
    or_ln1169_14_fu_930_p3 <= (ap_const_lv1_0 & or_ln1169_13_fu_925_p2);
    or_ln1169_15_fu_943_p2 <= (tmp_reg_1729 or ap_const_lv12_9);
    or_ln1169_16_fu_948_p3 <= (ap_const_lv1_0 & or_ln1169_15_fu_943_p2);
    or_ln1169_17_fu_1009_p2 <= (tmp_reg_1729 or ap_const_lv12_A);
    or_ln1169_18_fu_1014_p3 <= (ap_const_lv1_0 & or_ln1169_17_fu_1009_p2);
    or_ln1169_19_fu_1027_p2 <= (tmp_reg_1729 or ap_const_lv12_B);
    or_ln1169_1_fu_689_p2 <= (tmp_reg_1729 or ap_const_lv12_2);
    or_ln1169_20_fu_1032_p3 <= (ap_const_lv1_0 & or_ln1169_19_fu_1027_p2);
    or_ln1169_21_fu_1138_p2 <= (tmp_reg_1729 or ap_const_lv12_C);
    or_ln1169_22_fu_1143_p3 <= (ap_const_lv1_0 & or_ln1169_21_fu_1138_p2);
    or_ln1169_23_fu_1156_p2 <= (tmp_reg_1729 or ap_const_lv12_D);
    or_ln1169_24_fu_1161_p3 <= (ap_const_lv1_0 & or_ln1169_23_fu_1156_p2);
    or_ln1169_25_fu_1267_p2 <= (tmp_reg_1729 or ap_const_lv12_E);
    or_ln1169_26_fu_1272_p3 <= (ap_const_lv1_0 & or_ln1169_25_fu_1267_p2);
    or_ln1169_27_fu_1285_p2 <= (tmp_reg_1729 or ap_const_lv12_F);
    or_ln1169_28_fu_1290_p3 <= (ap_const_lv1_0 & or_ln1169_27_fu_1285_p2);
    or_ln1169_2_fu_694_p3 <= (ap_const_lv1_0 & or_ln1169_1_fu_689_p2);
    or_ln1169_3_fu_707_p2 <= (tmp_reg_1729 or ap_const_lv12_3);
    or_ln1169_4_fu_712_p3 <= (ap_const_lv1_0 & or_ln1169_3_fu_707_p2);
    or_ln1169_5_fu_753_p2 <= (tmp_reg_1729 or ap_const_lv12_4);
    or_ln1169_6_fu_758_p3 <= (ap_const_lv1_0 & or_ln1169_5_fu_753_p2);
    or_ln1169_7_fu_771_p2 <= (tmp_reg_1729 or ap_const_lv12_5);
    or_ln1169_8_fu_776_p3 <= (ap_const_lv1_0 & or_ln1169_7_fu_771_p2);
    or_ln1169_9_fu_841_p2 <= (tmp_reg_1729 or ap_const_lv12_6);
    or_ln1169_fu_647_p2 <= (tmp_fu_634_p3 or ap_const_lv12_1);
    or_ln1169_s_fu_653_p3 <= (ap_const_lv1_0 & or_ln1169_fu_647_p2);
    or_ln56_10_fu_999_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_B);
    or_ln56_11_fu_1118_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_C);
    or_ln56_12_fu_1128_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_D);
    or_ln56_13_fu_1247_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_E);
    or_ln56_14_fu_1257_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_F);
    or_ln56_1_fu_666_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_2);
    or_ln56_2_fu_676_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_3);
    or_ln56_3_fu_733_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_4);
    or_ln56_4_fu_743_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_5);
    or_ln56_5_fu_821_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_6);
    or_ln56_6_fu_831_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_7);
    or_ln56_7_fu_905_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_8);
    or_ln56_8_fu_915_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_9);
    or_ln56_9_fu_989_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_A);
    or_ln56_fu_607_p2 <= (select_ln56_2_reg_1699 or ap_const_lv9_1);
    p_cast2_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1649_p3),64));
    scores_target_V_address0 <= p_cast2_fu_789_p1(9 - 1 downto 0);
    scores_target_V_address1 <= scores_target_V_addr_1_reg_1812_pp0_iter1_reg;

    scores_target_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            scores_target_V_ce0 <= ap_const_logic_1;
        else 
            scores_target_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    scores_target_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            scores_target_V_ce1 <= ap_const_logic_1;
        else 
            scores_target_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    scores_target_V_d1 <= trunc_ln717_1_reg_2188;

    scores_target_V_we1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            scores_target_V_we1 <= ap_const_logic_1;
        else 
            scores_target_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    scoring_fn_target_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1171_6_fu_612_p1, ap_block_pp0_stage2, zext_ln1171_8_fu_681_p1, ap_block_pp0_stage3, zext_ln1171_10_fu_748_p1, ap_block_pp0_stage4, zext_ln1171_12_fu_836_p1, ap_block_pp0_stage5, zext_ln1171_14_fu_920_p1, ap_block_pp0_stage6, zext_ln1171_16_fu_1004_p1, ap_block_pp0_stage7, zext_ln1171_18_fu_1133_p1, ap_block_pp0_stage0, zext_ln1171_20_fu_1262_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_20_fu_1262_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_18_fu_1133_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_16_fu_1004_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_14_fu_920_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_12_fu_836_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_10_fu_748_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_8_fu_681_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            scoring_fn_target_V_address0 <= zext_ln1171_6_fu_612_p1(9 - 1 downto 0);
        else 
            scoring_fn_target_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    scoring_fn_target_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, zext_ln1171_5_fu_603_p1, ap_block_pp0_stage1, zext_ln1171_7_fu_671_p1, ap_block_pp0_stage2, zext_ln1171_9_fu_738_p1, ap_block_pp0_stage3, zext_ln1171_11_fu_826_p1, ap_block_pp0_stage4, zext_ln1171_13_fu_910_p1, ap_block_pp0_stage5, zext_ln1171_15_fu_994_p1, ap_block_pp0_stage6, zext_ln1171_17_fu_1123_p1, ap_block_pp0_stage7, zext_ln1171_19_fu_1252_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_19_fu_1252_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_17_fu_1123_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_15_fu_994_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_13_fu_910_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_11_fu_826_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_9_fu_738_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_7_fu_671_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            scoring_fn_target_V_address1 <= zext_ln1171_5_fu_603_p1(9 - 1 downto 0);
        else 
            scoring_fn_target_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    scoring_fn_target_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            scoring_fn_target_V_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    scoring_fn_target_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            scoring_fn_target_V_ce1 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln56_1_cast1_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln56_1_reg_1689),8));
    select_ln56_1_fu_559_p3 <= 
        add_ln56_fu_521_p2 when (icmp_ln57_fu_527_p2(0) = '1') else 
        ap_sig_allocacmp_nh;
    select_ln56_2_fu_571_p3 <= 
        tmp_72_cast_fu_551_p3 when (icmp_ln57_fu_527_p2(0) = '1') else 
        tmp_70_cast_fu_498_p3;
    select_ln56_fu_533_p3 <= 
        ap_const_lv5_0 when (icmp_ln57_fu_527_p2(0) = '1') else 
        ap_sig_allocacmp_n_load;
        sext_ln1171_17_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_459),46));

        sext_ln1171_18_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_463),46));

        sext_ln1171_19_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_463),46));

        sext_ln1171_20_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_459),46));

        sext_ln1171_21_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_463),46));

        sext_ln1171_22_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_459),46));

        sext_ln1171_23_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_463),46));

        sext_ln1171_24_fu_1219_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_459),46));

        sext_ln1171_25_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_463),46));

        sext_ln1171_26_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_459),46));

        sext_ln1171_27_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_463),46));

        sext_ln1171_28_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_459),46));

        sext_ln1171_29_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_463),46));

        sext_ln1171_30_fu_1494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_459),46));

        sext_ln1171_31_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_463),46));

        sext_ln1171_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_459),46));

        sext_ln56_10_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_451),46));

        sext_ln56_11_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_455),46));

        sext_ln56_12_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_451),46));

        sext_ln56_13_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_455),46));

        sext_ln56_14_fu_1441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_451),46));

        sext_ln56_15_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_455),46));

        sext_ln56_1_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_455),46));

        sext_ln56_2_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_451),46));

        sext_ln56_3_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_455),46));

        sext_ln56_4_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_451),46));

        sext_ln56_5_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_455),46));

        sext_ln56_6_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_451),46));

        sext_ln56_7_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_455),46));

        sext_ln56_8_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_451),46));

        sext_ln56_9_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_455),46));

        sext_ln56_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_451),46));

    shl_ln737_15_fu_1045_p3 <= (scores_target_V_load_reg_1858 & ap_const_lv18_0);
    shl_ln737_16_fu_1067_p3 <= (tmp_17_fu_1057_p4 & ap_const_lv18_0);
    shl_ln737_17_fu_1174_p3 <= (tmp_18_reg_1958 & ap_const_lv18_0);
    shl_ln737_18_fu_1196_p3 <= (tmp_19_fu_1186_p4 & ap_const_lv18_0);
    shl_ln737_19_fu_1325_p3 <= (tmp_21_fu_1315_p4 & ap_const_lv18_0);
    shl_ln737_20_fu_1376_p3 <= (tmp_22_reg_2068 & ap_const_lv18_0);
    shl_ln737_21_fu_1398_p3 <= (tmp_23_fu_1388_p4 & ap_const_lv18_0);
    shl_ln737_22_fu_1449_p3 <= (tmp_24_reg_2103 & ap_const_lv18_0);
    shl_ln737_23_fu_1471_p3 <= (tmp_25_fu_1461_p4 & ap_const_lv18_0);
    shl_ln737_24_fu_1514_p3 <= (tmp_26_reg_2138 & ap_const_lv18_0);
    shl_ln737_25_fu_1536_p3 <= (tmp_27_fu_1526_p4 & ap_const_lv18_0);
    shl_ln737_26_fu_1559_p3 <= (tmp_28_reg_2163 & ap_const_lv18_0);
    shl_ln737_27_fu_1581_p3 <= (tmp_29_fu_1571_p4 & ap_const_lv18_0);
    shl_ln737_28_fu_1604_p3 <= (tmp_30_reg_2178 & ap_const_lv18_0);
    shl_ln737_29_fu_1626_p3 <= (tmp_31_fu_1616_p4 & ap_const_lv18_0);
    shl_ln737_s_fu_1303_p3 <= (tmp_20_reg_2013 & ap_const_lv18_0);
    tmp_17_fu_1057_p4 <= add_ln1245_17_fu_1052_p2(45 downto 18);
    tmp_19_fu_1186_p4 <= add_ln1245_fu_1181_p2(45 downto 18);
    tmp_21_fu_1315_p4 <= add_ln1245_20_fu_1310_p2(45 downto 18);
    tmp_23_fu_1388_p4 <= add_ln1245_22_fu_1383_p2(45 downto 18);
    tmp_25_fu_1461_p4 <= add_ln1245_24_fu_1456_p2(45 downto 18);
    tmp_27_fu_1526_p4 <= add_ln1245_26_fu_1521_p2(45 downto 18);
    tmp_29_fu_1571_p4 <= add_ln1245_28_fu_1566_p2(45 downto 18);
    tmp_31_fu_1616_p4 <= add_ln1245_30_fu_1611_p2(45 downto 18);
    tmp_70_cast_fu_498_p3 <= (add_ln1171_fu_492_p2 & ap_const_lv4_0);
    tmp_72_cast_fu_551_p3 <= (add_ln1171_1_fu_545_p2 & ap_const_lv4_0);
    tmp_fu_634_p3 <= (add_ln1169_fu_628_p2 & ap_const_lv4_0);
    tmp_s_fu_617_p3 <= (select_ln56_reg_1683 & ap_const_lv2_0);
    zext_ln1169_10_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_10_fu_846_p3),64));
    zext_ln1169_11_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_12_fu_864_p3),64));
    zext_ln1169_12_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_14_fu_930_p3),64));
    zext_ln1169_13_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_16_fu_948_p3),64));
    zext_ln1169_14_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_18_fu_1014_p3),64));
    zext_ln1169_15_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_20_fu_1032_p3),64));
    zext_ln1169_16_fu_1151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_22_fu_1143_p3),64));
    zext_ln1169_17_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_24_fu_1161_p3),64));
    zext_ln1169_18_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_26_fu_1272_p3),64));
    zext_ln1169_19_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_28_fu_1290_p3),64));
    zext_ln1169_3_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_617_p3),8));
    zext_ln1169_4_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_634_p3),64));
    zext_ln1169_5_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_s_fu_653_p3),64));
    zext_ln1169_6_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_2_fu_694_p3),64));
    zext_ln1169_7_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_4_fu_712_p3),64));
    zext_ln1169_8_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_6_fu_758_p3),64));
    zext_ln1169_9_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1169_8_fu_776_p3),64));
    zext_ln1171_10_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_4_fu_743_p2),64));
    zext_ln1171_11_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_5_fu_821_p2),64));
    zext_ln1171_12_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_6_fu_831_p2),64));
    zext_ln1171_13_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_7_fu_905_p2),64));
    zext_ln1171_14_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_8_fu_915_p2),64));
    zext_ln1171_15_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_9_fu_989_p2),64));
    zext_ln1171_16_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_10_fu_999_p2),64));
    zext_ln1171_17_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_11_fu_1118_p2),64));
    zext_ln1171_18_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_12_fu_1128_p2),64));
    zext_ln1171_19_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_13_fu_1247_p2),64));
    zext_ln1171_20_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_14_fu_1257_p2),64));
    zext_ln1171_4_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln56_fu_521_p2),5));
    zext_ln1171_5_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln56_2_reg_1699),64));
    zext_ln1171_6_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_fu_607_p2),64));
    zext_ln1171_7_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_1_fu_666_p2),64));
    zext_ln1171_8_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_2_fu_676_p2),64));
    zext_ln1171_9_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln56_3_fu_733_p2),64));
    zext_ln1171_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_nh),5));
end behav;
