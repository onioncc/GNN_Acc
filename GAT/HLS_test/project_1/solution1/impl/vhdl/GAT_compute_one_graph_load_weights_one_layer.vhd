-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_load_weights_one_layer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer : IN STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWVALID : OUT STD_LOGIC;
    m_axi_mem_AWREADY : IN STD_LOGIC;
    m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_WVALID : OUT STD_LOGIC;
    m_axi_mem_WREADY : IN STD_LOGIC;
    m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_WLAST : OUT STD_LOGIC;
    m_axi_mem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_ARVALID : OUT STD_LOGIC;
    m_axi_mem_ARREADY : IN STD_LOGIC;
    m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_RVALID : IN STD_LOGIC;
    m_axi_mem_RREADY : OUT STD_LOGIC;
    m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mem_RLAST : IN STD_LOGIC;
    m_axi_mem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_BVALID : IN STD_LOGIC;
    m_axi_mem_BREADY : OUT STD_LOGIC;
    m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    gat_net_scoring_fn_target_fixed : IN STD_LOGIC_VECTOR (63 downto 0);
    gat_net_scoring_fn_source_fixed : IN STD_LOGIC_VECTOR (63 downto 0);
    gat_net_linear_proj_weight_fixed : IN STD_LOGIC_VECTOR (63 downto 0);
    gat_net_skip_proj_weight_fixed : IN STD_LOGIC_VECTOR (63 downto 0);
    scoring_fn_target_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scoring_fn_target_V_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_we0 : OUT STD_LOGIC;
    scoring_fn_target_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_source_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scoring_fn_source_V_ce0 : OUT STD_LOGIC;
    scoring_fn_source_V_we0 : OUT STD_LOGIC;
    scoring_fn_source_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    linear_proj_weight_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    linear_proj_weight_V_ce0 : OUT STD_LOGIC;
    linear_proj_weight_V_we0 : OUT STD_LOGIC;
    linear_proj_weight_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
    skip_proj_weight_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    skip_proj_weight_V_ce0 : OUT STD_LOGIC;
    skip_proj_weight_V_we0 : OUT STD_LOGIC;
    skip_proj_weight_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0) );
end;


architecture behav of GAT_compute_one_graph_load_weights_one_layer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal mem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_fu_208_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_472 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_216_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_477 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln229_fu_252_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln229_reg_482 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln229_1_fu_272_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln229_1_reg_487 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_3_cast_fu_293_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_cast_reg_492 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln229_2_fu_307_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln229_2_reg_500 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_317_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_505 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln229_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_reg_510 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln236_1_reg_515 : STD_LOGIC_VECTOR (61 downto 0);
    signal scoring_fn_source_V_addr_reg_520 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal scoring_fn_target_V_addr_reg_525 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln230_fu_393_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln230_reg_533 : STD_LOGIC_VECTOR (4 downto 0);
    signal mem_addr_reg_538 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln230_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_addr_1_reg_544 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln231_fu_442_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln231_reg_550 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln232_fu_446_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln232_reg_555 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_idle : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_ready : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWVALID : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WVALID : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WLAST : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARVALID : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_RREADY : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_BREADY : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_ce0 : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_we0 : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_ce0 : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_we0 : STD_LOGIC;
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal j_reg_184 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal zext_ln232_2_fu_377_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln231_fu_413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln232_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_102 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_224_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln229_fu_232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln229_fu_236_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_242_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln229_1_fu_256_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln229_1_fu_262_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln232_fu_284_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln232_1_fu_288_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_78_fu_313_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln1_fu_325_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln236_fu_332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln236_fu_336_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln236_1_fu_352_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln232_1_fu_368_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln232_2_fu_372_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln230_fu_383_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln231_fu_399_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln231_fu_404_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln231_1_fu_408_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln232_fu_423_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_mem_AWVALID : OUT STD_LOGIC;
        m_axi_mem_AWREADY : IN STD_LOGIC;
        m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WVALID : OUT STD_LOGIC;
        m_axi_mem_WREADY : IN STD_LOGIC;
        m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_WLAST : OUT STD_LOGIC;
        m_axi_mem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARVALID : OUT STD_LOGIC;
        m_axi_mem_ARREADY : IN STD_LOGIC;
        m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RVALID : IN STD_LOGIC;
        m_axi_mem_RREADY : OUT STD_LOGIC;
        m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_RLAST : IN STD_LOGIC;
        m_axi_mem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BVALID : IN STD_LOGIC;
        m_axi_mem_BREADY : OUT STD_LOGIC;
        m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln238_1 : IN STD_LOGIC_VECTOR (8 downto 0);
        sext_ln236 : IN STD_LOGIC_VECTOR (61 downto 0);
        sext_ln236_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        linear_proj_weight_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        linear_proj_weight_V_ce0 : OUT STD_LOGIC;
        linear_proj_weight_V_we0 : OUT STD_LOGIC;
        linear_proj_weight_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        skip_proj_weight_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        skip_proj_weight_V_ce0 : OUT STD_LOGIC;
        skip_proj_weight_V_we0 : OUT STD_LOGIC;
        skip_proj_weight_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;



begin
    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195 : component GAT_compute_one_graph_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start,
        ap_done => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done,
        ap_idle => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_idle,
        ap_ready => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_ready,
        m_axi_mem_AWVALID => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWVALID,
        m_axi_mem_AWREADY => ap_const_logic_0,
        m_axi_mem_AWADDR => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWADDR,
        m_axi_mem_AWID => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWID,
        m_axi_mem_AWLEN => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWPROT,
        m_axi_mem_AWQOS => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWQOS,
        m_axi_mem_AWREGION => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWREGION,
        m_axi_mem_AWUSER => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_AWUSER,
        m_axi_mem_WVALID => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WVALID,
        m_axi_mem_WREADY => ap_const_logic_0,
        m_axi_mem_WDATA => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WDATA,
        m_axi_mem_WSTRB => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WSTRB,
        m_axi_mem_WLAST => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WLAST,
        m_axi_mem_WID => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WID,
        m_axi_mem_WUSER => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_WUSER,
        m_axi_mem_ARVALID => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARVALID,
        m_axi_mem_ARREADY => m_axi_mem_ARREADY,
        m_axi_mem_ARADDR => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARADDR,
        m_axi_mem_ARID => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARID,
        m_axi_mem_ARLEN => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARPROT,
        m_axi_mem_ARQOS => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARQOS,
        m_axi_mem_ARREGION => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARREGION,
        m_axi_mem_ARUSER => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARUSER,
        m_axi_mem_RVALID => m_axi_mem_RVALID,
        m_axi_mem_RREADY => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_RREADY,
        m_axi_mem_RDATA => m_axi_mem_RDATA,
        m_axi_mem_RLAST => m_axi_mem_RLAST,
        m_axi_mem_RID => m_axi_mem_RID,
        m_axi_mem_RUSER => m_axi_mem_RUSER,
        m_axi_mem_RRESP => m_axi_mem_RRESP,
        m_axi_mem_BVALID => ap_const_logic_0,
        m_axi_mem_BREADY => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_BREADY,
        m_axi_mem_BRESP => ap_const_lv2_0,
        m_axi_mem_BID => ap_const_lv1_0,
        m_axi_mem_BUSER => ap_const_lv1_0,
        zext_ln238_1 => tmp_reg_472,
        sext_ln236 => trunc_ln1_reg_510,
        sext_ln236_1 => trunc_ln236_1_reg_515,
        linear_proj_weight_V_address0 => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_address0,
        linear_proj_weight_V_ce0 => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_ce0,
        linear_proj_weight_V_we0 => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_we0,
        linear_proj_weight_V_d0 => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_d0,
        skip_proj_weight_V_address0 => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_address0,
        skip_proj_weight_V_ce0 => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_ce0,
        skip_proj_weight_V_we0 => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_we0,
        skip_proj_weight_V_d0 => grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1))) then 
                    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_ready = ap_const_logic_1)) then 
                    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_102 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln230_fu_387_p2 = ap_const_lv1_1))) then 
                i_fu_102 <= add_ln229_2_reg_500;
            end if; 
        end if;
    end process;

    j_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_0))) then 
                j_reg_184 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                j_reg_184 <= add_ln230_reg_533;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln229_2_reg_500 <= add_ln229_2_fu_307_p2;
                    tmp_3_cast_reg_492(8 downto 4) <= tmp_3_cast_fu_293_p3(8 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln230_reg_533 <= add_ln230_fu_393_p2;
                scoring_fn_source_V_addr_reg_520 <= zext_ln232_2_fu_377_p1(9 - 1 downto 0);
                scoring_fn_target_V_addr_reg_525 <= zext_ln232_2_fu_377_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln230_fu_387_p2 = ap_const_lv1_0))) then
                mem_addr_1_reg_544 <= sext_ln232_fu_428_p1;
                mem_addr_reg_538 <= sext_ln231_fu_413_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                sext_ln229_1_reg_487 <= sext_ln229_1_fu_272_p1;
                sext_ln229_reg_482 <= sext_ln229_fu_252_p1;
                    tmp_1_reg_477(4 downto 2) <= tmp_1_fu_216_p3(4 downto 2);
                    tmp_reg_472(8 downto 6) <= tmp_fu_208_p3(8 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_0))) then
                    tmp_5_reg_505(5 downto 4) <= tmp_5_fu_317_p3(5 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1))) then
                trunc_ln1_reg_510 <= add_ln236_fu_336_p2(63 downto 2);
                trunc_ln236_1_reg_515 <= add_ln236_1_fu_352_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                trunc_ln231_reg_550 <= trunc_ln231_fu_442_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                trunc_ln232_reg_555 <= trunc_ln232_fu_446_p1;
            end if;
        end if;
    end process;
    tmp_reg_472(5 downto 0) <= "000000";
    tmp_1_reg_477(1 downto 0) <= "00";
    tmp_3_cast_reg_492(3 downto 0) <= "0000";
    tmp_5_reg_505(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_mem_ARREADY, m_axi_mem_RVALID, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state2, icmp_ln229_fu_301_p2, ap_CS_fsm_state3, icmp_ln230_fu_387_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done, ap_CS_fsm_state14)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln230_fu_387_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((m_axi_mem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((m_axi_mem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((m_axi_mem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((m_axi_mem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state14 => 
                if (((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln229_1_fu_256_p2 <= std_logic_vector(unsigned(zext_ln229_fu_232_p1) + unsigned(gat_net_scoring_fn_source_fixed));
    add_ln229_2_fu_307_p2 <= std_logic_vector(unsigned(i_fu_102) + unsigned(ap_const_lv3_1));
    add_ln229_fu_236_p2 <= std_logic_vector(unsigned(zext_ln229_fu_232_p1) + unsigned(gat_net_scoring_fn_target_fixed));
    add_ln230_fu_393_p2 <= std_logic_vector(unsigned(j_reg_184) + unsigned(ap_const_lv5_1));
    add_ln231_1_fu_408_p2 <= std_logic_vector(unsigned(zext_ln231_fu_404_p1) + unsigned(sext_ln229_reg_482));
    add_ln231_fu_399_p2 <= std_logic_vector(unsigned(zext_ln230_fu_383_p1) + unsigned(tmp_5_reg_505));
    add_ln232_1_fu_288_p2 <= std_logic_vector(unsigned(tmp_1_reg_477) + unsigned(zext_ln232_fu_284_p1));
    add_ln232_2_fu_372_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_492) + unsigned(zext_ln232_1_fu_368_p1));
    add_ln232_fu_423_p2 <= std_logic_vector(unsigned(zext_ln231_fu_404_p1) + unsigned(sext_ln229_1_reg_487));
    add_ln236_1_fu_352_p2 <= std_logic_vector(unsigned(zext_ln236_fu_332_p1) + unsigned(gat_net_skip_proj_weight_fixed));
    add_ln236_fu_336_p2 <= std_logic_vector(unsigned(zext_ln236_fu_332_p1) + unsigned(gat_net_linear_proj_weight_fixed));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(m_axi_mem_RVALID)
    begin
        if ((m_axi_mem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(m_axi_mem_RVALID)
    begin
        if ((m_axi_mem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done)
    begin
        if ((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_mem_ARREADY)
    begin
        if ((m_axi_mem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(m_axi_mem_ARREADY)
    begin
        if ((m_axi_mem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done, ap_CS_fsm_state14)
    begin
        if ((((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done, ap_CS_fsm_state14)
    begin
        if (((grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_78_fu_313_p1 <= i_fu_102(2 - 1 downto 0);
    grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_ap_start_reg;
    icmp_ln229_fu_301_p2 <= "1" when (i_fu_102 = ap_const_lv3_4) else "0";
    icmp_ln230_fu_387_p2 <= "1" when (j_reg_184 = ap_const_lv5_10) else "0";
    linear_proj_weight_V_address0 <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_address0;
    linear_proj_weight_V_ce0 <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_ce0;
    linear_proj_weight_V_d0 <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_d0;
    linear_proj_weight_V_we0 <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_linear_proj_weight_V_we0;

    m_axi_mem_ARADDR_assign_proc : process(m_axi_mem_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2, icmp_ln229_fu_301_p2, mem_addr_reg_538, mem_addr_1_reg_544, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARADDR, ap_CS_fsm_state14)
    begin
        if (((m_axi_mem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_mem_ARADDR <= mem_addr_1_reg_544;
        elsif (((m_axi_mem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_mem_ARADDR <= mem_addr_reg_538;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARADDR <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARADDR;
        else 
            m_axi_mem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_mem_ARBURST_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARBURST, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARBURST <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARBURST;
        else 
            m_axi_mem_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_mem_ARCACHE_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARCACHE, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARCACHE <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARCACHE;
        else 
            m_axi_mem_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_mem_ARID_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARID, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARID <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARID;
        else 
            m_axi_mem_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_mem_ARLEN_assign_proc : process(m_axi_mem_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLEN, ap_CS_fsm_state14)
    begin
        if ((((m_axi_mem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((m_axi_mem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            m_axi_mem_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARLEN <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLEN;
        else 
            m_axi_mem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_mem_ARLOCK_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLOCK, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARLOCK <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARLOCK;
        else 
            m_axi_mem_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_mem_ARPROT_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARPROT, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARPROT <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARPROT;
        else 
            m_axi_mem_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_mem_ARQOS_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARQOS, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARQOS <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARQOS;
        else 
            m_axi_mem_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_mem_ARREGION_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARREGION, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARREGION <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARREGION;
        else 
            m_axi_mem_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_mem_ARSIZE_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARSIZE, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARSIZE <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARSIZE;
        else 
            m_axi_mem_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_mem_ARUSER_assign_proc : process(ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARUSER, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARUSER <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARUSER;
        else 
            m_axi_mem_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_mem_ARVALID_assign_proc : process(m_axi_mem_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARVALID, ap_CS_fsm_state14)
    begin
        if ((((m_axi_mem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((m_axi_mem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            m_axi_mem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_ARVALID <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_ARVALID;
        else 
            m_axi_mem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_mem_AWADDR <= ap_const_lv64_0;
    m_axi_mem_AWBURST <= ap_const_lv2_0;
    m_axi_mem_AWCACHE <= ap_const_lv4_0;
    m_axi_mem_AWID <= ap_const_lv1_0;
    m_axi_mem_AWLEN <= ap_const_lv32_0;
    m_axi_mem_AWLOCK <= ap_const_lv2_0;
    m_axi_mem_AWPROT <= ap_const_lv3_0;
    m_axi_mem_AWQOS <= ap_const_lv4_0;
    m_axi_mem_AWREGION <= ap_const_lv4_0;
    m_axi_mem_AWSIZE <= ap_const_lv3_0;
    m_axi_mem_AWUSER <= ap_const_lv1_0;
    m_axi_mem_AWVALID <= ap_const_logic_0;
    m_axi_mem_BREADY <= ap_const_logic_0;

    m_axi_mem_RREADY_assign_proc : process(m_axi_mem_RVALID, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state2, icmp_ln229_fu_301_p2, grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_RREADY, ap_CS_fsm_state14)
    begin
        if ((((m_axi_mem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((m_axi_mem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_mem_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln229_fu_301_p2 = ap_const_lv1_1)))) then 
            m_axi_mem_RREADY <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_m_axi_mem_RREADY;
        else 
            m_axi_mem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_mem_WDATA <= ap_const_lv32_0;
    m_axi_mem_WID <= ap_const_lv1_0;
    m_axi_mem_WLAST <= ap_const_logic_0;
    m_axi_mem_WSTRB <= ap_const_lv4_0;
    m_axi_mem_WUSER <= ap_const_lv1_0;
    m_axi_mem_WVALID <= ap_const_logic_0;

    mem_blk_n_AR_assign_proc : process(m_axi_mem_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            mem_blk_n_AR <= m_axi_mem_ARREADY;
        else 
            mem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    mem_blk_n_R_assign_proc : process(m_axi_mem_RVALID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            mem_blk_n_R <= m_axi_mem_RVALID;
        else 
            mem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    scoring_fn_source_V_address0 <= scoring_fn_source_V_addr_reg_520;

    scoring_fn_source_V_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            scoring_fn_source_V_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_source_V_d0 <= trunc_ln232_reg_555;

    scoring_fn_source_V_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            scoring_fn_source_V_we0 <= ap_const_logic_1;
        else 
            scoring_fn_source_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_address0 <= scoring_fn_target_V_addr_reg_525;

    scoring_fn_target_V_ce0_assign_proc : process(m_axi_mem_RVALID, ap_CS_fsm_state12)
    begin
        if (((m_axi_mem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            scoring_fn_target_V_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_d0 <= trunc_ln231_reg_550;

    scoring_fn_target_V_we0_assign_proc : process(m_axi_mem_RVALID, ap_CS_fsm_state12)
    begin
        if (((m_axi_mem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            scoring_fn_target_V_we0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln229_1_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln229_1_fu_262_p4),63));

        sext_ln229_fu_252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_242_p4),63));

        sext_ln231_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln231_1_fu_408_p2),64));

        sext_ln232_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln232_fu_423_p2),64));

    shl_ln1_fu_325_p3 <= (layer & ap_const_lv14_0);
    shl_ln_fu_224_p3 <= (layer & ap_const_lv8_0);
    skip_proj_weight_V_address0 <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_address0;
    skip_proj_weight_V_ce0 <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_ce0;
    skip_proj_weight_V_d0 <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_d0;
    skip_proj_weight_V_we0 <= grp_load_weights_one_layer_Pipeline_VITIS_LOOP_236_3_VITIS_LOOP_237_4_fu_195_skip_proj_weight_V_we0;
    tmp_1_fu_216_p3 <= (layer & ap_const_lv2_0);
    tmp_3_cast_fu_293_p3 <= (add_ln232_1_fu_288_p2 & ap_const_lv4_0);
    tmp_5_fu_317_p3 <= (empty_78_fu_313_p1 & ap_const_lv4_0);
    tmp_fu_208_p3 <= (layer & ap_const_lv6_0);
    trunc_ln229_1_fu_262_p4 <= add_ln229_1_fu_256_p2(63 downto 2);
    trunc_ln231_fu_442_p1 <= m_axi_mem_RDATA(28 - 1 downto 0);
    trunc_ln232_fu_446_p1 <= m_axi_mem_RDATA(28 - 1 downto 0);
    trunc_ln_fu_242_p4 <= add_ln229_fu_236_p2(63 downto 2);
    zext_ln229_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_224_p3),64));
    zext_ln230_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_184),6));
    zext_ln231_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln231_fu_399_p2),63));
    zext_ln232_1_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_184),9));
    zext_ln232_2_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln232_2_fu_372_p2),64));
    zext_ln232_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_102),5));
    zext_ln236_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_325_p3),64));
end behav;
