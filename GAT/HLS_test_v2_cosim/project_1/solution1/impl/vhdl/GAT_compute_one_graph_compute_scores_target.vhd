-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_compute_scores_target is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer : IN STD_LOGIC_VECTOR (2 downto 0);
    scoring_fn_target_V_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_0_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_0_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_1_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_1_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_2_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_2_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_3_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_3_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_4_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_4_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_5_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_5_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_6_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_6_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_7_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_7_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_8_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_8_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_9_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_9_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_10_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_10_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_11_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_11_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_12_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_12_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_13_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_13_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_14_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_14_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_15_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_15_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_0_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_0_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_1_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_1_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_2_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_2_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_3_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_3_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_4_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_4_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_4_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_5_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_5_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_5_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_6_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_6_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_6_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_7_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_7_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_7_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_8_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_8_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_8_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_9_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_9_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_9_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_10_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_10_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_10_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_11_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_11_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_11_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_12_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_12_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_12_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_13_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_13_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_13_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_14_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_14_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_14_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_15_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    nodes_features_proj_V_15_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_15_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scores_target_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    scores_target_V_ce1 : OUT STD_LOGIC;
    scores_target_V_we1 : OUT STD_LOGIC;
    scores_target_V_d1 : OUT STD_LOGIC_VECTOR (27 downto 0) );
end;


architecture behav of GAT_compute_one_graph_compute_scores_target is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv9_64 : STD_LOGIC_VECTOR (8 downto 0) := "001100100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln74_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln74_fu_641_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln74_reg_1310 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln74_reg_1310_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln74_reg_1310_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln74_reg_1310_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln74_reg_1310_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln74_reg_1310_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln74_reg_1310_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln74_1_fu_649_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln74_1_reg_1315 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln74_1_reg_1315_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln74_1_reg_1315_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln74_1_reg_1315_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln74_1_reg_1315_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1171_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1320 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1320_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1320_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1320_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1320_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_4_fu_696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_4_reg_1352 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_4_reg_1352_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_4_reg_1352_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_4_reg_1352_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_4_reg_1352_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal scoring_fn_target_V_0_load_reg_1384 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_1_load_reg_1389 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_2_load_reg_1394 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_0_load_reg_1429 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_1_load_reg_1434 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_2_load_reg_1439 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_3_load_reg_1444 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_4_load_reg_1449 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_5_load_reg_1454 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_64_fu_745_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_64_reg_1489 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_63_reg_1494 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_65_fu_764_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_65_reg_1499 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_3_load_reg_1504 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_4_load_reg_1509 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_5_load_reg_1514 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_6_load_reg_1519 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_7_load_reg_1524 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_8_load_reg_1529 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_66_fu_817_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_66_reg_1564 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_65_reg_1569 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_67_fu_836_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_67_reg_1574 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_68_fu_845_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_68_reg_1579 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_6_load_reg_1584 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_7_load_reg_1589 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_8_load_reg_1594 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_9_load_reg_1599 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_10_load_reg_1604 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_11_load_reg_1609 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_69_fu_921_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_69_reg_1644 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_68_reg_1649 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_70_fu_940_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_70_reg_1654 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_71_fu_949_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_71_reg_1659 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_9_load_reg_1664 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_10_load_reg_1669 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_11_load_reg_1674 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_12_load_reg_1684 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_13_load_reg_1689 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_14_load_reg_1694 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_72_fu_1028_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_72_reg_1709 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_71_reg_1714 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_73_fu_1047_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_73_reg_1719 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_74_fu_1056_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_74_reg_1724 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_12_load_reg_1729 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_13_load_reg_1734 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_14_load_reg_1739 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_15_load_reg_1744 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_75_fu_1132_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_75_reg_1749 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_74_reg_1754 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_76_fu_1151_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_76_reg_1759 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_77_fu_1160_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_77_reg_1764 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_15_load_reg_1769 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_78_fu_1233_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_78_reg_1779 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_77_reg_1784 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln80_1_fu_1249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_134 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_load : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln75_fu_703_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal nh_fu_138 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_nh_load : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_fu_142 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln74_1_fu_617_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln75_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln74_fu_629_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_585_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln74_1_fu_661_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln74_2_fu_665_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_678_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1169_3_fu_686_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln80_fu_657_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1169_fu_690_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1171_fu_736_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln_fu_779_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_fu_786_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_64_fu_791_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_s_fu_801_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_64_fu_809_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_63_fu_860_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_65_fu_867_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_66_fu_872_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_64_fu_882_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_66_fu_890_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_67_fu_895_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_65_fu_905_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_67_fu_913_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_66_fu_967_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_68_fu_974_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_69_fu_979_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_67_fu_989_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_69_fu_997_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_70_fu_1002_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_68_fu_1012_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_70_fu_1020_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_69_fu_1071_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_71_fu_1078_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_72_fu_1083_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_70_fu_1093_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_72_fu_1101_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_73_fu_1106_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_71_fu_1116_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_73_fu_1124_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_72_fu_1172_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_74_fu_1179_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_75_fu_1184_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_73_fu_1194_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_75_fu_1202_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_76_fu_1207_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_74_fu_1217_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_76_fu_1225_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1276_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln737_75_fu_1253_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_77_fu_1260_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1276_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1276_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1276_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1276_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1276_p20 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_mul_28s_28s_46_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (27 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component GAT_compute_one_graph_mac_muladd_3ns_7ns_5ns_9_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_28s_28s_46_1_1_U947 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_0_load_reg_1384,
        din1 => nodes_features_proj_V_0_load_reg_1429,
        dout => mul_ln1171_fu_736_p2);

    mul_28s_28s_46_1_1_U948 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_1_load_reg_1389,
        din1 => nodes_features_proj_V_1_load_reg_1434,
        dout => mul_ln1171_64_fu_745_p2);

    mul_28s_28s_46_1_1_U949 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_2_load_reg_1394,
        din1 => nodes_features_proj_V_2_load_reg_1439,
        dout => mul_ln1171_65_fu_764_p2);

    mul_28s_28s_46_1_1_U950 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_3_load_reg_1444,
        din1 => nodes_features_proj_V_3_load_reg_1504,
        dout => mul_ln1171_66_fu_817_p2);

    mul_28s_28s_46_1_1_U951 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_4_load_reg_1449,
        din1 => nodes_features_proj_V_4_load_reg_1509,
        dout => mul_ln1171_67_fu_836_p2);

    mul_28s_28s_46_1_1_U952 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_5_load_reg_1454,
        din1 => nodes_features_proj_V_5_load_reg_1514,
        dout => mul_ln1171_68_fu_845_p2);

    mul_28s_28s_46_1_1_U953 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_6_load_reg_1519,
        din1 => nodes_features_proj_V_6_load_reg_1584,
        dout => mul_ln1171_69_fu_921_p2);

    mul_28s_28s_46_1_1_U954 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_7_load_reg_1524,
        din1 => nodes_features_proj_V_7_load_reg_1589,
        dout => mul_ln1171_70_fu_940_p2);

    mul_28s_28s_46_1_1_U955 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_8_load_reg_1529,
        din1 => nodes_features_proj_V_8_load_reg_1594,
        dout => mul_ln1171_71_fu_949_p2);

    mul_28s_28s_46_1_1_U956 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_9_load_reg_1599,
        din1 => nodes_features_proj_V_9_load_reg_1664,
        dout => mul_ln1171_72_fu_1028_p2);

    mul_28s_28s_46_1_1_U957 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_10_load_reg_1604,
        din1 => nodes_features_proj_V_10_load_reg_1669,
        dout => mul_ln1171_73_fu_1047_p2);

    mul_28s_28s_46_1_1_U958 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_11_load_reg_1609,
        din1 => nodes_features_proj_V_11_load_reg_1674,
        dout => mul_ln1171_74_fu_1056_p2);

    mul_28s_28s_46_1_1_U959 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_12_load_reg_1684,
        din1 => nodes_features_proj_V_12_load_reg_1729,
        dout => mul_ln1171_75_fu_1132_p2);

    mul_28s_28s_46_1_1_U960 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_13_load_reg_1689,
        din1 => nodes_features_proj_V_13_load_reg_1734,
        dout => mul_ln1171_76_fu_1151_p2);

    mul_28s_28s_46_1_1_U961 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_14_load_reg_1694,
        din1 => nodes_features_proj_V_14_load_reg_1739,
        dout => mul_ln1171_77_fu_1160_p2);

    mul_28s_28s_46_1_1_U962 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_15_load_reg_1744,
        din1 => nodes_features_proj_V_15_load_reg_1769,
        dout => mul_ln1171_78_fu_1233_p2);

    mac_muladd_3ns_7ns_5ns_9_4_1_U963 : component GAT_compute_one_graph_mac_muladd_3ns_7ns_5ns_9_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 7,
        din2_WIDTH => 5,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1276_p0,
        din1 => grp_fu_1276_p1,
        din2 => grp_fu_1276_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1276_p3);

    flow_control_loop_pipe_sequential_init_U : component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln74_fu_611_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_142 <= add_ln74_1_fu_617_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_142 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    n_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln74_fu_611_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    n_fu_134 <= add_ln75_fu_703_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_134 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    nh_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln74_fu_611_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    nh_fu_138 <= select_ln74_1_fu_649_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    nh_fu_138 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                nodes_features_proj_V_0_load_reg_1429 <= nodes_features_proj_V_0_q0;
                nodes_features_proj_V_1_load_reg_1434 <= nodes_features_proj_V_1_q0;
                nodes_features_proj_V_2_load_reg_1439 <= nodes_features_proj_V_2_q0;
                scoring_fn_target_V_0_load_reg_1384 <= scoring_fn_target_V_0_q0;
                scoring_fn_target_V_1_load_reg_1389 <= scoring_fn_target_V_1_q0;
                scoring_fn_target_V_2_load_reg_1394 <= scoring_fn_target_V_2_q0;
                select_ln74_1_reg_1315_pp0_iter1_reg <= select_ln74_1_reg_1315;
                select_ln74_reg_1310_pp0_iter1_reg <= select_ln74_reg_1310;
                    zext_ln1169_4_reg_1352_pp0_iter1_reg(7 downto 0) <= zext_ln1169_4_reg_1352(7 downto 0);
                    zext_ln1171_reg_1320_pp0_iter1_reg(4 downto 0) <= zext_ln1171_reg_1320(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                mul_ln1171_64_reg_1489 <= mul_ln1171_64_fu_745_p2;
                mul_ln1171_65_reg_1499 <= mul_ln1171_65_fu_764_p2;
                mul_ln1171_66_reg_1564 <= mul_ln1171_66_fu_817_p2;
                mul_ln1171_67_reg_1574 <= mul_ln1171_67_fu_836_p2;
                mul_ln1171_68_reg_1579 <= mul_ln1171_68_fu_845_p2;
                mul_ln1171_69_reg_1644 <= mul_ln1171_69_fu_921_p2;
                mul_ln1171_70_reg_1654 <= mul_ln1171_70_fu_940_p2;
                mul_ln1171_71_reg_1659 <= mul_ln1171_71_fu_949_p2;
                mul_ln1171_72_reg_1709 <= mul_ln1171_72_fu_1028_p2;
                mul_ln1171_73_reg_1719 <= mul_ln1171_73_fu_1047_p2;
                mul_ln1171_74_reg_1724 <= mul_ln1171_74_fu_1056_p2;
                mul_ln1171_75_reg_1749 <= mul_ln1171_75_fu_1132_p2;
                mul_ln1171_76_reg_1759 <= mul_ln1171_76_fu_1151_p2;
                mul_ln1171_77_reg_1764 <= mul_ln1171_77_fu_1160_p2;
                mul_ln1171_78_reg_1779 <= mul_ln1171_78_fu_1233_p2;
                nodes_features_proj_V_10_load_reg_1669 <= nodes_features_proj_V_10_q0;
                nodes_features_proj_V_11_load_reg_1674 <= nodes_features_proj_V_11_q0;
                nodes_features_proj_V_12_load_reg_1729 <= nodes_features_proj_V_12_q0;
                nodes_features_proj_V_13_load_reg_1734 <= nodes_features_proj_V_13_q0;
                nodes_features_proj_V_14_load_reg_1739 <= nodes_features_proj_V_14_q0;
                nodes_features_proj_V_15_load_reg_1769 <= nodes_features_proj_V_15_q0;
                nodes_features_proj_V_3_load_reg_1504 <= nodes_features_proj_V_3_q0;
                nodes_features_proj_V_4_load_reg_1509 <= nodes_features_proj_V_4_q0;
                nodes_features_proj_V_5_load_reg_1514 <= nodes_features_proj_V_5_q0;
                nodes_features_proj_V_6_load_reg_1584 <= nodes_features_proj_V_6_q0;
                nodes_features_proj_V_7_load_reg_1589 <= nodes_features_proj_V_7_q0;
                nodes_features_proj_V_8_load_reg_1594 <= nodes_features_proj_V_8_q0;
                nodes_features_proj_V_9_load_reg_1664 <= nodes_features_proj_V_9_q0;
                scoring_fn_target_V_10_load_reg_1604 <= scoring_fn_target_V_10_q0;
                scoring_fn_target_V_11_load_reg_1609 <= scoring_fn_target_V_11_q0;
                scoring_fn_target_V_12_load_reg_1684 <= scoring_fn_target_V_12_q0;
                scoring_fn_target_V_13_load_reg_1689 <= scoring_fn_target_V_13_q0;
                scoring_fn_target_V_14_load_reg_1694 <= scoring_fn_target_V_14_q0;
                scoring_fn_target_V_15_load_reg_1744 <= scoring_fn_target_V_15_q0;
                scoring_fn_target_V_3_load_reg_1444 <= scoring_fn_target_V_3_q0;
                scoring_fn_target_V_4_load_reg_1449 <= scoring_fn_target_V_4_q0;
                scoring_fn_target_V_5_load_reg_1454 <= scoring_fn_target_V_5_q0;
                scoring_fn_target_V_6_load_reg_1519 <= scoring_fn_target_V_6_q0;
                scoring_fn_target_V_7_load_reg_1524 <= scoring_fn_target_V_7_q0;
                scoring_fn_target_V_8_load_reg_1529 <= scoring_fn_target_V_8_q0;
                scoring_fn_target_V_9_load_reg_1599 <= scoring_fn_target_V_9_q0;
                select_ln74_1_reg_1315_pp0_iter2_reg <= select_ln74_1_reg_1315_pp0_iter1_reg;
                select_ln74_1_reg_1315_pp0_iter3_reg <= select_ln74_1_reg_1315_pp0_iter2_reg;
                select_ln74_1_reg_1315_pp0_iter4_reg <= select_ln74_1_reg_1315_pp0_iter3_reg;
                select_ln74_reg_1310_pp0_iter2_reg <= select_ln74_reg_1310_pp0_iter1_reg;
                select_ln74_reg_1310_pp0_iter3_reg <= select_ln74_reg_1310_pp0_iter2_reg;
                select_ln74_reg_1310_pp0_iter4_reg <= select_ln74_reg_1310_pp0_iter3_reg;
                select_ln74_reg_1310_pp0_iter5_reg <= select_ln74_reg_1310_pp0_iter4_reg;
                select_ln74_reg_1310_pp0_iter6_reg <= select_ln74_reg_1310_pp0_iter5_reg;
                tmp_63_reg_1494 <= mul_ln1171_fu_736_p2(45 downto 18);
                tmp_65_reg_1569 <= add_ln1245_64_fu_809_p2(45 downto 18);
                tmp_68_reg_1649 <= add_ln1245_67_fu_913_p2(45 downto 18);
                tmp_71_reg_1714 <= add_ln1245_70_fu_1020_p2(45 downto 18);
                tmp_74_reg_1754 <= add_ln1245_73_fu_1124_p2(45 downto 18);
                tmp_77_reg_1784 <= add_ln1245_76_fu_1225_p2(45 downto 18);
                    zext_ln1169_4_reg_1352_pp0_iter2_reg(7 downto 0) <= zext_ln1169_4_reg_1352_pp0_iter1_reg(7 downto 0);
                    zext_ln1169_4_reg_1352_pp0_iter3_reg(7 downto 0) <= zext_ln1169_4_reg_1352_pp0_iter2_reg(7 downto 0);
                    zext_ln1169_4_reg_1352_pp0_iter4_reg(7 downto 0) <= zext_ln1169_4_reg_1352_pp0_iter3_reg(7 downto 0);
                    zext_ln1171_reg_1320_pp0_iter2_reg(4 downto 0) <= zext_ln1171_reg_1320_pp0_iter1_reg(4 downto 0);
                    zext_ln1171_reg_1320_pp0_iter3_reg(4 downto 0) <= zext_ln1171_reg_1320_pp0_iter2_reg(4 downto 0);
                    zext_ln1171_reg_1320_pp0_iter4_reg(4 downto 0) <= zext_ln1171_reg_1320_pp0_iter3_reg(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln74_fu_611_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln74_1_reg_1315 <= select_ln74_1_fu_649_p3;
                select_ln74_reg_1310 <= select_ln74_fu_641_p3;
                    zext_ln1169_4_reg_1352(7 downto 0) <= zext_ln1169_4_fu_696_p1(7 downto 0);
                    zext_ln1171_reg_1320(4 downto 0) <= zext_ln1171_fu_671_p1(4 downto 0);
            end if;
        end if;
    end process;
    zext_ln1171_reg_1320(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1171_reg_1320_pp0_iter1_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1171_reg_1320_pp0_iter2_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1171_reg_1320_pp0_iter3_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1171_reg_1320_pp0_iter4_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1169_4_reg_1352(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1169_4_reg_1352_pp0_iter1_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1169_4_reg_1352_pp0_iter2_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1169_4_reg_1352_pp0_iter3_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1169_4_reg_1352_pp0_iter4_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1169_fu_690_p2 <= std_logic_vector(unsigned(zext_ln1169_3_fu_686_p1) + unsigned(zext_ln80_fu_657_p1));
    add_ln1245_64_fu_809_p2 <= std_logic_vector(unsigned(shl_ln737_s_fu_801_p3) + unsigned(mul_ln1171_65_reg_1499));
    add_ln1245_65_fu_867_p2 <= std_logic_vector(unsigned(shl_ln737_63_fu_860_p3) + unsigned(mul_ln1171_66_reg_1564));
    add_ln1245_66_fu_890_p2 <= std_logic_vector(unsigned(shl_ln737_64_fu_882_p3) + unsigned(mul_ln1171_67_reg_1574));
    add_ln1245_67_fu_913_p2 <= std_logic_vector(unsigned(shl_ln737_65_fu_905_p3) + unsigned(mul_ln1171_68_reg_1579));
    add_ln1245_68_fu_974_p2 <= std_logic_vector(unsigned(shl_ln737_66_fu_967_p3) + unsigned(mul_ln1171_69_reg_1644));
    add_ln1245_69_fu_997_p2 <= std_logic_vector(unsigned(shl_ln737_67_fu_989_p3) + unsigned(mul_ln1171_70_reg_1654));
    add_ln1245_70_fu_1020_p2 <= std_logic_vector(unsigned(shl_ln737_68_fu_1012_p3) + unsigned(mul_ln1171_71_reg_1659));
    add_ln1245_71_fu_1078_p2 <= std_logic_vector(unsigned(shl_ln737_69_fu_1071_p3) + unsigned(mul_ln1171_72_reg_1709));
    add_ln1245_72_fu_1101_p2 <= std_logic_vector(unsigned(shl_ln737_70_fu_1093_p3) + unsigned(mul_ln1171_73_reg_1719));
    add_ln1245_73_fu_1124_p2 <= std_logic_vector(unsigned(shl_ln737_71_fu_1116_p3) + unsigned(mul_ln1171_74_reg_1724));
    add_ln1245_74_fu_1179_p2 <= std_logic_vector(unsigned(shl_ln737_72_fu_1172_p3) + unsigned(mul_ln1171_75_reg_1749));
    add_ln1245_75_fu_1202_p2 <= std_logic_vector(unsigned(shl_ln737_73_fu_1194_p3) + unsigned(mul_ln1171_76_reg_1759));
    add_ln1245_76_fu_1225_p2 <= std_logic_vector(unsigned(shl_ln737_74_fu_1217_p3) + unsigned(mul_ln1171_77_reg_1764));
    add_ln1245_77_fu_1260_p2 <= std_logic_vector(unsigned(shl_ln737_75_fu_1253_p3) + unsigned(mul_ln1171_78_reg_1779));
    add_ln1245_fu_786_p2 <= std_logic_vector(unsigned(shl_ln_fu_779_p3) + unsigned(mul_ln1171_64_reg_1489));
    add_ln74_1_fu_617_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv7_1));
    add_ln74_2_fu_665_p2 <= std_logic_vector(unsigned(tmp_fu_585_p3) + unsigned(zext_ln74_1_fu_661_p1));
    add_ln74_fu_629_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_nh_load) + unsigned(ap_const_lv3_1));
    add_ln75_fu_703_p2 <= std_logic_vector(unsigned(select_ln74_fu_641_p3) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln74_fu_611_p2)
    begin
        if (((icmp_ln74_fu_611_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_142)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_142;
        end if; 
    end process;


    ap_sig_allocacmp_n_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_fu_134, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_n_load <= n_fu_134;
        end if; 
    end process;


    ap_sig_allocacmp_nh_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, nh_fu_138)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_nh_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_nh_load <= nh_fu_138;
        end if; 
    end process;

    grp_fu_1276_p0 <= grp_fu_1276_p00(3 - 1 downto 0);
    grp_fu_1276_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln74_1_reg_1315_pp0_iter4_reg),9));
    grp_fu_1276_p1 <= ap_const_lv9_64(7 - 1 downto 0);
    grp_fu_1276_p2 <= grp_fu_1276_p20(5 - 1 downto 0);
    grp_fu_1276_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln74_reg_1310_pp0_iter6_reg),9));
    icmp_ln74_fu_611_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv7_4C) else "0";
    icmp_ln75_fu_635_p2 <= "1" when (ap_sig_allocacmp_n_load = ap_const_lv5_13) else "0";
    nodes_features_proj_V_0_address0 <= zext_ln1169_4_fu_696_p1(9 - 1 downto 0);

    nodes_features_proj_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_0_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_10_address0 <= zext_ln1169_4_reg_1352_pp0_iter2_reg(9 - 1 downto 0);

    nodes_features_proj_V_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            nodes_features_proj_V_10_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_11_address0 <= zext_ln1169_4_reg_1352_pp0_iter2_reg(9 - 1 downto 0);

    nodes_features_proj_V_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            nodes_features_proj_V_11_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_12_address0 <= zext_ln1169_4_reg_1352_pp0_iter3_reg(9 - 1 downto 0);

    nodes_features_proj_V_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            nodes_features_proj_V_12_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_13_address0 <= zext_ln1169_4_reg_1352_pp0_iter3_reg(9 - 1 downto 0);

    nodes_features_proj_V_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            nodes_features_proj_V_13_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_14_address0 <= zext_ln1169_4_reg_1352_pp0_iter3_reg(9 - 1 downto 0);

    nodes_features_proj_V_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            nodes_features_proj_V_14_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_15_address0 <= zext_ln1169_4_reg_1352_pp0_iter4_reg(9 - 1 downto 0);

    nodes_features_proj_V_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            nodes_features_proj_V_15_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_1_address0 <= zext_ln1169_4_fu_696_p1(9 - 1 downto 0);

    nodes_features_proj_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_1_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_2_address0 <= zext_ln1169_4_fu_696_p1(9 - 1 downto 0);

    nodes_features_proj_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_2_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_3_address0 <= zext_ln1169_4_reg_1352(9 - 1 downto 0);

    nodes_features_proj_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_3_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_4_address0 <= zext_ln1169_4_reg_1352(9 - 1 downto 0);

    nodes_features_proj_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_4_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_5_address0 <= zext_ln1169_4_reg_1352(9 - 1 downto 0);

    nodes_features_proj_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nodes_features_proj_V_5_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_6_address0 <= zext_ln1169_4_reg_1352_pp0_iter1_reg(9 - 1 downto 0);

    nodes_features_proj_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_6_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_7_address0 <= zext_ln1169_4_reg_1352_pp0_iter1_reg(9 - 1 downto 0);

    nodes_features_proj_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_7_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_8_address0 <= zext_ln1169_4_reg_1352_pp0_iter1_reg(9 - 1 downto 0);

    nodes_features_proj_V_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_8_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_9_address0 <= zext_ln1169_4_reg_1352_pp0_iter2_reg(9 - 1 downto 0);

    nodes_features_proj_V_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            nodes_features_proj_V_9_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scores_target_V_address1 <= zext_ln80_1_fu_1249_p1(9 - 1 downto 0);

    scores_target_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            scores_target_V_ce1 <= ap_const_logic_1;
        else 
            scores_target_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    scores_target_V_d1 <= add_ln1245_77_fu_1260_p2(45 downto 18);

    scores_target_V_we1_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            scores_target_V_we1 <= ap_const_logic_1;
        else 
            scores_target_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_0_address0 <= zext_ln1171_fu_671_p1(5 - 1 downto 0);

    scoring_fn_target_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_0_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_10_address0 <= zext_ln1171_reg_1320_pp0_iter2_reg(5 - 1 downto 0);

    scoring_fn_target_V_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            scoring_fn_target_V_10_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_11_address0 <= zext_ln1171_reg_1320_pp0_iter2_reg(5 - 1 downto 0);

    scoring_fn_target_V_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            scoring_fn_target_V_11_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_12_address0 <= zext_ln1171_reg_1320_pp0_iter3_reg(5 - 1 downto 0);

    scoring_fn_target_V_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            scoring_fn_target_V_12_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_13_address0 <= zext_ln1171_reg_1320_pp0_iter3_reg(5 - 1 downto 0);

    scoring_fn_target_V_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            scoring_fn_target_V_13_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_14_address0 <= zext_ln1171_reg_1320_pp0_iter3_reg(5 - 1 downto 0);

    scoring_fn_target_V_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            scoring_fn_target_V_14_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_15_address0 <= zext_ln1171_reg_1320_pp0_iter4_reg(5 - 1 downto 0);

    scoring_fn_target_V_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            scoring_fn_target_V_15_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_1_address0 <= zext_ln1171_fu_671_p1(5 - 1 downto 0);

    scoring_fn_target_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_1_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_2_address0 <= zext_ln1171_fu_671_p1(5 - 1 downto 0);

    scoring_fn_target_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_2_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_3_address0 <= zext_ln1171_reg_1320(5 - 1 downto 0);

    scoring_fn_target_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_3_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_4_address0 <= zext_ln1171_reg_1320(5 - 1 downto 0);

    scoring_fn_target_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_4_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_5_address0 <= zext_ln1171_reg_1320(5 - 1 downto 0);

    scoring_fn_target_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            scoring_fn_target_V_5_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_6_address0 <= zext_ln1171_reg_1320_pp0_iter1_reg(5 - 1 downto 0);

    scoring_fn_target_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            scoring_fn_target_V_6_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_7_address0 <= zext_ln1171_reg_1320_pp0_iter1_reg(5 - 1 downto 0);

    scoring_fn_target_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            scoring_fn_target_V_7_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_8_address0 <= zext_ln1171_reg_1320_pp0_iter1_reg(5 - 1 downto 0);

    scoring_fn_target_V_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            scoring_fn_target_V_8_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_9_address0 <= zext_ln1171_reg_1320_pp0_iter2_reg(5 - 1 downto 0);

    scoring_fn_target_V_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            scoring_fn_target_V_9_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln74_1_fu_649_p3 <= 
        add_ln74_fu_629_p2 when (icmp_ln75_fu_635_p2(0) = '1') else 
        ap_sig_allocacmp_nh_load;
    select_ln74_fu_641_p3 <= 
        ap_const_lv5_0 when (icmp_ln75_fu_635_p2(0) = '1') else 
        ap_sig_allocacmp_n_load;
    shl_ln737_63_fu_860_p3 <= (tmp_65_reg_1569 & ap_const_lv18_0);
    shl_ln737_64_fu_882_p3 <= (tmp_66_fu_872_p4 & ap_const_lv18_0);
    shl_ln737_65_fu_905_p3 <= (tmp_67_fu_895_p4 & ap_const_lv18_0);
    shl_ln737_66_fu_967_p3 <= (tmp_68_reg_1649 & ap_const_lv18_0);
    shl_ln737_67_fu_989_p3 <= (tmp_69_fu_979_p4 & ap_const_lv18_0);
    shl_ln737_68_fu_1012_p3 <= (tmp_70_fu_1002_p4 & ap_const_lv18_0);
    shl_ln737_69_fu_1071_p3 <= (tmp_71_reg_1714 & ap_const_lv18_0);
    shl_ln737_70_fu_1093_p3 <= (tmp_72_fu_1083_p4 & ap_const_lv18_0);
    shl_ln737_71_fu_1116_p3 <= (tmp_73_fu_1106_p4 & ap_const_lv18_0);
    shl_ln737_72_fu_1172_p3 <= (tmp_74_reg_1754 & ap_const_lv18_0);
    shl_ln737_73_fu_1194_p3 <= (tmp_75_fu_1184_p4 & ap_const_lv18_0);
    shl_ln737_74_fu_1217_p3 <= (tmp_76_fu_1207_p4 & ap_const_lv18_0);
    shl_ln737_75_fu_1253_p3 <= (tmp_77_reg_1784 & ap_const_lv18_0);
    shl_ln737_s_fu_801_p3 <= (tmp_64_fu_791_p4 & ap_const_lv18_0);
    shl_ln_fu_779_p3 <= (tmp_63_reg_1494 & ap_const_lv18_0);
    tmp_64_fu_791_p4 <= add_ln1245_fu_786_p2(45 downto 18);
    tmp_66_fu_872_p4 <= add_ln1245_65_fu_867_p2(45 downto 18);
    tmp_67_fu_895_p4 <= add_ln1245_66_fu_890_p2(45 downto 18);
    tmp_69_fu_979_p4 <= add_ln1245_68_fu_974_p2(45 downto 18);
    tmp_70_fu_1002_p4 <= add_ln1245_69_fu_997_p2(45 downto 18);
    tmp_72_fu_1083_p4 <= add_ln1245_71_fu_1078_p2(45 downto 18);
    tmp_73_fu_1106_p4 <= add_ln1245_72_fu_1101_p2(45 downto 18);
    tmp_75_fu_1184_p4 <= add_ln1245_74_fu_1179_p2(45 downto 18);
    tmp_76_fu_1207_p4 <= add_ln1245_75_fu_1202_p2(45 downto 18);
    tmp_fu_585_p3 <= (layer & ap_const_lv2_0);
    tmp_s_fu_678_p3 <= (select_ln74_fu_641_p3 & ap_const_lv2_0);
    zext_ln1169_3_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_678_p3),8));
    zext_ln1169_4_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1169_fu_690_p2),64));
    zext_ln1171_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln74_2_fu_665_p2),64));
    zext_ln74_1_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln74_1_fu_649_p3),5));
    zext_ln80_1_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1276_p3),64));
    zext_ln80_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln74_1_fu_649_p3),8));
end behav;
