// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_compute_all_scores (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        scores_source_V_address0,
        scores_source_V_ce0,
        scores_source_V_q0,
        scores_target_V_address0,
        scores_target_V_ce0,
        scores_target_V_q0,
        all_scores_V_address1,
        all_scores_V_ce1,
        all_scores_V_we1,
        all_scores_V_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] scores_source_V_address0;
output   scores_source_V_ce0;
input  [27:0] scores_source_V_q0;
output  [8:0] scores_target_V_address0;
output   scores_target_V_ce0;
input  [27:0] scores_target_V_q0;
output  [15:0] all_scores_V_address1;
output   all_scores_V_ce1;
output   all_scores_V_we1;
output  [27:0] all_scores_V_d1;

reg ap_idle;
reg scores_source_V_ce0;
reg scores_target_V_ce0;
reg all_scores_V_ce1;
reg all_scores_V_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln90_fu_186_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln90_reg_545;
reg   [0:0] icmp_ln90_reg_545_pp0_iter1_reg;
reg   [0:0] icmp_ln90_reg_545_pp0_iter2_reg;
wire   [2:0] add_ln90_fu_201_p2;
reg   [2:0] add_ln90_reg_549;
reg   [2:0] add_ln90_reg_549_pp0_iter1_reg;
wire   [0:0] icmp_ln91_fu_207_p2;
reg   [0:0] icmp_ln91_reg_554;
reg   [0:0] icmp_ln91_reg_554_pp0_iter1_reg;
reg   [0:0] icmp_ln91_reg_554_pp0_iter2_reg;
wire   [2:0] select_ln90_1_fu_213_p3;
reg   [2:0] select_ln90_1_reg_562;
reg   [2:0] select_ln90_1_reg_562_pp0_iter1_reg;
wire   [0:0] and_ln90_fu_264_p2;
reg   [0:0] and_ln90_reg_567;
reg   [0:0] and_ln90_reg_567_pp0_iter2_reg;
wire   [4:0] select_ln91_fu_275_p3;
reg   [4:0] select_ln91_reg_573;
reg   [4:0] select_ln91_reg_573_pp0_iter2_reg;
reg   [4:0] select_ln91_reg_573_pp0_iter3_reg;
reg   [4:0] select_ln91_reg_573_pp0_iter4_reg;
wire   [8:0] mul_ln90_1_fu_311_p2;
reg   [8:0] mul_ln90_1_reg_584;
wire   [9:0] mul_ln97_fu_320_p2;
reg   [9:0] mul_ln97_reg_589;
wire   [8:0] trunc_ln90_fu_326_p1;
reg   [8:0] trunc_ln90_reg_594;
wire   [4:0] add_ln91_fu_330_p2;
reg   [4:0] add_ln91_reg_600;
wire   [4:0] select_ln91_1_fu_336_p3;
reg   [4:0] select_ln91_1_reg_605;
wire   [26:0] add_ln94_fu_403_p2;
reg   [26:0] add_ln94_reg_620;
reg   [26:0] add_ln94_reg_620_pp0_iter5_reg;
reg   [26:0] add_ln94_reg_620_pp0_iter6_reg;
wire   [0:0] icmp_ln1548_fu_409_p2;
reg   [0:0] icmp_ln1548_reg_625;
reg   [0:0] icmp_ln1548_reg_625_pp0_iter5_reg;
reg   [0:0] icmp_ln1548_reg_625_pp0_iter6_reg;
wire   [15:0] grp_fu_489_p4;
reg   [15:0] add_ln97_1_reg_640;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [63:0] select_ln91_2_cast_fu_371_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln712_fu_384_p1;
wire   [63:0] zext_ln97_4_fu_438_p1;
reg   [4:0] n2_fu_88;
wire   [4:0] add_ln92_fu_283_p2;
wire    ap_loop_init;
reg   [4:0] n1_fu_92;
reg   [9:0] indvar_flatten_fu_96;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [9:0] select_ln91_3_fu_227_p3;
reg   [2:0] nh_fu_100;
reg   [2:0] ap_sig_allocacmp_nh_2;
reg   [10:0] indvar_flatten20_fu_104;
reg   [10:0] ap_sig_allocacmp_indvar_flatten20_load;
wire   [10:0] add_ln90_1_fu_192_p2;
wire   [9:0] add_ln91_1_fu_221_p2;
wire   [0:0] icmp_ln92_fu_258_p2;
wire   [0:0] xor_ln90_fu_253_p2;
wire   [0:0] or_ln91_fu_270_p2;
wire   [2:0] mul_ln90_1_fu_311_p0;
wire   [7:0] mul_ln90_1_fu_311_p1;
wire   [2:0] mul_ln97_fu_320_p0;
wire   [7:0] mul_ln97_fu_320_p1;
wire   [4:0] select_ln90_fu_301_p3;
wire   [8:0] grp_fu_480_p3;
wire   [8:0] add_ln91_cast_fu_353_p1;
wire   [8:0] empty_95_fu_356_p2;
wire   [8:0] select_ln90_2_fu_348_p3;
wire   [8:0] select_ln91_2_fu_364_p3;
wire   [8:0] zext_ln97_2_fu_376_p1;
wire   [8:0] add_ln712_fu_379_p2;
wire   [26:0] trunc_ln712_fu_393_p1;
wire   [26:0] trunc_ln91_fu_389_p1;
wire   [27:0] temp_V_fu_397_p2;
wire   [0:0] tmp_fu_415_p3;
wire  signed [27:0] min_V_fu_423_p3;
wire   [26:0] select_ln95_fu_442_p3;
wire   [44:0] lhs_fu_448_p3;
wire  signed [44:0] grp_fu_498_p2;
wire   [45:0] zext_ln1245_fu_456_p1;
wire  signed [45:0] sext_ln712_fu_460_p1;
wire   [45:0] ret_V_fu_463_p2;
wire   [2:0] grp_fu_480_p0;
wire   [6:0] grp_fu_480_p1;
wire   [4:0] grp_fu_480_p2;
wire   [4:0] grp_fu_489_p1;
wire   [6:0] grp_fu_489_p2;
wire   [4:0] grp_fu_489_p3;
wire   [15:0] grp_fu_498_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [8:0] grp_fu_480_p00;
wire   [8:0] grp_fu_480_p20;
wire   [9:0] grp_fu_489_p10;
wire   [15:0] grp_fu_489_p30;
wire   [8:0] mul_ln90_1_fu_311_p00;
wire   [9:0] mul_ln97_fu_320_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_mul_3ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_3ns_8ns_9_1_1_U998(
    .din0(mul_ln90_1_fu_311_p0),
    .din1(mul_ln90_1_fu_311_p1),
    .dout(mul_ln90_1_fu_311_p2)
);

GAT_compute_one_graph_mul_3ns_8ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mul_3ns_8ns_10_1_1_U999(
    .din0(mul_ln97_fu_320_p0),
    .din1(mul_ln97_fu_320_p1),
    .dout(mul_ln97_fu_320_p2)
);

GAT_compute_one_graph_mac_muladd_3ns_7ns_5ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 9 ))
mac_muladd_3ns_7ns_5ns_9_4_1_U1000(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_480_p0),
    .din1(grp_fu_480_p1),
    .din2(grp_fu_480_p2),
    .ce(1'b1),
    .dout(grp_fu_480_p3)
);

GAT_compute_one_graph_ama_addmuladd_10ns_5ns_7ns_5ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 5 ),
    .dout_WIDTH( 16 ))
ama_addmuladd_10ns_5ns_7ns_5ns_16_4_1_U1001(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln97_reg_589),
    .din1(grp_fu_489_p1),
    .din2(grp_fu_489_p2),
    .din3(grp_fu_489_p3),
    .ce(1'b1),
    .dout(grp_fu_489_p4)
);

GAT_compute_one_graph_mul_mul_28s_16ns_45_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 45 ))
mul_mul_28s_16ns_45_4_1_U1002(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(min_V_fu_423_p3),
    .din1(grp_fu_498_p1),
    .ce(1'b1),
    .dout(grp_fu_498_p2)
);

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln90_fu_186_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten20_fu_104 <= add_ln90_1_fu_192_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten20_fu_104 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln90_fu_186_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_96 <= select_ln91_3_fu_227_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_96 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            n1_fu_92 <= 5'd0;
        end else if (((icmp_ln90_reg_545_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            n1_fu_92 <= select_ln91_1_fu_336_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            n2_fu_88 <= 5'd0;
        end else if (((icmp_ln90_reg_545 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            n2_fu_88 <= add_ln92_fu_283_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln90_fu_186_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            nh_fu_100 <= select_ln90_1_fu_213_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            nh_fu_100 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_fu_186_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln90_reg_549 <= add_ln90_fu_201_p2;
        icmp_ln91_reg_554 <= icmp_ln91_fu_207_p2;
        select_ln90_1_reg_562 <= select_ln90_1_fu_213_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln90_reg_549_pp0_iter1_reg <= add_ln90_reg_549;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln90_reg_545 <= icmp_ln90_fu_186_p2;
        icmp_ln90_reg_545_pp0_iter1_reg <= icmp_ln90_reg_545;
        icmp_ln91_reg_554_pp0_iter1_reg <= icmp_ln91_reg_554;
        select_ln90_1_reg_562_pp0_iter1_reg <= select_ln90_1_reg_562;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_545_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln91_reg_600 <= add_ln91_fu_330_p2;
        mul_ln97_reg_589 <= mul_ln97_fu_320_p2;
        select_ln91_1_reg_605 <= select_ln91_1_fu_336_p3;
        trunc_ln90_reg_594 <= trunc_ln90_fu_326_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln94_reg_620 <= add_ln94_fu_403_p2;
        add_ln94_reg_620_pp0_iter5_reg <= add_ln94_reg_620;
        add_ln94_reg_620_pp0_iter6_reg <= add_ln94_reg_620_pp0_iter5_reg;
        and_ln90_reg_567_pp0_iter2_reg <= and_ln90_reg_567;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        icmp_ln1548_reg_625 <= icmp_ln1548_fu_409_p2;
        icmp_ln1548_reg_625_pp0_iter5_reg <= icmp_ln1548_reg_625;
        icmp_ln1548_reg_625_pp0_iter6_reg <= icmp_ln1548_reg_625_pp0_iter5_reg;
        icmp_ln90_reg_545_pp0_iter2_reg <= icmp_ln90_reg_545_pp0_iter1_reg;
        icmp_ln91_reg_554_pp0_iter2_reg <= icmp_ln91_reg_554_pp0_iter1_reg;
        select_ln91_reg_573_pp0_iter2_reg <= select_ln91_reg_573;
        select_ln91_reg_573_pp0_iter3_reg <= select_ln91_reg_573_pp0_iter2_reg;
        select_ln91_reg_573_pp0_iter4_reg <= select_ln91_reg_573_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        add_ln97_1_reg_640 <= grp_fu_489_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_545 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln90_reg_567 <= and_ln90_fu_264_p2;
        select_ln91_reg_573 <= select_ln91_fu_275_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_reg_545_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln91_reg_554_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln90_reg_567))) begin
        mul_ln90_1_reg_584 <= mul_ln90_1_fu_311_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        all_scores_V_ce1 = 1'b1;
    end else begin
        all_scores_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        all_scores_V_we1 = 1'b1;
    end else begin
        all_scores_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln90_fu_186_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln90_reg_545_pp0_iter2_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten20_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten20_load = indvar_flatten20_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_nh_2 = 3'd0;
    end else begin
        ap_sig_allocacmp_nh_2 = nh_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        scores_source_V_ce0 = 1'b1;
    end else begin
        scores_source_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        scores_target_V_ce0 = 1'b1;
    end else begin
        scores_target_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln712_fu_379_p2 = (trunc_ln90_reg_594 + zext_ln97_2_fu_376_p1);

assign add_ln90_1_fu_192_p2 = (ap_sig_allocacmp_indvar_flatten20_load + 11'd1);

assign add_ln90_fu_201_p2 = (ap_sig_allocacmp_nh_2 + 3'd1);

assign add_ln91_1_fu_221_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln91_cast_fu_353_p1 = add_ln91_reg_600;

assign add_ln91_fu_330_p2 = (select_ln90_fu_301_p3 + 5'd1);

assign add_ln92_fu_283_p2 = (select_ln91_fu_275_p3 + 5'd1);

assign add_ln94_fu_403_p2 = (trunc_ln712_fu_393_p1 + trunc_ln91_fu_389_p1);

assign all_scores_V_address1 = zext_ln97_4_fu_438_p1;

assign all_scores_V_d1 = {{ret_V_fu_463_p2[45:18]}};

assign and_ln90_fu_264_p2 = (xor_ln90_fu_253_p2 & icmp_ln92_fu_258_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_95_fu_356_p2 = (trunc_ln90_reg_594 + add_ln91_cast_fu_353_p1);

assign grp_fu_480_p0 = grp_fu_480_p00;

assign grp_fu_480_p00 = ap_sig_allocacmp_nh_2;

assign grp_fu_480_p1 = 9'd100;

assign grp_fu_480_p2 = grp_fu_480_p20;

assign grp_fu_480_p20 = n1_fu_92;

assign grp_fu_489_p1 = grp_fu_489_p10;

assign grp_fu_489_p10 = select_ln91_1_reg_605;

assign grp_fu_489_p2 = 16'd100;

assign grp_fu_489_p3 = grp_fu_489_p30;

assign grp_fu_489_p30 = select_ln91_reg_573_pp0_iter4_reg;

assign grp_fu_498_p1 = 45'd52428;

assign icmp_ln1548_fu_409_p2 = (($signed(temp_V_fu_397_p2) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_186_p2 = ((ap_sig_allocacmp_indvar_flatten20_load == 11'd1444) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_207_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd361) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_258_p2 = ((n2_fu_88 == 5'd19) ? 1'b1 : 1'b0);

assign lhs_fu_448_p3 = {{select_ln95_fu_442_p3}, {18'd0}};

assign min_V_fu_423_p3 = ((tmp_fu_415_p3[0:0] == 1'b1) ? temp_V_fu_397_p2 : 28'd0);

assign mul_ln90_1_fu_311_p0 = mul_ln90_1_fu_311_p00;

assign mul_ln90_1_fu_311_p00 = add_ln90_reg_549_pp0_iter1_reg;

assign mul_ln90_1_fu_311_p1 = 9'd100;

assign mul_ln97_fu_320_p0 = mul_ln97_fu_320_p00;

assign mul_ln97_fu_320_p00 = select_ln90_1_reg_562_pp0_iter1_reg;

assign mul_ln97_fu_320_p1 = 10'd100;

assign or_ln91_fu_270_p2 = (icmp_ln91_reg_554 | and_ln90_fu_264_p2);

assign ret_V_fu_463_p2 = ($signed(zext_ln1245_fu_456_p1) + $signed(sext_ln712_fu_460_p1));

assign scores_source_V_address0 = select_ln91_2_cast_fu_371_p1;

assign scores_target_V_address0 = zext_ln712_fu_384_p1;

assign select_ln90_1_fu_213_p3 = ((icmp_ln91_fu_207_p2[0:0] == 1'b1) ? add_ln90_fu_201_p2 : ap_sig_allocacmp_nh_2);

assign select_ln90_2_fu_348_p3 = ((icmp_ln91_reg_554_pp0_iter2_reg[0:0] == 1'b1) ? mul_ln90_1_reg_584 : grp_fu_480_p3);

assign select_ln90_fu_301_p3 = ((icmp_ln91_reg_554_pp0_iter1_reg[0:0] == 1'b1) ? 5'd0 : n1_fu_92);

assign select_ln91_1_fu_336_p3 = ((and_ln90_reg_567[0:0] == 1'b1) ? add_ln91_fu_330_p2 : select_ln90_fu_301_p3);

assign select_ln91_2_cast_fu_371_p1 = select_ln91_2_fu_364_p3;

assign select_ln91_2_fu_364_p3 = ((and_ln90_reg_567_pp0_iter2_reg[0:0] == 1'b1) ? empty_95_fu_356_p2 : select_ln90_2_fu_348_p3);

assign select_ln91_3_fu_227_p3 = ((icmp_ln91_fu_207_p2[0:0] == 1'b1) ? 10'd1 : add_ln91_1_fu_221_p2);

assign select_ln91_fu_275_p3 = ((or_ln91_fu_270_p2[0:0] == 1'b1) ? 5'd0 : n2_fu_88);

assign select_ln95_fu_442_p3 = ((icmp_ln1548_reg_625_pp0_iter6_reg[0:0] == 1'b1) ? add_ln94_reg_620_pp0_iter6_reg : 27'd0);

assign sext_ln712_fu_460_p1 = grp_fu_498_p2;

assign temp_V_fu_397_p2 = (scores_target_V_q0 + scores_source_V_q0);

assign tmp_fu_415_p3 = temp_V_fu_397_p2[32'd27];

assign trunc_ln712_fu_393_p1 = scores_target_V_q0[26:0];

assign trunc_ln90_fu_326_p1 = mul_ln97_fu_320_p2[8:0];

assign trunc_ln91_fu_389_p1 = scores_source_V_q0[26:0];

assign xor_ln90_fu_253_p2 = (icmp_ln91_reg_554 ^ 1'd1);

assign zext_ln1245_fu_456_p1 = lhs_fu_448_p3;

assign zext_ln712_fu_384_p1 = add_ln712_fu_379_p2;

assign zext_ln97_2_fu_376_p1 = select_ln91_reg_573_pp0_iter2_reg;

assign zext_ln97_4_fu_438_p1 = add_ln97_1_reg_640;

endmodule //GAT_compute_one_graph_compute_all_scores
