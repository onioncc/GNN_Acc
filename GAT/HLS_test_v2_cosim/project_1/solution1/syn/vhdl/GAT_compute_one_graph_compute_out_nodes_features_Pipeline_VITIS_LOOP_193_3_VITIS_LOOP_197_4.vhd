-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_compute_out_nodes_features_Pipeline_VITIS_LOOP_193_3_VITIS_LOOP_197_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (35 downto 0);
    mul_ln195_1 : IN STD_LOGIC_VECTOR (17 downto 0);
    zext_ln190 : IN STD_LOGIC_VECTOR (2 downto 0);
    all_attention_coefficients_V_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    all_attention_coefficients_V_ce0 : OUT STD_LOGIC;
    all_attention_coefficients_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_0_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_0_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_1_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_1_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_2_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_2_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_3_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_3_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_4_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_4_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_5_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_5_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_6_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_6_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_7_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_7_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_8_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_8_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_9_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_9_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_10_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_10_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_11_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_11_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_12_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_12_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_13_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_13_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_14_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_14_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_15_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_15_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    out_nodes_features_sum_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_nodes_features_sum_V_ce0 : OUT STD_LOGIC;
    out_nodes_features_sum_V_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    out_nodes_features_sum_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_nodes_features_sum_V_ce1 : OUT STD_LOGIC;
    out_nodes_features_sum_V_we1 : OUT STD_LOGIC;
    out_nodes_features_sum_V_d1 : OUT STD_LOGIC_VECTOR (27 downto 0) );
end;


architecture behav of GAT_compute_one_graph_compute_out_nodes_features_Pipeline_VITIS_LOOP_193_3_VITIS_LOOP_197_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv36_1 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln193_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln190_cast_fu_367_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln190_cast_reg_661 : STD_LOGIC_VECTOR (9 downto 0);
    signal cmp8_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_reg_666_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_reg_666_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_reg_666_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln197_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln197_reg_675 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln197_reg_675_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln197_reg_675_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln197_reg_675_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_mid1_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_mid1_reg_680 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_mid1_reg_680_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_mid1_reg_680_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_mid1_reg_680_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln193_1_fu_474_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln193_1_reg_685 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln193_3_fu_487_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln193_3_reg_690 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_nodes_features_sum_V_addr_reg_695 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_nodes_features_sum_V_addr_reg_695_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal out_nodes_features_sum_V_addr_reg_695_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal out_nodes_features_sum_V_addr_reg_695_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1171_2_fu_497_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1171_2_reg_701 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1171_2_reg_701_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal all_attention_coefficients_V_load_reg_791 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_fu_545_p18 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_reg_796 : STD_LOGIC_VECTOR (27 downto 0);
    signal prev_V_reg_801 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_fu_588_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_reg_806 : STD_LOGIC_VECTOR (45 downto 0);
    signal zext_ln197_fu_492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln195_fu_522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_fu_526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal fout_1_fu_100 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln197_fu_501_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal n2_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln193_2_fu_462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_108 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln193_2_fu_415_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln1171_fu_392_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln193_fu_424_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1171_1_fu_444_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln193_fu_470_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_117_cast_fu_448_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_116_cast_fu_396_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln193_4_fu_479_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln193_fu_436_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln193_1_fu_594_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_599_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal lhs_fu_606_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal ret_V_fu_614_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_117 : BOOLEAN;
    signal ap_enable_state4_pp0_iter3_stage0 : BOOLEAN;
    signal ap_enable_operation_120 : BOOLEAN;
    signal ap_enable_state5_pp0_iter4_stage0 : BOOLEAN;
    signal ap_enable_operation_131 : BOOLEAN;
    signal ap_enable_state6_pp0_iter5_stage0 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_mux_164_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (27 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        din3 : IN STD_LOGIC_VECTOR (27 downto 0);
        din4 : IN STD_LOGIC_VECTOR (27 downto 0);
        din5 : IN STD_LOGIC_VECTOR (27 downto 0);
        din6 : IN STD_LOGIC_VECTOR (27 downto 0);
        din7 : IN STD_LOGIC_VECTOR (27 downto 0);
        din8 : IN STD_LOGIC_VECTOR (27 downto 0);
        din9 : IN STD_LOGIC_VECTOR (27 downto 0);
        din10 : IN STD_LOGIC_VECTOR (27 downto 0);
        din11 : IN STD_LOGIC_VECTOR (27 downto 0);
        din12 : IN STD_LOGIC_VECTOR (27 downto 0);
        din13 : IN STD_LOGIC_VECTOR (27 downto 0);
        din14 : IN STD_LOGIC_VECTOR (27 downto 0);
        din15 : IN STD_LOGIC_VECTOR (27 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component GAT_compute_one_graph_mul_28s_28s_46_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (27 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_164_28_1_1_U1069 : component GAT_compute_one_graph_mux_164_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        din2_WIDTH => 28,
        din3_WIDTH => 28,
        din4_WIDTH => 28,
        din5_WIDTH => 28,
        din6_WIDTH => 28,
        din7_WIDTH => 28,
        din8_WIDTH => 28,
        din9_WIDTH => 28,
        din10_WIDTH => 28,
        din11_WIDTH => 28,
        din12_WIDTH => 28,
        din13_WIDTH => 28,
        din14_WIDTH => 28,
        din15_WIDTH => 28,
        din16_WIDTH => 4,
        dout_WIDTH => 28)
    port map (
        din0 => nodes_features_proj_V_0_q0,
        din1 => nodes_features_proj_V_1_q0,
        din2 => nodes_features_proj_V_2_q0,
        din3 => nodes_features_proj_V_3_q0,
        din4 => nodes_features_proj_V_4_q0,
        din5 => nodes_features_proj_V_5_q0,
        din6 => nodes_features_proj_V_6_q0,
        din7 => nodes_features_proj_V_7_q0,
        din8 => nodes_features_proj_V_8_q0,
        din9 => nodes_features_proj_V_9_q0,
        din10 => nodes_features_proj_V_10_q0,
        din11 => nodes_features_proj_V_11_q0,
        din12 => nodes_features_proj_V_12_q0,
        din13 => nodes_features_proj_V_13_q0,
        din14 => nodes_features_proj_V_14_q0,
        din15 => nodes_features_proj_V_15_q0,
        din16 => trunc_ln1171_2_reg_701_pp0_iter2_reg,
        dout => tmp_fu_545_p18);

    mul_28s_28s_46_1_1_U1070 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => tmp_reg_796,
        din1 => all_attention_coefficients_V_load_reg_791,
        dout => r_V_fu_588_p2);

    flow_control_loop_pipe_sequential_init_U : component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    fout_1_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fout_1_fu_100 <= ap_const_lv5_0;
                elsif (((icmp_ln193_fu_410_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    fout_1_fu_100 <= add_ln197_fu_501_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_108 <= ap_const_lv36_0;
                elsif (((icmp_ln193_fu_410_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_108 <= add_ln193_2_fu_415_p2;
                end if;
            end if; 
        end if;
    end process;

    n2_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    n2_fu_104 <= ap_const_lv32_0;
                elsif (((icmp_ln193_fu_410_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    n2_fu_104 <= select_ln193_2_fu_462_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln193_fu_410_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln193_1_reg_685 <= add_ln193_1_fu_474_p2;
                add_ln193_3_reg_690 <= add_ln193_3_fu_487_p2;
                cmp8_mid1_reg_680 <= cmp8_mid1_fu_456_p2;
                icmp_ln197_reg_675 <= icmp_ln197_fu_430_p2;
                out_nodes_features_sum_V_addr_reg_695 <= zext_ln197_fu_492_p1(4 - 1 downto 0);
                trunc_ln1171_2_reg_701 <= trunc_ln1171_2_fu_497_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                all_attention_coefficients_V_load_reg_791 <= all_attention_coefficients_V_q0;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                cmp8_mid1_reg_680_pp0_iter2_reg <= cmp8_mid1_reg_680;
                cmp8_mid1_reg_680_pp0_iter3_reg <= cmp8_mid1_reg_680_pp0_iter2_reg;
                cmp8_mid1_reg_680_pp0_iter4_reg <= cmp8_mid1_reg_680_pp0_iter3_reg;
                cmp8_reg_666_pp0_iter2_reg <= cmp8_reg_666;
                cmp8_reg_666_pp0_iter3_reg <= cmp8_reg_666_pp0_iter2_reg;
                cmp8_reg_666_pp0_iter4_reg <= cmp8_reg_666_pp0_iter3_reg;
                icmp_ln197_reg_675_pp0_iter2_reg <= icmp_ln197_reg_675;
                icmp_ln197_reg_675_pp0_iter3_reg <= icmp_ln197_reg_675_pp0_iter2_reg;
                icmp_ln197_reg_675_pp0_iter4_reg <= icmp_ln197_reg_675_pp0_iter3_reg;
                out_nodes_features_sum_V_addr_reg_695_pp0_iter2_reg <= out_nodes_features_sum_V_addr_reg_695;
                out_nodes_features_sum_V_addr_reg_695_pp0_iter3_reg <= out_nodes_features_sum_V_addr_reg_695_pp0_iter2_reg;
                out_nodes_features_sum_V_addr_reg_695_pp0_iter4_reg <= out_nodes_features_sum_V_addr_reg_695_pp0_iter3_reg;
                r_V_reg_806 <= r_V_fu_588_p2;
                tmp_reg_796 <= tmp_fu_545_p18;
                trunc_ln1171_2_reg_701_pp0_iter2_reg <= trunc_ln1171_2_reg_701;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                cmp8_reg_666 <= cmp8_fu_404_p2;
                    zext_ln190_cast_reg_661(2 downto 0) <= zext_ln190_cast_fu_367_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                prev_V_reg_801 <= out_nodes_features_sum_V_q0;
            end if;
        end if;
    end process;
    zext_ln190_cast_reg_661(9 downto 3) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln193_1_fu_474_p2 <= std_logic_vector(unsigned(mul_ln195_1) + unsigned(trunc_ln193_fu_470_p1));
    add_ln193_2_fu_415_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_108) + unsigned(ap_const_lv36_1));
    add_ln193_3_fu_487_p2 <= std_logic_vector(unsigned(select_ln193_4_fu_479_p3) + unsigned(zext_ln190_cast_reg_661));
    add_ln193_fu_424_p2 <= std_logic_vector(unsigned(n2_fu_104) + unsigned(ap_const_lv32_1));
    add_ln197_fu_501_p2 <= std_logic_vector(unsigned(select_ln193_fu_436_p3) + unsigned(ap_const_lv5_1));
    all_attention_coefficients_V_address0 <= zext_ln195_fu_522_p1(18 - 1 downto 0);

    all_attention_coefficients_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            all_attention_coefficients_V_ce0 <= ap_const_logic_1;
        else 
            all_attention_coefficients_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln193_fu_410_p2)
    begin
        if (((icmp_ln193_fu_410_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

        ap_enable_operation_117 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_120 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_131 <= (ap_const_boolean_1 = ap_const_boolean_1);
    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state4_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state4_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_state5_pp0_iter4_stage0 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state6_pp0_iter5_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5)
    begin
                ap_enable_state6_pp0_iter5_stage0 <= ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    cmp8_fu_404_p2 <= "1" when (n2_fu_104 = ap_const_lv32_0) else "0";
    cmp8_mid1_fu_456_p2 <= "1" when (add_ln193_fu_424_p2 = ap_const_lv32_0) else "0";
    empty_fu_599_p3 <= 
        ap_const_lv28_0 when (select_ln193_1_fu_594_p3(0) = '1') else 
        prev_V_reg_801;
    icmp_ln193_fu_410_p2 <= "1" when (indvar_flatten_fu_108 = bound) else "0";
    icmp_ln197_fu_430_p2 <= "1" when (fout_1_fu_100 = ap_const_lv5_10) else "0";
    lhs_fu_606_p3 <= (empty_fu_599_p3 & ap_const_lv18_0);
    nodes_features_proj_V_0_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_0_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_10_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_10_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_11_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_11_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_12_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_12_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_13_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_13_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_14_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_14_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_15_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_15_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_1_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_1_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_2_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_2_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_3_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_3_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_4_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_4_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_5_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_5_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_6_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_6_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_7_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_7_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_8_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_8_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_9_address0 <= zext_ln1171_fu_526_p1(10 - 1 downto 0);

    nodes_features_proj_V_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_9_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_nodes_features_sum_V_address0 <= out_nodes_features_sum_V_addr_reg_695_pp0_iter2_reg;
    out_nodes_features_sum_V_address1 <= out_nodes_features_sum_V_addr_reg_695_pp0_iter4_reg;

    out_nodes_features_sum_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            out_nodes_features_sum_V_ce0 <= ap_const_logic_1;
        else 
            out_nodes_features_sum_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_nodes_features_sum_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            out_nodes_features_sum_V_ce1 <= ap_const_logic_1;
        else 
            out_nodes_features_sum_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_nodes_features_sum_V_d1 <= ret_V_fu_614_p2(45 downto 18);

    out_nodes_features_sum_V_we1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            out_nodes_features_sum_V_we1 <= ap_const_logic_1;
        else 
            out_nodes_features_sum_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_614_p2 <= std_logic_vector(unsigned(lhs_fu_606_p3) + unsigned(r_V_reg_806));
    select_ln193_1_fu_594_p3 <= 
        cmp8_mid1_reg_680_pp0_iter4_reg when (icmp_ln197_reg_675_pp0_iter4_reg(0) = '1') else 
        cmp8_reg_666_pp0_iter4_reg;
    select_ln193_2_fu_462_p3 <= 
        add_ln193_fu_424_p2 when (icmp_ln197_fu_430_p2(0) = '1') else 
        n2_fu_104;
    select_ln193_4_fu_479_p3 <= 
        tmp_117_cast_fu_448_p3 when (icmp_ln197_fu_430_p2(0) = '1') else 
        tmp_116_cast_fu_396_p3;
    select_ln193_fu_436_p3 <= 
        ap_const_lv5_0 when (icmp_ln197_fu_430_p2(0) = '1') else 
        fout_1_fu_100;
    tmp_116_cast_fu_396_p3 <= (trunc_ln1171_fu_392_p1 & ap_const_lv2_0);
    tmp_117_cast_fu_448_p3 <= (trunc_ln1171_1_fu_444_p1 & ap_const_lv2_0);
    trunc_ln1171_1_fu_444_p1 <= add_ln193_fu_424_p2(8 - 1 downto 0);
    trunc_ln1171_2_fu_497_p1 <= select_ln193_fu_436_p3(4 - 1 downto 0);
    trunc_ln1171_fu_392_p1 <= n2_fu_104(8 - 1 downto 0);
    trunc_ln193_fu_470_p1 <= select_ln193_2_fu_462_p3(18 - 1 downto 0);
    zext_ln1171_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln193_3_reg_690),64));
    zext_ln190_cast_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln190),10));
    zext_ln195_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln193_1_reg_685),64));
    zext_ln197_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln193_fu_436_p3),64));
end behav;
