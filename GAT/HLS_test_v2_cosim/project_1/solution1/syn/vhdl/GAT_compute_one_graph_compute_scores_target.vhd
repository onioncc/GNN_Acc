-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GAT_compute_one_graph_compute_scores_target is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    num_of_nodes : IN STD_LOGIC_VECTOR (31 downto 0);
    layer : IN STD_LOGIC_VECTOR (2 downto 0);
    scoring_fn_target_V_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_0_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_0_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_1_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_1_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_2_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_2_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_3_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_3_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_4_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_4_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_5_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_5_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_6_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_6_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_7_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_7_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_8_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_8_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_9_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_9_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_10_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_10_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_11_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_11_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_12_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_12_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_13_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_13_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_14_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_14_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scoring_fn_target_V_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    scoring_fn_target_V_15_ce0 : OUT STD_LOGIC;
    scoring_fn_target_V_15_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_0_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_0_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_1_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_1_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_2_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_2_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_3_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_3_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_4_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_4_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_5_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_5_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_6_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_6_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_7_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_7_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_8_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_8_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_9_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_9_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_10_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_10_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_11_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_11_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_12_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_12_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_13_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_13_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_14_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_14_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    nodes_features_proj_V_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    nodes_features_proj_V_15_ce0 : OUT STD_LOGIC;
    nodes_features_proj_V_15_q0 : IN STD_LOGIC_VECTOR (27 downto 0);
    scores_target_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    scores_target_V_ce1 : OUT STD_LOGIC;
    scores_target_V_we1 : OUT STD_LOGIC;
    scores_target_V_d1 : OUT STD_LOGIC_VECTOR (27 downto 0) );
end;


architecture behav of GAT_compute_one_graph_compute_scores_target is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv10_C8 : STD_LOGIC_VECTOR (9 downto 0) := "0011001000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln75_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_fu_589_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_1312 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_597_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_s_reg_1317 : STD_LOGIC_VECTOR (33 downto 0);
    signal icmp_ln76_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_1322 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln75_fu_646_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln75_reg_1331 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln75_reg_1331_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln75_reg_1331_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1171_fu_703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1342 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1342_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1342_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1342_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_reg_1342_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_fu_721_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_reg_1374 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_reg_1374_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_reg_1374_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_reg_1374_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_reg_1374_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal scoring_fn_target_V_0_load_reg_1406 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_1_load_reg_1411 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_2_load_reg_1416 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_0_load_reg_1451 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_1_load_reg_1456 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_2_load_reg_1461 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_3_load_reg_1466 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_4_load_reg_1471 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_5_load_reg_1476 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_64_fu_754_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_64_reg_1511 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_64_reg_1516 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_65_fu_773_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_65_reg_1521 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_3_load_reg_1526 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_4_load_reg_1531 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_5_load_reg_1536 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_6_load_reg_1541 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_7_load_reg_1546 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_8_load_reg_1551 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1279_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln81_reg_1586 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln81_reg_1586_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln81_reg_1586_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln81_reg_1586_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln81_reg_1586_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1171_66_fu_826_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_66_reg_1591 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_66_reg_1596 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_67_fu_845_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_67_reg_1601 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_68_fu_854_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_68_reg_1606 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_6_load_reg_1611 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_7_load_reg_1616 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_8_load_reg_1621 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_9_load_reg_1626 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_10_load_reg_1631 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_11_load_reg_1636 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_69_fu_930_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_69_reg_1671 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_69_reg_1676 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_70_fu_949_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_70_reg_1681 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_71_fu_958_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_71_reg_1686 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_9_load_reg_1691 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_10_load_reg_1696 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_11_load_reg_1701 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_12_load_reg_1706 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_13_load_reg_1711 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_14_load_reg_1716 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_72_fu_1034_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_72_reg_1731 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_72_reg_1736 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_73_fu_1053_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_73_reg_1741 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_74_fu_1062_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_74_reg_1746 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_12_load_reg_1751 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_13_load_reg_1756 : STD_LOGIC_VECTOR (27 downto 0);
    signal nodes_features_proj_V_14_load_reg_1761 : STD_LOGIC_VECTOR (27 downto 0);
    signal scoring_fn_target_V_15_load_reg_1766 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_75_fu_1138_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_75_reg_1771 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_75_reg_1776 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_76_fu_1157_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_76_reg_1781 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_77_fu_1166_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_77_reg_1786 : STD_LOGIC_VECTOR (45 downto 0);
    signal nodes_features_proj_V_15_load_reg_1791 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1171_78_fu_1236_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1171_78_reg_1796 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_78_reg_1801 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln81_1_fu_1252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_132 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln76_fu_654_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal nh_fu_136 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln75_1_fu_679_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_fu_140 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln75_1_fu_640_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal n_cast_fu_626_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln75_fu_673_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln75_1_fu_694_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln75_2_fu_698_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1169_fu_710_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln81_fu_686_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1169_fu_715_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1171_fu_745_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln_fu_788_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_fu_795_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_65_fu_800_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_s_fu_810_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_64_fu_818_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_63_fu_869_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_65_fu_876_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_67_fu_881_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_64_fu_891_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_66_fu_899_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_68_fu_904_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_65_fu_914_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_67_fu_922_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_66_fu_973_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_68_fu_980_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_70_fu_985_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_67_fu_995_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_69_fu_1003_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_71_fu_1008_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_68_fu_1018_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_70_fu_1026_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_69_fu_1077_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_71_fu_1084_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_73_fu_1089_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_70_fu_1099_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_72_fu_1107_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_74_fu_1112_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_71_fu_1122_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_73_fu_1130_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_72_fu_1175_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_74_fu_1182_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_76_fu_1187_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_73_fu_1197_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_75_fu_1205_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_77_fu_1210_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln737_74_fu_1220_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_76_fu_1228_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln737_75_fu_1256_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1245_77_fu_1263_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1279_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1279_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1279_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component GAT_compute_one_graph_mul_28s_28s_46_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (27 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component GAT_compute_one_graph_mac_muladd_3ns_8ns_10ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_28s_28s_46_1_1_U963 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_0_load_reg_1406,
        din1 => nodes_features_proj_V_0_load_reg_1451,
        dout => mul_ln1171_fu_745_p2);

    mul_28s_28s_46_1_1_U964 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_1_load_reg_1411,
        din1 => nodes_features_proj_V_1_load_reg_1456,
        dout => mul_ln1171_64_fu_754_p2);

    mul_28s_28s_46_1_1_U965 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_2_load_reg_1416,
        din1 => nodes_features_proj_V_2_load_reg_1461,
        dout => mul_ln1171_65_fu_773_p2);

    mul_28s_28s_46_1_1_U966 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_3_load_reg_1466,
        din1 => nodes_features_proj_V_3_load_reg_1526,
        dout => mul_ln1171_66_fu_826_p2);

    mul_28s_28s_46_1_1_U967 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_4_load_reg_1471,
        din1 => nodes_features_proj_V_4_load_reg_1531,
        dout => mul_ln1171_67_fu_845_p2);

    mul_28s_28s_46_1_1_U968 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_5_load_reg_1476,
        din1 => nodes_features_proj_V_5_load_reg_1536,
        dout => mul_ln1171_68_fu_854_p2);

    mul_28s_28s_46_1_1_U969 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_6_load_reg_1541,
        din1 => nodes_features_proj_V_6_load_reg_1611,
        dout => mul_ln1171_69_fu_930_p2);

    mul_28s_28s_46_1_1_U970 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_7_load_reg_1546,
        din1 => nodes_features_proj_V_7_load_reg_1616,
        dout => mul_ln1171_70_fu_949_p2);

    mul_28s_28s_46_1_1_U971 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_8_load_reg_1551,
        din1 => nodes_features_proj_V_8_load_reg_1621,
        dout => mul_ln1171_71_fu_958_p2);

    mul_28s_28s_46_1_1_U972 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_9_load_reg_1626,
        din1 => nodes_features_proj_V_9_load_reg_1691,
        dout => mul_ln1171_72_fu_1034_p2);

    mul_28s_28s_46_1_1_U973 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_10_load_reg_1631,
        din1 => nodes_features_proj_V_10_load_reg_1696,
        dout => mul_ln1171_73_fu_1053_p2);

    mul_28s_28s_46_1_1_U974 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_11_load_reg_1636,
        din1 => nodes_features_proj_V_11_load_reg_1701,
        dout => mul_ln1171_74_fu_1062_p2);

    mul_28s_28s_46_1_1_U975 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_12_load_reg_1706,
        din1 => nodes_features_proj_V_12_load_reg_1751,
        dout => mul_ln1171_75_fu_1138_p2);

    mul_28s_28s_46_1_1_U976 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_13_load_reg_1711,
        din1 => nodes_features_proj_V_13_load_reg_1756,
        dout => mul_ln1171_76_fu_1157_p2);

    mul_28s_28s_46_1_1_U977 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_14_load_reg_1716,
        din1 => nodes_features_proj_V_14_load_reg_1761,
        dout => mul_ln1171_77_fu_1166_p2);

    mul_28s_28s_46_1_1_U978 : component GAT_compute_one_graph_mul_28s_28s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 28,
        dout_WIDTH => 46)
    port map (
        din0 => scoring_fn_target_V_15_load_reg_1766,
        din1 => nodes_features_proj_V_15_load_reg_1791,
        dout => mul_ln1171_78_fu_1236_p2);

    mac_muladd_3ns_8ns_10ns_10_4_1_U979 : component GAT_compute_one_graph_mac_muladd_3ns_8ns_10ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1279_p0,
        din1 => grp_fu_1279_p1,
        din2 => select_ln75_reg_1331_pp0_iter3_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_1279_p3);

    flow_control_loop_pipe_sequential_init_U : component GAT_compute_one_graph_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_140 <= ap_const_lv34_0;
                elsif (((icmp_ln75_fu_635_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_140 <= add_ln75_1_fu_640_p2;
                end if;
            end if; 
        end if;
    end process;

    n_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_132 <= ap_const_lv10_0;
                elsif (((icmp_ln75_fu_635_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    n_fu_132 <= add_ln76_fu_654_p2;
                end if;
            end if; 
        end if;
    end process;

    nh_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    nh_fu_136 <= ap_const_lv3_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    nh_fu_136 <= select_ln75_1_fu_679_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                add_ln81_reg_1586 <= grp_fu_1279_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln81_reg_1586_pp0_iter6_reg <= add_ln81_reg_1586;
                add_ln81_reg_1586_pp0_iter7_reg <= add_ln81_reg_1586_pp0_iter6_reg;
                add_ln81_reg_1586_pp0_iter8_reg <= add_ln81_reg_1586_pp0_iter7_reg;
                add_ln81_reg_1586_pp0_iter9_reg <= add_ln81_reg_1586_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                mul_ln1171_64_reg_1511 <= mul_ln1171_64_fu_754_p2;
                mul_ln1171_65_reg_1521 <= mul_ln1171_65_fu_773_p2;
                mul_ln1171_66_reg_1591 <= mul_ln1171_66_fu_826_p2;
                mul_ln1171_67_reg_1601 <= mul_ln1171_67_fu_845_p2;
                mul_ln1171_68_reg_1606 <= mul_ln1171_68_fu_854_p2;
                mul_ln1171_69_reg_1671 <= mul_ln1171_69_fu_930_p2;
                mul_ln1171_70_reg_1681 <= mul_ln1171_70_fu_949_p2;
                mul_ln1171_71_reg_1686 <= mul_ln1171_71_fu_958_p2;
                mul_ln1171_72_reg_1731 <= mul_ln1171_72_fu_1034_p2;
                mul_ln1171_73_reg_1741 <= mul_ln1171_73_fu_1053_p2;
                mul_ln1171_74_reg_1746 <= mul_ln1171_74_fu_1062_p2;
                mul_ln1171_75_reg_1771 <= mul_ln1171_75_fu_1138_p2;
                mul_ln1171_76_reg_1781 <= mul_ln1171_76_fu_1157_p2;
                mul_ln1171_77_reg_1786 <= mul_ln1171_77_fu_1166_p2;
                mul_ln1171_78_reg_1796 <= mul_ln1171_78_fu_1236_p2;
                nodes_features_proj_V_0_load_reg_1451 <= nodes_features_proj_V_0_q0;
                nodes_features_proj_V_10_load_reg_1696 <= nodes_features_proj_V_10_q0;
                nodes_features_proj_V_11_load_reg_1701 <= nodes_features_proj_V_11_q0;
                nodes_features_proj_V_12_load_reg_1751 <= nodes_features_proj_V_12_q0;
                nodes_features_proj_V_13_load_reg_1756 <= nodes_features_proj_V_13_q0;
                nodes_features_proj_V_14_load_reg_1761 <= nodes_features_proj_V_14_q0;
                nodes_features_proj_V_15_load_reg_1791 <= nodes_features_proj_V_15_q0;
                nodes_features_proj_V_1_load_reg_1456 <= nodes_features_proj_V_1_q0;
                nodes_features_proj_V_2_load_reg_1461 <= nodes_features_proj_V_2_q0;
                nodes_features_proj_V_3_load_reg_1526 <= nodes_features_proj_V_3_q0;
                nodes_features_proj_V_4_load_reg_1531 <= nodes_features_proj_V_4_q0;
                nodes_features_proj_V_5_load_reg_1536 <= nodes_features_proj_V_5_q0;
                nodes_features_proj_V_6_load_reg_1611 <= nodes_features_proj_V_6_q0;
                nodes_features_proj_V_7_load_reg_1616 <= nodes_features_proj_V_7_q0;
                nodes_features_proj_V_8_load_reg_1621 <= nodes_features_proj_V_8_q0;
                nodes_features_proj_V_9_load_reg_1691 <= nodes_features_proj_V_9_q0;
                scoring_fn_target_V_0_load_reg_1406 <= scoring_fn_target_V_0_q0;
                scoring_fn_target_V_10_load_reg_1631 <= scoring_fn_target_V_10_q0;
                scoring_fn_target_V_11_load_reg_1636 <= scoring_fn_target_V_11_q0;
                scoring_fn_target_V_12_load_reg_1706 <= scoring_fn_target_V_12_q0;
                scoring_fn_target_V_13_load_reg_1711 <= scoring_fn_target_V_13_q0;
                scoring_fn_target_V_14_load_reg_1716 <= scoring_fn_target_V_14_q0;
                scoring_fn_target_V_15_load_reg_1766 <= scoring_fn_target_V_15_q0;
                scoring_fn_target_V_1_load_reg_1411 <= scoring_fn_target_V_1_q0;
                scoring_fn_target_V_2_load_reg_1416 <= scoring_fn_target_V_2_q0;
                scoring_fn_target_V_3_load_reg_1466 <= scoring_fn_target_V_3_q0;
                scoring_fn_target_V_4_load_reg_1471 <= scoring_fn_target_V_4_q0;
                scoring_fn_target_V_5_load_reg_1476 <= scoring_fn_target_V_5_q0;
                scoring_fn_target_V_6_load_reg_1541 <= scoring_fn_target_V_6_q0;
                scoring_fn_target_V_7_load_reg_1546 <= scoring_fn_target_V_7_q0;
                scoring_fn_target_V_8_load_reg_1551 <= scoring_fn_target_V_8_q0;
                scoring_fn_target_V_9_load_reg_1626 <= scoring_fn_target_V_9_q0;
                select_ln75_reg_1331_pp0_iter2_reg <= select_ln75_reg_1331;
                select_ln75_reg_1331_pp0_iter3_reg <= select_ln75_reg_1331_pp0_iter2_reg;
                tmp_64_reg_1516 <= mul_ln1171_fu_745_p2(45 downto 18);
                tmp_66_reg_1596 <= add_ln1245_64_fu_818_p2(45 downto 18);
                tmp_69_reg_1676 <= add_ln1245_67_fu_922_p2(45 downto 18);
                tmp_72_reg_1736 <= add_ln1245_70_fu_1026_p2(45 downto 18);
                tmp_75_reg_1776 <= add_ln1245_73_fu_1130_p2(45 downto 18);
                tmp_78_reg_1801 <= add_ln1245_76_fu_1228_p2(45 downto 18);
                    zext_ln1169_reg_1374(9 downto 0) <= zext_ln1169_fu_721_p1(9 downto 0);
                    zext_ln1169_reg_1374_pp0_iter3_reg(9 downto 0) <= zext_ln1169_reg_1374(9 downto 0);
                    zext_ln1169_reg_1374_pp0_iter4_reg(9 downto 0) <= zext_ln1169_reg_1374_pp0_iter3_reg(9 downto 0);
                    zext_ln1169_reg_1374_pp0_iter5_reg(9 downto 0) <= zext_ln1169_reg_1374_pp0_iter4_reg(9 downto 0);
                    zext_ln1169_reg_1374_pp0_iter6_reg(9 downto 0) <= zext_ln1169_reg_1374_pp0_iter5_reg(9 downto 0);
                    zext_ln1171_reg_1342(4 downto 0) <= zext_ln1171_fu_703_p1(4 downto 0);
                    zext_ln1171_reg_1342_pp0_iter3_reg(4 downto 0) <= zext_ln1171_reg_1342(4 downto 0);
                    zext_ln1171_reg_1342_pp0_iter4_reg(4 downto 0) <= zext_ln1171_reg_1342_pp0_iter3_reg(4 downto 0);
                    zext_ln1171_reg_1342_pp0_iter5_reg(4 downto 0) <= zext_ln1171_reg_1342_pp0_iter4_reg(4 downto 0);
                    zext_ln1171_reg_1342_pp0_iter6_reg(4 downto 0) <= zext_ln1171_reg_1342_pp0_iter5_reg(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln76_reg_1322 <= icmp_ln76_fu_630_p2;
                    tmp_reg_1312(4 downto 2) <= tmp_fu_589_p3(4 downto 2);
                    tmp_s_reg_1317(33 downto 2) <= tmp_s_fu_597_p3(33 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_fu_635_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln75_reg_1331 <= select_ln75_fu_646_p3;
            end if;
        end if;
    end process;
    tmp_reg_1312(1 downto 0) <= "00";
    tmp_s_reg_1317(1 downto 0) <= "00";
    zext_ln1171_reg_1342(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1171_reg_1342_pp0_iter3_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1171_reg_1342_pp0_iter4_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1171_reg_1342_pp0_iter5_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1171_reg_1342_pp0_iter6_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln1169_reg_1374(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln1169_reg_1374_pp0_iter3_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln1169_reg_1374_pp0_iter4_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln1169_reg_1374_pp0_iter5_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln1169_reg_1374_pp0_iter6_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1169_fu_715_p2 <= std_logic_vector(unsigned(shl_ln1169_fu_710_p2) + unsigned(zext_ln81_fu_686_p1));
    add_ln1245_64_fu_818_p2 <= std_logic_vector(unsigned(shl_ln737_s_fu_810_p3) + unsigned(mul_ln1171_65_reg_1521));
    add_ln1245_65_fu_876_p2 <= std_logic_vector(unsigned(shl_ln737_63_fu_869_p3) + unsigned(mul_ln1171_66_reg_1591));
    add_ln1245_66_fu_899_p2 <= std_logic_vector(unsigned(shl_ln737_64_fu_891_p3) + unsigned(mul_ln1171_67_reg_1601));
    add_ln1245_67_fu_922_p2 <= std_logic_vector(unsigned(shl_ln737_65_fu_914_p3) + unsigned(mul_ln1171_68_reg_1606));
    add_ln1245_68_fu_980_p2 <= std_logic_vector(unsigned(shl_ln737_66_fu_973_p3) + unsigned(mul_ln1171_69_reg_1671));
    add_ln1245_69_fu_1003_p2 <= std_logic_vector(unsigned(shl_ln737_67_fu_995_p3) + unsigned(mul_ln1171_70_reg_1681));
    add_ln1245_70_fu_1026_p2 <= std_logic_vector(unsigned(shl_ln737_68_fu_1018_p3) + unsigned(mul_ln1171_71_reg_1686));
    add_ln1245_71_fu_1084_p2 <= std_logic_vector(unsigned(shl_ln737_69_fu_1077_p3) + unsigned(mul_ln1171_72_reg_1731));
    add_ln1245_72_fu_1107_p2 <= std_logic_vector(unsigned(shl_ln737_70_fu_1099_p3) + unsigned(mul_ln1171_73_reg_1741));
    add_ln1245_73_fu_1130_p2 <= std_logic_vector(unsigned(shl_ln737_71_fu_1122_p3) + unsigned(mul_ln1171_74_reg_1746));
    add_ln1245_74_fu_1182_p2 <= std_logic_vector(unsigned(shl_ln737_72_fu_1175_p3) + unsigned(mul_ln1171_75_reg_1771));
    add_ln1245_75_fu_1205_p2 <= std_logic_vector(unsigned(shl_ln737_73_fu_1197_p3) + unsigned(mul_ln1171_76_reg_1781));
    add_ln1245_76_fu_1228_p2 <= std_logic_vector(unsigned(shl_ln737_74_fu_1220_p3) + unsigned(mul_ln1171_77_reg_1786));
    add_ln1245_77_fu_1263_p2 <= std_logic_vector(unsigned(shl_ln737_75_fu_1256_p3) + unsigned(mul_ln1171_78_reg_1796));
    add_ln1245_fu_795_p2 <= std_logic_vector(unsigned(shl_ln_fu_788_p3) + unsigned(mul_ln1171_64_reg_1511));
    add_ln75_1_fu_640_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_140) + unsigned(ap_const_lv34_1));
    add_ln75_2_fu_698_p2 <= std_logic_vector(unsigned(tmp_reg_1312) + unsigned(zext_ln75_1_fu_694_p1));
    add_ln75_fu_673_p2 <= std_logic_vector(unsigned(nh_fu_136) + unsigned(ap_const_lv3_1));
    add_ln76_fu_654_p2 <= std_logic_vector(unsigned(select_ln75_fu_646_p3) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln75_fu_635_p2)
    begin
        if (((icmp_ln75_fu_635_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1279_p0 <= grp_fu_1279_p00(3 - 1 downto 0);
    grp_fu_1279_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln75_1_fu_679_p3),10));
    grp_fu_1279_p1 <= ap_const_lv10_C8(8 - 1 downto 0);
    icmp_ln75_fu_635_p2 <= "1" when (indvar_flatten_fu_140 = tmp_s_reg_1317) else "0";
    icmp_ln76_fu_630_p2 <= "1" when (n_cast_fu_626_p1 = num_of_nodes) else "0";
    n_cast_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_fu_132),32));
    nodes_features_proj_V_0_address0 <= zext_ln1169_fu_721_p1(10 - 1 downto 0);

    nodes_features_proj_V_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_0_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_10_address0 <= zext_ln1169_reg_1374_pp0_iter4_reg(10 - 1 downto 0);

    nodes_features_proj_V_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            nodes_features_proj_V_10_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_11_address0 <= zext_ln1169_reg_1374_pp0_iter4_reg(10 - 1 downto 0);

    nodes_features_proj_V_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            nodes_features_proj_V_11_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_12_address0 <= zext_ln1169_reg_1374_pp0_iter5_reg(10 - 1 downto 0);

    nodes_features_proj_V_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            nodes_features_proj_V_12_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_13_address0 <= zext_ln1169_reg_1374_pp0_iter5_reg(10 - 1 downto 0);

    nodes_features_proj_V_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            nodes_features_proj_V_13_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_14_address0 <= zext_ln1169_reg_1374_pp0_iter5_reg(10 - 1 downto 0);

    nodes_features_proj_V_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            nodes_features_proj_V_14_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_15_address0 <= zext_ln1169_reg_1374_pp0_iter6_reg(10 - 1 downto 0);

    nodes_features_proj_V_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            nodes_features_proj_V_15_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_1_address0 <= zext_ln1169_fu_721_p1(10 - 1 downto 0);

    nodes_features_proj_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_1_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_2_address0 <= zext_ln1169_fu_721_p1(10 - 1 downto 0);

    nodes_features_proj_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            nodes_features_proj_V_2_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_3_address0 <= zext_ln1169_reg_1374(10 - 1 downto 0);

    nodes_features_proj_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            nodes_features_proj_V_3_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_4_address0 <= zext_ln1169_reg_1374(10 - 1 downto 0);

    nodes_features_proj_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            nodes_features_proj_V_4_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_5_address0 <= zext_ln1169_reg_1374(10 - 1 downto 0);

    nodes_features_proj_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            nodes_features_proj_V_5_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_6_address0 <= zext_ln1169_reg_1374_pp0_iter3_reg(10 - 1 downto 0);

    nodes_features_proj_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            nodes_features_proj_V_6_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_7_address0 <= zext_ln1169_reg_1374_pp0_iter3_reg(10 - 1 downto 0);

    nodes_features_proj_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            nodes_features_proj_V_7_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_8_address0 <= zext_ln1169_reg_1374_pp0_iter3_reg(10 - 1 downto 0);

    nodes_features_proj_V_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            nodes_features_proj_V_8_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nodes_features_proj_V_9_address0 <= zext_ln1169_reg_1374_pp0_iter4_reg(10 - 1 downto 0);

    nodes_features_proj_V_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            nodes_features_proj_V_9_ce0 <= ap_const_logic_1;
        else 
            nodes_features_proj_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scores_target_V_address1 <= zext_ln81_1_fu_1252_p1(10 - 1 downto 0);

    scores_target_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            scores_target_V_ce1 <= ap_const_logic_1;
        else 
            scores_target_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    scores_target_V_d1 <= add_ln1245_77_fu_1263_p2(45 downto 18);

    scores_target_V_we1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            scores_target_V_we1 <= ap_const_logic_1;
        else 
            scores_target_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_0_address0 <= zext_ln1171_fu_703_p1(5 - 1 downto 0);

    scoring_fn_target_V_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            scoring_fn_target_V_0_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_10_address0 <= zext_ln1171_reg_1342_pp0_iter4_reg(5 - 1 downto 0);

    scoring_fn_target_V_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            scoring_fn_target_V_10_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_11_address0 <= zext_ln1171_reg_1342_pp0_iter4_reg(5 - 1 downto 0);

    scoring_fn_target_V_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            scoring_fn_target_V_11_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_12_address0 <= zext_ln1171_reg_1342_pp0_iter5_reg(5 - 1 downto 0);

    scoring_fn_target_V_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            scoring_fn_target_V_12_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_13_address0 <= zext_ln1171_reg_1342_pp0_iter5_reg(5 - 1 downto 0);

    scoring_fn_target_V_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            scoring_fn_target_V_13_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_14_address0 <= zext_ln1171_reg_1342_pp0_iter5_reg(5 - 1 downto 0);

    scoring_fn_target_V_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            scoring_fn_target_V_14_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_15_address0 <= zext_ln1171_reg_1342_pp0_iter6_reg(5 - 1 downto 0);

    scoring_fn_target_V_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            scoring_fn_target_V_15_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_1_address0 <= zext_ln1171_fu_703_p1(5 - 1 downto 0);

    scoring_fn_target_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            scoring_fn_target_V_1_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_2_address0 <= zext_ln1171_fu_703_p1(5 - 1 downto 0);

    scoring_fn_target_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            scoring_fn_target_V_2_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_3_address0 <= zext_ln1171_reg_1342(5 - 1 downto 0);

    scoring_fn_target_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            scoring_fn_target_V_3_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_4_address0 <= zext_ln1171_reg_1342(5 - 1 downto 0);

    scoring_fn_target_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            scoring_fn_target_V_4_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_5_address0 <= zext_ln1171_reg_1342(5 - 1 downto 0);

    scoring_fn_target_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            scoring_fn_target_V_5_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_6_address0 <= zext_ln1171_reg_1342_pp0_iter3_reg(5 - 1 downto 0);

    scoring_fn_target_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            scoring_fn_target_V_6_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_7_address0 <= zext_ln1171_reg_1342_pp0_iter3_reg(5 - 1 downto 0);

    scoring_fn_target_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            scoring_fn_target_V_7_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_8_address0 <= zext_ln1171_reg_1342_pp0_iter3_reg(5 - 1 downto 0);

    scoring_fn_target_V_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            scoring_fn_target_V_8_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scoring_fn_target_V_9_address0 <= zext_ln1171_reg_1342_pp0_iter4_reg(5 - 1 downto 0);

    scoring_fn_target_V_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            scoring_fn_target_V_9_ce0 <= ap_const_logic_1;
        else 
            scoring_fn_target_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln75_1_fu_679_p3 <= 
        add_ln75_fu_673_p2 when (icmp_ln76_reg_1322(0) = '1') else 
        nh_fu_136;
    select_ln75_fu_646_p3 <= 
        ap_const_lv10_0 when (icmp_ln76_fu_630_p2(0) = '1') else 
        n_fu_132;
    shl_ln1169_fu_710_p2 <= std_logic_vector(shift_left(unsigned(select_ln75_reg_1331),to_integer(unsigned('0' & ap_const_lv10_2(10-1 downto 0)))));
    shl_ln737_63_fu_869_p3 <= (tmp_66_reg_1596 & ap_const_lv18_0);
    shl_ln737_64_fu_891_p3 <= (tmp_67_fu_881_p4 & ap_const_lv18_0);
    shl_ln737_65_fu_914_p3 <= (tmp_68_fu_904_p4 & ap_const_lv18_0);
    shl_ln737_66_fu_973_p3 <= (tmp_69_reg_1676 & ap_const_lv18_0);
    shl_ln737_67_fu_995_p3 <= (tmp_70_fu_985_p4 & ap_const_lv18_0);
    shl_ln737_68_fu_1018_p3 <= (tmp_71_fu_1008_p4 & ap_const_lv18_0);
    shl_ln737_69_fu_1077_p3 <= (tmp_72_reg_1736 & ap_const_lv18_0);
    shl_ln737_70_fu_1099_p3 <= (tmp_73_fu_1089_p4 & ap_const_lv18_0);
    shl_ln737_71_fu_1122_p3 <= (tmp_74_fu_1112_p4 & ap_const_lv18_0);
    shl_ln737_72_fu_1175_p3 <= (tmp_75_reg_1776 & ap_const_lv18_0);
    shl_ln737_73_fu_1197_p3 <= (tmp_76_fu_1187_p4 & ap_const_lv18_0);
    shl_ln737_74_fu_1220_p3 <= (tmp_77_fu_1210_p4 & ap_const_lv18_0);
    shl_ln737_75_fu_1256_p3 <= (tmp_78_reg_1801 & ap_const_lv18_0);
    shl_ln737_s_fu_810_p3 <= (tmp_65_fu_800_p4 & ap_const_lv18_0);
    shl_ln_fu_788_p3 <= (tmp_64_reg_1516 & ap_const_lv18_0);
    tmp_65_fu_800_p4 <= add_ln1245_fu_795_p2(45 downto 18);
    tmp_67_fu_881_p4 <= add_ln1245_65_fu_876_p2(45 downto 18);
    tmp_68_fu_904_p4 <= add_ln1245_66_fu_899_p2(45 downto 18);
    tmp_70_fu_985_p4 <= add_ln1245_68_fu_980_p2(45 downto 18);
    tmp_71_fu_1008_p4 <= add_ln1245_69_fu_1003_p2(45 downto 18);
    tmp_73_fu_1089_p4 <= add_ln1245_71_fu_1084_p2(45 downto 18);
    tmp_74_fu_1112_p4 <= add_ln1245_72_fu_1107_p2(45 downto 18);
    tmp_76_fu_1187_p4 <= add_ln1245_74_fu_1182_p2(45 downto 18);
    tmp_77_fu_1210_p4 <= add_ln1245_75_fu_1205_p2(45 downto 18);
    tmp_fu_589_p3 <= (layer & ap_const_lv2_0);
    tmp_s_fu_597_p3 <= (num_of_nodes & ap_const_lv2_0);
    zext_ln1169_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1169_fu_715_p2),64));
    zext_ln1171_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_2_fu_698_p2),64));
    zext_ln75_1_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln75_1_fu_679_p3),5));
    zext_ln81_1_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln81_reg_1586_pp0_iter9_reg),64));
    zext_ln81_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln75_1_fu_679_p3),10));
end behav;
