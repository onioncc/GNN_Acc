// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GAT_compute_one_graph_compute_attention_coefficients_sum_Pipeline_VITIS_LOOP_111_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_of_nodes,
        mul_ln116_1,
        mul_ln113,
        sum_V_out,
        sum_V_out_ap_vld,
        all_scores_V_address0,
        all_scores_V_ce0,
        all_scores_V_q0,
        all_scores_V_address1,
        all_scores_V_ce1,
        all_scores_V_we1,
        all_scores_V_d1,
        connectivity_mask_final_address0,
        connectivity_mask_final_ce0,
        connectivity_mask_final_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] num_of_nodes;
input  [17:0] mul_ln116_1;
input  [15:0] mul_ln113;
output  [27:0] sum_V_out;
output   sum_V_out_ap_vld;
output  [17:0] all_scores_V_address0;
output   all_scores_V_ce0;
input  [27:0] all_scores_V_q0;
output  [17:0] all_scores_V_address1;
output   all_scores_V_ce1;
output   all_scores_V_we1;
output  [27:0] all_scores_V_d1;
output  [15:0] connectivity_mask_final_address0;
output   connectivity_mask_final_ce0;
input  [31:0] connectivity_mask_final_q0;

reg ap_idle;
reg sum_V_out_ap_vld;
reg all_scores_V_ce0;
reg all_scores_V_ce1;
reg all_scores_V_we1;
reg connectivity_mask_final_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln111_fu_153_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln111_reg_237;
reg   [0:0] icmp_ln111_reg_237_pp0_iter1_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter2_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter3_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter4_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter5_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter6_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter7_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter8_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter9_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter10_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter11_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter12_reg;
reg   [0:0] icmp_ln111_reg_237_pp0_iter13_reg;
wire   [17:0] add_ln116_fu_173_p2;
reg   [17:0] add_ln116_reg_241;
reg   [17:0] all_scores_V_addr_reg_251;
wire   [0:0] icmp_ln113_fu_199_p2;
reg   [0:0] icmp_ln113_reg_257;
reg   [0:0] icmp_ln113_reg_257_pp0_iter2_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter3_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter4_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter5_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter6_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter7_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter8_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter9_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter10_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter11_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter12_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter13_reg;
reg   [0:0] icmp_ln113_reg_257_pp0_iter14_reg;
wire   [27:0] grp_exp_28_10_s_fu_124_ap_return;
reg   [27:0] op2_V_reg_261;
wire    grp_exp_28_10_s_fu_124_ap_start;
wire    grp_exp_28_10_s_fu_124_ap_done;
wire    grp_exp_28_10_s_fu_124_ap_idle;
wire    grp_exp_28_10_s_fu_124_ap_ready;
reg    grp_exp_28_10_s_fu_124_ap_start_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln113_fu_185_p1;
wire   [63:0] zext_ln116_fu_195_p1;
reg   [31:0] n2_fu_60;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_n2_2;
wire   [31:0] add_ln111_fu_159_p2;
reg   [27:0] sum_V_fu_64;
wire   [27:0] sum_V_2_fu_208_p2;
wire    ap_block_pp0_stage0_01001;
wire   [17:0] trunc_ln116_1_fu_169_p1;
wire   [15:0] trunc_ln116_fu_165_p1;
wire   [15:0] add_ln113_fu_179_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 grp_exp_28_10_s_fu_124_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

GAT_compute_one_graph_exp_28_10_s grp_exp_28_10_s_fu_124(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_exp_28_10_s_fu_124_ap_start),
    .ap_done(grp_exp_28_10_s_fu_124_ap_done),
    .ap_idle(grp_exp_28_10_s_fu_124_ap_idle),
    .ap_ready(grp_exp_28_10_s_fu_124_ap_ready),
    .x(all_scores_V_q0),
    .ap_return(grp_exp_28_10_s_fu_124_ap_return)
);

GAT_compute_one_graph_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_exp_28_10_s_fu_124_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln113_fu_199_p2 == 1'd0))) begin
            grp_exp_28_10_s_fu_124_ap_start_reg <= 1'b1;
        end else if ((grp_exp_28_10_s_fu_124_ap_ready == 1'b1)) begin
            grp_exp_28_10_s_fu_124_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln111_fu_153_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n2_fu_60 <= add_ln111_fu_159_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n2_fu_60 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum_V_fu_64 <= 28'd0;
        end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln113_reg_257_pp0_iter14_reg == 1'd0))) begin
            sum_V_fu_64 <= sum_V_2_fu_208_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_153_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln116_reg_241 <= add_ln116_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        all_scores_V_addr_reg_251 <= zext_ln116_fu_195_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln111_reg_237 <= icmp_ln111_fu_153_p2;
        icmp_ln111_reg_237_pp0_iter1_reg <= icmp_ln111_reg_237;
        icmp_ln113_reg_257 <= icmp_ln113_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln111_reg_237_pp0_iter10_reg <= icmp_ln111_reg_237_pp0_iter9_reg;
        icmp_ln111_reg_237_pp0_iter11_reg <= icmp_ln111_reg_237_pp0_iter10_reg;
        icmp_ln111_reg_237_pp0_iter12_reg <= icmp_ln111_reg_237_pp0_iter11_reg;
        icmp_ln111_reg_237_pp0_iter13_reg <= icmp_ln111_reg_237_pp0_iter12_reg;
        icmp_ln111_reg_237_pp0_iter2_reg <= icmp_ln111_reg_237_pp0_iter1_reg;
        icmp_ln111_reg_237_pp0_iter3_reg <= icmp_ln111_reg_237_pp0_iter2_reg;
        icmp_ln111_reg_237_pp0_iter4_reg <= icmp_ln111_reg_237_pp0_iter3_reg;
        icmp_ln111_reg_237_pp0_iter5_reg <= icmp_ln111_reg_237_pp0_iter4_reg;
        icmp_ln111_reg_237_pp0_iter6_reg <= icmp_ln111_reg_237_pp0_iter5_reg;
        icmp_ln111_reg_237_pp0_iter7_reg <= icmp_ln111_reg_237_pp0_iter6_reg;
        icmp_ln111_reg_237_pp0_iter8_reg <= icmp_ln111_reg_237_pp0_iter7_reg;
        icmp_ln111_reg_237_pp0_iter9_reg <= icmp_ln111_reg_237_pp0_iter8_reg;
        icmp_ln113_reg_257_pp0_iter10_reg <= icmp_ln113_reg_257_pp0_iter9_reg;
        icmp_ln113_reg_257_pp0_iter11_reg <= icmp_ln113_reg_257_pp0_iter10_reg;
        icmp_ln113_reg_257_pp0_iter12_reg <= icmp_ln113_reg_257_pp0_iter11_reg;
        icmp_ln113_reg_257_pp0_iter13_reg <= icmp_ln113_reg_257_pp0_iter12_reg;
        icmp_ln113_reg_257_pp0_iter14_reg <= icmp_ln113_reg_257_pp0_iter13_reg;
        icmp_ln113_reg_257_pp0_iter2_reg <= icmp_ln113_reg_257;
        icmp_ln113_reg_257_pp0_iter3_reg <= icmp_ln113_reg_257_pp0_iter2_reg;
        icmp_ln113_reg_257_pp0_iter4_reg <= icmp_ln113_reg_257_pp0_iter3_reg;
        icmp_ln113_reg_257_pp0_iter5_reg <= icmp_ln113_reg_257_pp0_iter4_reg;
        icmp_ln113_reg_257_pp0_iter6_reg <= icmp_ln113_reg_257_pp0_iter5_reg;
        icmp_ln113_reg_257_pp0_iter7_reg <= icmp_ln113_reg_257_pp0_iter6_reg;
        icmp_ln113_reg_257_pp0_iter8_reg <= icmp_ln113_reg_257_pp0_iter7_reg;
        icmp_ln113_reg_257_pp0_iter9_reg <= icmp_ln113_reg_257_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln113_reg_257_pp0_iter13_reg == 1'd0))) begin
        op2_V_reg_261 <= grp_exp_28_10_s_fu_124_ap_return;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        all_scores_V_ce0 = 1'b1;
    end else begin
        all_scores_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        all_scores_V_ce1 = 1'b1;
    end else begin
        all_scores_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln113_reg_257 == 1'd1))) begin
        all_scores_V_we1 = 1'b1;
    end else begin
        all_scores_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln111_fu_153_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n2_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_n2_2 = n2_fu_60;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        connectivity_mask_final_ce0 = 1'b1;
    end else begin
        connectivity_mask_final_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln111_reg_237_pp0_iter13_reg == 1'd1))) begin
        sum_V_out_ap_vld = 1'b1;
    end else begin
        sum_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln111_fu_159_p2 = (ap_sig_allocacmp_n2_2 + 32'd1);

assign add_ln113_fu_179_p2 = (mul_ln113 + trunc_ln116_fu_165_p1);

assign add_ln116_fu_173_p2 = (mul_ln116_1 + trunc_ln116_1_fu_169_p1);

assign all_scores_V_address0 = zext_ln116_fu_195_p1;

assign all_scores_V_address1 = all_scores_V_addr_reg_251;

assign all_scores_V_d1 = 28'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign connectivity_mask_final_address0 = zext_ln113_fu_185_p1;

assign grp_exp_28_10_s_fu_124_ap_start = grp_exp_28_10_s_fu_124_ap_start_reg;

assign icmp_ln111_fu_153_p2 = ((ap_sig_allocacmp_n2_2 == num_of_nodes) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_199_p2 = ((connectivity_mask_final_q0 == 32'd2147483648) ? 1'b1 : 1'b0);

assign sum_V_2_fu_208_p2 = (op2_V_reg_261 + sum_V_fu_64);

assign sum_V_out = sum_V_fu_64;

assign trunc_ln116_1_fu_169_p1 = ap_sig_allocacmp_n2_2[17:0];

assign trunc_ln116_fu_165_p1 = ap_sig_allocacmp_n2_2[15:0];

assign zext_ln113_fu_185_p1 = add_ln113_fu_179_p2;

assign zext_ln116_fu_195_p1 = add_ln116_reg_241;

endmodule //GAT_compute_one_graph_compute_attention_coefficients_sum_Pipeline_VITIS_LOOP_111_3
