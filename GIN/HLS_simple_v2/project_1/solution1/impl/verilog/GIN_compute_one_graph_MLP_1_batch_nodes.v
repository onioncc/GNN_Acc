// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_one_graph_MLP_1_batch_nodes (
        mlp_in_local_address0,
        mlp_in_local_ce0,
        mlp_in_local_d0,
        mlp_in_local_q0,
        mlp_in_local_we0,
        mlp_in_local_address1,
        mlp_in_local_ce1,
        mlp_in_local_d1,
        mlp_in_local_q1,
        mlp_in_local_we1,
        mlp_in_local1_address0,
        mlp_in_local1_ce0,
        mlp_in_local1_d0,
        mlp_in_local1_q0,
        mlp_in_local1_we0,
        mlp_in_local1_address1,
        mlp_in_local1_ce1,
        mlp_in_local1_d1,
        mlp_in_local1_q1,
        mlp_in_local1_we1,
        mlp_in_local2_address0,
        mlp_in_local2_ce0,
        mlp_in_local2_d0,
        mlp_in_local2_q0,
        mlp_in_local2_we0,
        mlp_in_local2_address1,
        mlp_in_local2_ce1,
        mlp_in_local2_d1,
        mlp_in_local2_q1,
        mlp_in_local2_we1,
        mlp_in_local3_address0,
        mlp_in_local3_ce0,
        mlp_in_local3_d0,
        mlp_in_local3_q0,
        mlp_in_local3_we0,
        mlp_in_local3_address1,
        mlp_in_local3_ce1,
        mlp_in_local3_d1,
        mlp_in_local3_q1,
        mlp_in_local3_we1,
        mlp_out_local,
        mlp_out_local4,
        mlp_out_local5,
        mlp_out_local6,
        d_out,
        mlp_1_weights_V_address0,
        mlp_1_weights_V_ce0,
        mlp_1_weights_V_d0,
        mlp_1_weights_V_q0,
        mlp_1_weights_V_we0,
        mlp_1_weights_V_address1,
        mlp_1_weights_V_ce1,
        mlp_1_weights_V_d1,
        mlp_1_weights_V_q1,
        mlp_1_weights_V_we1,
        mlp_1_bias_V_address0,
        mlp_1_bias_V_ce0,
        mlp_1_bias_V_d0,
        mlp_1_bias_V_q0,
        mlp_1_bias_V_we0,
        mlp_1_bias_V_address1,
        mlp_1_bias_V_ce1,
        mlp_1_bias_V_d1,
        mlp_1_bias_V_q1,
        mlp_1_bias_V_we1,
        ap_clk,
        ap_rst,
        d_out_ap_vld,
        ap_start,
        mlp_out_local_ap_vld,
        ap_done,
        mlp_out_local4_ap_vld,
        mlp_out_local5_ap_vld,
        mlp_out_local6_ap_vld,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [9:0] mlp_in_local_address0;
output   mlp_in_local_ce0;
output  [31:0] mlp_in_local_d0;
input  [31:0] mlp_in_local_q0;
output   mlp_in_local_we0;
output  [9:0] mlp_in_local_address1;
output   mlp_in_local_ce1;
output  [31:0] mlp_in_local_d1;
input  [31:0] mlp_in_local_q1;
output   mlp_in_local_we1;
output  [9:0] mlp_in_local1_address0;
output   mlp_in_local1_ce0;
output  [31:0] mlp_in_local1_d0;
input  [31:0] mlp_in_local1_q0;
output   mlp_in_local1_we0;
output  [9:0] mlp_in_local1_address1;
output   mlp_in_local1_ce1;
output  [31:0] mlp_in_local1_d1;
input  [31:0] mlp_in_local1_q1;
output   mlp_in_local1_we1;
output  [9:0] mlp_in_local2_address0;
output   mlp_in_local2_ce0;
output  [31:0] mlp_in_local2_d0;
input  [31:0] mlp_in_local2_q0;
output   mlp_in_local2_we0;
output  [9:0] mlp_in_local2_address1;
output   mlp_in_local2_ce1;
output  [31:0] mlp_in_local2_d1;
input  [31:0] mlp_in_local2_q1;
output   mlp_in_local2_we1;
output  [9:0] mlp_in_local3_address0;
output   mlp_in_local3_ce0;
output  [31:0] mlp_in_local3_d0;
input  [31:0] mlp_in_local3_q0;
output   mlp_in_local3_we0;
output  [9:0] mlp_in_local3_address1;
output   mlp_in_local3_ce1;
output  [31:0] mlp_in_local3_d1;
input  [31:0] mlp_in_local3_q1;
output   mlp_in_local3_we1;
output  [30:0] mlp_out_local;
output  [30:0] mlp_out_local4;
output  [30:0] mlp_out_local5;
output  [30:0] mlp_out_local6;
input  [9:0] d_out;
output  [17:0] mlp_1_weights_V_address0;
output   mlp_1_weights_V_ce0;
output  [31:0] mlp_1_weights_V_d0;
input  [31:0] mlp_1_weights_V_q0;
output   mlp_1_weights_V_we0;
output  [17:0] mlp_1_weights_V_address1;
output   mlp_1_weights_V_ce1;
output  [31:0] mlp_1_weights_V_d1;
input  [31:0] mlp_1_weights_V_q1;
output   mlp_1_weights_V_we1;
output  [9:0] mlp_1_bias_V_address0;
output   mlp_1_bias_V_ce0;
output  [31:0] mlp_1_bias_V_d0;
input  [31:0] mlp_1_bias_V_q0;
output   mlp_1_bias_V_we0;
output  [9:0] mlp_1_bias_V_address1;
output   mlp_1_bias_V_ce1;
output  [31:0] mlp_1_bias_V_d1;
input  [31:0] mlp_1_bias_V_q1;
output   mlp_1_bias_V_we1;
input   ap_clk;
input   ap_rst;
input   d_out_ap_vld;
input   ap_start;
output   mlp_out_local_ap_vld;
output   ap_done;
output   mlp_out_local4_ap_vld;
output   mlp_out_local5_ap_vld;
output   mlp_out_local6_ap_vld;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    MLP_1_batch_nodes_entry59_U0_ap_start;
wire    MLP_1_batch_nodes_entry59_U0_ap_done;
wire    MLP_1_batch_nodes_entry59_U0_ap_continue;
wire    MLP_1_batch_nodes_entry59_U0_ap_idle;
wire    MLP_1_batch_nodes_entry59_U0_ap_ready;
wire   [9:0] MLP_1_batch_nodes_entry59_U0_d_out_out_din;
wire    MLP_1_batch_nodes_entry59_U0_d_out_out_write;
wire   [9:0] MLP_1_batch_nodes_entry59_U0_d_out_out1_din;
wire    MLP_1_batch_nodes_entry59_U0_d_out_out1_write;
wire    load_mlp_weight_vector_U0_ap_start;
wire    load_mlp_weight_vector_U0_ap_done;
wire    load_mlp_weight_vector_U0_ap_continue;
wire    load_mlp_weight_vector_U0_ap_idle;
wire    load_mlp_weight_vector_U0_ap_ready;
wire   [31:0] load_mlp_weight_vector_U0_mlp_1_weight_vector_din;
wire    load_mlp_weight_vector_U0_mlp_1_weight_vector_write;
wire    load_mlp_weight_vector_U0_d_out_read;
wire   [17:0] load_mlp_weight_vector_U0_mlp_1_weights_V_address0;
wire    load_mlp_weight_vector_U0_mlp_1_weights_V_ce0;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_ap_start;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_ap_done;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_ap_continue;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_ap_idle;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_d_out_read;
wire   [31:0] MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_load_out_out_din;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_load_out_out_write;
wire   [9:0] MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_address0;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_ce0;
wire    MLP_PE45_U0_ap_start;
wire    MLP_PE45_U0_ap_done;
wire    MLP_PE45_U0_ap_continue;
wire    MLP_PE45_U0_ap_idle;
wire    MLP_PE45_U0_ap_ready;
wire   [9:0] MLP_PE45_U0_mlp_in_local_address0;
wire    MLP_PE45_U0_mlp_in_local_ce0;
wire    MLP_PE45_U0_mlp_1_weight_fifo_0_V_V_read;
wire   [31:0] MLP_PE45_U0_mlp_1_weight_fifo_1_V_V_din;
wire    MLP_PE45_U0_mlp_1_weight_fifo_1_V_V_write;
wire    MLP_PE45_U0_mlp_1_bias_V_load_loc_read;
wire   [30:0] MLP_PE45_U0_mlp_out_local;
wire    MLP_PE45_U0_mlp_out_local_ap_vld;
wire   [31:0] MLP_PE45_U0_mlp_1_bias_V_load_loc_out_din;
wire    MLP_PE45_U0_mlp_1_bias_V_load_loc_out_write;
wire    ap_sync_continue;
wire    MLP_PE_146_U0_ap_start;
wire    MLP_PE_146_U0_ap_done;
wire    MLP_PE_146_U0_ap_continue;
wire    MLP_PE_146_U0_ap_idle;
wire    MLP_PE_146_U0_ap_ready;
wire   [9:0] MLP_PE_146_U0_mlp_in_local1_address0;
wire    MLP_PE_146_U0_mlp_in_local1_ce0;
wire    MLP_PE_146_U0_mlp_1_weight_fifo_1_V_V_read;
wire   [31:0] MLP_PE_146_U0_mlp_1_weight_fifo_2_V_V_din;
wire    MLP_PE_146_U0_mlp_1_weight_fifo_2_V_V_write;
wire    MLP_PE_146_U0_mlp_1_bias_V_load_loc_read;
wire   [30:0] MLP_PE_146_U0_mlp_out_local4;
wire    MLP_PE_146_U0_mlp_out_local4_ap_vld;
wire   [31:0] MLP_PE_146_U0_mlp_1_bias_V_load_loc_out_din;
wire    MLP_PE_146_U0_mlp_1_bias_V_load_loc_out_write;
wire    MLP_PE_147_U0_ap_start;
wire    MLP_PE_147_U0_ap_done;
wire    MLP_PE_147_U0_ap_continue;
wire    MLP_PE_147_U0_ap_idle;
wire    MLP_PE_147_U0_ap_ready;
wire   [9:0] MLP_PE_147_U0_mlp_in_local2_address0;
wire    MLP_PE_147_U0_mlp_in_local2_ce0;
wire    MLP_PE_147_U0_mlp_1_weight_fifo_2_V_V_read;
wire   [31:0] MLP_PE_147_U0_mlp_1_weight_fifo_3_V_V_din;
wire    MLP_PE_147_U0_mlp_1_weight_fifo_3_V_V_write;
wire    MLP_PE_147_U0_mlp_1_bias_V_load_loc_read;
wire   [30:0] MLP_PE_147_U0_mlp_out_local5;
wire    MLP_PE_147_U0_mlp_out_local5_ap_vld;
wire   [31:0] MLP_PE_147_U0_mlp_1_bias_V_load_loc_out_din;
wire    MLP_PE_147_U0_mlp_1_bias_V_load_loc_out_write;
wire    MLP_PE_148_U0_ap_start;
wire    MLP_PE_148_U0_ap_done;
wire    MLP_PE_148_U0_ap_continue;
wire    MLP_PE_148_U0_ap_idle;
wire    MLP_PE_148_U0_ap_ready;
wire   [9:0] MLP_PE_148_U0_mlp_in_local3_address0;
wire    MLP_PE_148_U0_mlp_in_local3_ce0;
wire    MLP_PE_148_U0_mlp_1_weight_fifo_3_V_V_read;
wire    MLP_PE_148_U0_mlp_1_bias_V_load_loc_read;
wire   [30:0] MLP_PE_148_U0_mlp_out_local6;
wire    MLP_PE_148_U0_mlp_out_local6_ap_vld;
wire    d_out_c_full_n;
wire   [9:0] d_out_c_dout;
wire    d_out_c_empty_n;
wire    d_out_c14_full_n;
wire   [9:0] d_out_c14_dout;
wire    d_out_c14_empty_n;
wire    mlp_1_weight_fifo_0_V_V_full_n;
wire   [31:0] mlp_1_weight_fifo_0_V_V_dout;
wire    mlp_1_weight_fifo_0_V_V_empty_n;
wire    mlp_1_bias_V_load_loc_c_full_n;
wire   [31:0] mlp_1_bias_V_load_loc_c_dout;
wire    mlp_1_bias_V_load_loc_c_empty_n;
wire    mlp_1_weight_fifo_1_V_V_full_n;
wire   [31:0] mlp_1_weight_fifo_1_V_V_dout;
wire    mlp_1_weight_fifo_1_V_V_empty_n;
wire    mlp_1_bias_V_load_loc_c15_full_n;
wire   [31:0] mlp_1_bias_V_load_loc_c15_dout;
wire    mlp_1_bias_V_load_loc_c15_empty_n;
wire    mlp_1_weight_fifo_2_V_V_full_n;
wire   [31:0] mlp_1_weight_fifo_2_V_V_dout;
wire    mlp_1_weight_fifo_2_V_V_empty_n;
wire    mlp_1_bias_V_load_loc_c16_full_n;
wire   [31:0] mlp_1_bias_V_load_loc_c16_dout;
wire    mlp_1_bias_V_load_loc_c16_empty_n;
wire    mlp_1_weight_fifo_3_V_V_full_n;
wire   [31:0] mlp_1_weight_fifo_3_V_V_dout;
wire    mlp_1_weight_fifo_3_V_V_empty_n;
wire    mlp_1_bias_V_load_loc_c17_full_n;
wire   [31:0] mlp_1_bias_V_load_loc_c17_dout;
wire    mlp_1_bias_V_load_loc_c17_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_MLP_1_batch_nodes_entry59_U0_ap_ready;
wire    ap_sync_MLP_1_batch_nodes_entry59_U0_ap_ready;
reg    ap_sync_reg_load_mlp_weight_vector_U0_ap_ready;
wire    ap_sync_load_mlp_weight_vector_U0_ap_ready;
reg    ap_sync_reg_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready;
wire    ap_sync_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready;
reg    ap_sync_reg_MLP_PE45_U0_ap_ready;
wire    ap_sync_MLP_PE45_U0_ap_ready;
reg    ap_sync_reg_MLP_PE_146_U0_ap_ready;
wire    ap_sync_MLP_PE_146_U0_ap_ready;
reg    ap_sync_reg_MLP_PE_147_U0_ap_ready;
wire    ap_sync_MLP_PE_147_U0_ap_ready;
reg    ap_sync_reg_MLP_PE_148_U0_ap_ready;
wire    ap_sync_MLP_PE_148_U0_ap_ready;
wire    MLP_1_batch_nodes_entry59_U0_start_full_n;
wire    MLP_1_batch_nodes_entry59_U0_start_write;
wire    load_mlp_weight_vector_U0_start_full_n;
wire    load_mlp_weight_vector_U0_start_write;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_start_full_n;
wire    MLP_1_batch_nodes_Block_split13_proc_U0_start_write;
wire    MLP_PE45_U0_start_full_n;
wire    MLP_PE45_U0_start_write;
wire    MLP_PE_146_U0_start_full_n;
wire    MLP_PE_146_U0_start_write;
wire    MLP_PE_147_U0_start_full_n;
wire    MLP_PE_147_U0_start_write;
wire    MLP_PE_148_U0_start_full_n;
wire    MLP_PE_148_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_MLP_1_batch_nodes_entry59_U0_ap_ready = 1'b0;
#0 ap_sync_reg_load_mlp_weight_vector_U0_ap_ready = 1'b0;
#0 ap_sync_reg_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_MLP_PE45_U0_ap_ready = 1'b0;
#0 ap_sync_reg_MLP_PE_146_U0_ap_ready = 1'b0;
#0 ap_sync_reg_MLP_PE_147_U0_ap_ready = 1'b0;
#0 ap_sync_reg_MLP_PE_148_U0_ap_ready = 1'b0;
end

GIN_compute_one_graph_MLP_1_batch_nodes_entry59 MLP_1_batch_nodes_entry59_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(MLP_1_batch_nodes_entry59_U0_ap_start),
    .ap_done(MLP_1_batch_nodes_entry59_U0_ap_done),
    .ap_continue(MLP_1_batch_nodes_entry59_U0_ap_continue),
    .ap_idle(MLP_1_batch_nodes_entry59_U0_ap_idle),
    .ap_ready(MLP_1_batch_nodes_entry59_U0_ap_ready),
    .d_out(d_out),
    .d_out_out_din(MLP_1_batch_nodes_entry59_U0_d_out_out_din),
    .d_out_out_full_n(d_out_c_full_n),
    .d_out_out_write(MLP_1_batch_nodes_entry59_U0_d_out_out_write),
    .d_out_out1_din(MLP_1_batch_nodes_entry59_U0_d_out_out1_din),
    .d_out_out1_full_n(d_out_c14_full_n),
    .d_out_out1_write(MLP_1_batch_nodes_entry59_U0_d_out_out1_write)
);

GIN_compute_one_graph_load_mlp_weight_vector load_mlp_weight_vector_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(load_mlp_weight_vector_U0_ap_start),
    .ap_done(load_mlp_weight_vector_U0_ap_done),
    .ap_continue(load_mlp_weight_vector_U0_ap_continue),
    .ap_idle(load_mlp_weight_vector_U0_ap_idle),
    .ap_ready(load_mlp_weight_vector_U0_ap_ready),
    .mlp_1_weight_vector_din(load_mlp_weight_vector_U0_mlp_1_weight_vector_din),
    .mlp_1_weight_vector_full_n(mlp_1_weight_fifo_0_V_V_full_n),
    .mlp_1_weight_vector_write(load_mlp_weight_vector_U0_mlp_1_weight_vector_write),
    .d_out_dout(d_out_c_dout),
    .d_out_empty_n(d_out_c_empty_n),
    .d_out_read(load_mlp_weight_vector_U0_d_out_read),
    .mlp_1_weights_V_address0(load_mlp_weight_vector_U0_mlp_1_weights_V_address0),
    .mlp_1_weights_V_ce0(load_mlp_weight_vector_U0_mlp_1_weights_V_ce0),
    .mlp_1_weights_V_q0(mlp_1_weights_V_q0)
);

GIN_compute_one_graph_MLP_1_batch_nodes_Block_split13_proc MLP_1_batch_nodes_Block_split13_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(MLP_1_batch_nodes_Block_split13_proc_U0_ap_start),
    .ap_done(MLP_1_batch_nodes_Block_split13_proc_U0_ap_done),
    .ap_continue(MLP_1_batch_nodes_Block_split13_proc_U0_ap_continue),
    .ap_idle(MLP_1_batch_nodes_Block_split13_proc_U0_ap_idle),
    .ap_ready(MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready),
    .d_out_dout(d_out_c14_dout),
    .d_out_empty_n(d_out_c14_empty_n),
    .d_out_read(MLP_1_batch_nodes_Block_split13_proc_U0_d_out_read),
    .mlp_1_bias_V_load_out_out_din(MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_load_out_out_din),
    .mlp_1_bias_V_load_out_out_full_n(mlp_1_bias_V_load_loc_c_full_n),
    .mlp_1_bias_V_load_out_out_write(MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_load_out_out_write),
    .mlp_1_bias_V_address0(MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_address0),
    .mlp_1_bias_V_ce0(MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_ce0),
    .mlp_1_bias_V_q0(mlp_1_bias_V_q0)
);

GIN_compute_one_graph_MLP_PE45 MLP_PE45_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(MLP_PE45_U0_ap_start),
    .ap_done(MLP_PE45_U0_ap_done),
    .ap_continue(MLP_PE45_U0_ap_continue),
    .ap_idle(MLP_PE45_U0_ap_idle),
    .ap_ready(MLP_PE45_U0_ap_ready),
    .mlp_in_local_address0(MLP_PE45_U0_mlp_in_local_address0),
    .mlp_in_local_ce0(MLP_PE45_U0_mlp_in_local_ce0),
    .mlp_in_local_q0(mlp_in_local_q0),
    .mlp_1_weight_fifo_0_V_V_dout(mlp_1_weight_fifo_0_V_V_dout),
    .mlp_1_weight_fifo_0_V_V_empty_n(mlp_1_weight_fifo_0_V_V_empty_n),
    .mlp_1_weight_fifo_0_V_V_read(MLP_PE45_U0_mlp_1_weight_fifo_0_V_V_read),
    .mlp_1_weight_fifo_1_V_V_din(MLP_PE45_U0_mlp_1_weight_fifo_1_V_V_din),
    .mlp_1_weight_fifo_1_V_V_full_n(mlp_1_weight_fifo_1_V_V_full_n),
    .mlp_1_weight_fifo_1_V_V_write(MLP_PE45_U0_mlp_1_weight_fifo_1_V_V_write),
    .mlp_1_bias_V_load_loc_dout(mlp_1_bias_V_load_loc_c_dout),
    .mlp_1_bias_V_load_loc_empty_n(mlp_1_bias_V_load_loc_c_empty_n),
    .mlp_1_bias_V_load_loc_read(MLP_PE45_U0_mlp_1_bias_V_load_loc_read),
    .mlp_out_local(MLP_PE45_U0_mlp_out_local),
    .mlp_out_local_ap_vld(MLP_PE45_U0_mlp_out_local_ap_vld),
    .mlp_1_bias_V_load_loc_out_din(MLP_PE45_U0_mlp_1_bias_V_load_loc_out_din),
    .mlp_1_bias_V_load_loc_out_full_n(mlp_1_bias_V_load_loc_c15_full_n),
    .mlp_1_bias_V_load_loc_out_write(MLP_PE45_U0_mlp_1_bias_V_load_loc_out_write)
);

GIN_compute_one_graph_MLP_PE_146 MLP_PE_146_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(MLP_PE_146_U0_ap_start),
    .ap_done(MLP_PE_146_U0_ap_done),
    .ap_continue(MLP_PE_146_U0_ap_continue),
    .ap_idle(MLP_PE_146_U0_ap_idle),
    .ap_ready(MLP_PE_146_U0_ap_ready),
    .mlp_in_local1_address0(MLP_PE_146_U0_mlp_in_local1_address0),
    .mlp_in_local1_ce0(MLP_PE_146_U0_mlp_in_local1_ce0),
    .mlp_in_local1_q0(mlp_in_local1_q0),
    .mlp_1_weight_fifo_1_V_V_dout(mlp_1_weight_fifo_1_V_V_dout),
    .mlp_1_weight_fifo_1_V_V_empty_n(mlp_1_weight_fifo_1_V_V_empty_n),
    .mlp_1_weight_fifo_1_V_V_read(MLP_PE_146_U0_mlp_1_weight_fifo_1_V_V_read),
    .mlp_1_weight_fifo_2_V_V_din(MLP_PE_146_U0_mlp_1_weight_fifo_2_V_V_din),
    .mlp_1_weight_fifo_2_V_V_full_n(mlp_1_weight_fifo_2_V_V_full_n),
    .mlp_1_weight_fifo_2_V_V_write(MLP_PE_146_U0_mlp_1_weight_fifo_2_V_V_write),
    .mlp_1_bias_V_load_loc_dout(mlp_1_bias_V_load_loc_c15_dout),
    .mlp_1_bias_V_load_loc_empty_n(mlp_1_bias_V_load_loc_c15_empty_n),
    .mlp_1_bias_V_load_loc_read(MLP_PE_146_U0_mlp_1_bias_V_load_loc_read),
    .mlp_out_local4(MLP_PE_146_U0_mlp_out_local4),
    .mlp_out_local4_ap_vld(MLP_PE_146_U0_mlp_out_local4_ap_vld),
    .mlp_1_bias_V_load_loc_out_din(MLP_PE_146_U0_mlp_1_bias_V_load_loc_out_din),
    .mlp_1_bias_V_load_loc_out_full_n(mlp_1_bias_V_load_loc_c16_full_n),
    .mlp_1_bias_V_load_loc_out_write(MLP_PE_146_U0_mlp_1_bias_V_load_loc_out_write)
);

GIN_compute_one_graph_MLP_PE_147 MLP_PE_147_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(MLP_PE_147_U0_ap_start),
    .ap_done(MLP_PE_147_U0_ap_done),
    .ap_continue(MLP_PE_147_U0_ap_continue),
    .ap_idle(MLP_PE_147_U0_ap_idle),
    .ap_ready(MLP_PE_147_U0_ap_ready),
    .mlp_in_local2_address0(MLP_PE_147_U0_mlp_in_local2_address0),
    .mlp_in_local2_ce0(MLP_PE_147_U0_mlp_in_local2_ce0),
    .mlp_in_local2_q0(mlp_in_local2_q0),
    .mlp_1_weight_fifo_2_V_V_dout(mlp_1_weight_fifo_2_V_V_dout),
    .mlp_1_weight_fifo_2_V_V_empty_n(mlp_1_weight_fifo_2_V_V_empty_n),
    .mlp_1_weight_fifo_2_V_V_read(MLP_PE_147_U0_mlp_1_weight_fifo_2_V_V_read),
    .mlp_1_weight_fifo_3_V_V_din(MLP_PE_147_U0_mlp_1_weight_fifo_3_V_V_din),
    .mlp_1_weight_fifo_3_V_V_full_n(mlp_1_weight_fifo_3_V_V_full_n),
    .mlp_1_weight_fifo_3_V_V_write(MLP_PE_147_U0_mlp_1_weight_fifo_3_V_V_write),
    .mlp_1_bias_V_load_loc_dout(mlp_1_bias_V_load_loc_c16_dout),
    .mlp_1_bias_V_load_loc_empty_n(mlp_1_bias_V_load_loc_c16_empty_n),
    .mlp_1_bias_V_load_loc_read(MLP_PE_147_U0_mlp_1_bias_V_load_loc_read),
    .mlp_out_local5(MLP_PE_147_U0_mlp_out_local5),
    .mlp_out_local5_ap_vld(MLP_PE_147_U0_mlp_out_local5_ap_vld),
    .mlp_1_bias_V_load_loc_out_din(MLP_PE_147_U0_mlp_1_bias_V_load_loc_out_din),
    .mlp_1_bias_V_load_loc_out_full_n(mlp_1_bias_V_load_loc_c17_full_n),
    .mlp_1_bias_V_load_loc_out_write(MLP_PE_147_U0_mlp_1_bias_V_load_loc_out_write)
);

GIN_compute_one_graph_MLP_PE_148 MLP_PE_148_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(MLP_PE_148_U0_ap_start),
    .ap_done(MLP_PE_148_U0_ap_done),
    .ap_continue(MLP_PE_148_U0_ap_continue),
    .ap_idle(MLP_PE_148_U0_ap_idle),
    .ap_ready(MLP_PE_148_U0_ap_ready),
    .mlp_in_local3_address0(MLP_PE_148_U0_mlp_in_local3_address0),
    .mlp_in_local3_ce0(MLP_PE_148_U0_mlp_in_local3_ce0),
    .mlp_in_local3_q0(mlp_in_local3_q0),
    .mlp_1_weight_fifo_3_V_V_dout(mlp_1_weight_fifo_3_V_V_dout),
    .mlp_1_weight_fifo_3_V_V_empty_n(mlp_1_weight_fifo_3_V_V_empty_n),
    .mlp_1_weight_fifo_3_V_V_read(MLP_PE_148_U0_mlp_1_weight_fifo_3_V_V_read),
    .mlp_1_bias_V_load_loc_dout(mlp_1_bias_V_load_loc_c17_dout),
    .mlp_1_bias_V_load_loc_empty_n(mlp_1_bias_V_load_loc_c17_empty_n),
    .mlp_1_bias_V_load_loc_read(MLP_PE_148_U0_mlp_1_bias_V_load_loc_read),
    .mlp_out_local6(MLP_PE_148_U0_mlp_out_local6),
    .mlp_out_local6_ap_vld(MLP_PE_148_U0_mlp_out_local6_ap_vld)
);

GIN_compute_one_graph_fifo_w10_d2_S d_out_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_1_batch_nodes_entry59_U0_d_out_out_din),
    .if_full_n(d_out_c_full_n),
    .if_write(MLP_1_batch_nodes_entry59_U0_d_out_out_write),
    .if_dout(d_out_c_dout),
    .if_empty_n(d_out_c_empty_n),
    .if_read(load_mlp_weight_vector_U0_d_out_read)
);

GIN_compute_one_graph_fifo_w10_d2_S d_out_c14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_1_batch_nodes_entry59_U0_d_out_out1_din),
    .if_full_n(d_out_c14_full_n),
    .if_write(MLP_1_batch_nodes_entry59_U0_d_out_out1_write),
    .if_dout(d_out_c14_dout),
    .if_empty_n(d_out_c14_empty_n),
    .if_read(MLP_1_batch_nodes_Block_split13_proc_U0_d_out_read)
);

GIN_compute_one_graph_fifo_w32_d2_S mlp_1_weight_fifo_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_mlp_weight_vector_U0_mlp_1_weight_vector_din),
    .if_full_n(mlp_1_weight_fifo_0_V_V_full_n),
    .if_write(load_mlp_weight_vector_U0_mlp_1_weight_vector_write),
    .if_dout(mlp_1_weight_fifo_0_V_V_dout),
    .if_empty_n(mlp_1_weight_fifo_0_V_V_empty_n),
    .if_read(MLP_PE45_U0_mlp_1_weight_fifo_0_V_V_read)
);

GIN_compute_one_graph_fifo_w32_d2_S mlp_1_bias_V_load_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_load_out_out_din),
    .if_full_n(mlp_1_bias_V_load_loc_c_full_n),
    .if_write(MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_load_out_out_write),
    .if_dout(mlp_1_bias_V_load_loc_c_dout),
    .if_empty_n(mlp_1_bias_V_load_loc_c_empty_n),
    .if_read(MLP_PE45_U0_mlp_1_bias_V_load_loc_read)
);

GIN_compute_one_graph_fifo_w32_d2_S mlp_1_weight_fifo_1_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_PE45_U0_mlp_1_weight_fifo_1_V_V_din),
    .if_full_n(mlp_1_weight_fifo_1_V_V_full_n),
    .if_write(MLP_PE45_U0_mlp_1_weight_fifo_1_V_V_write),
    .if_dout(mlp_1_weight_fifo_1_V_V_dout),
    .if_empty_n(mlp_1_weight_fifo_1_V_V_empty_n),
    .if_read(MLP_PE_146_U0_mlp_1_weight_fifo_1_V_V_read)
);

GIN_compute_one_graph_fifo_w32_d2_S mlp_1_bias_V_load_loc_c15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_PE45_U0_mlp_1_bias_V_load_loc_out_din),
    .if_full_n(mlp_1_bias_V_load_loc_c15_full_n),
    .if_write(MLP_PE45_U0_mlp_1_bias_V_load_loc_out_write),
    .if_dout(mlp_1_bias_V_load_loc_c15_dout),
    .if_empty_n(mlp_1_bias_V_load_loc_c15_empty_n),
    .if_read(MLP_PE_146_U0_mlp_1_bias_V_load_loc_read)
);

GIN_compute_one_graph_fifo_w32_d2_S mlp_1_weight_fifo_2_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_PE_146_U0_mlp_1_weight_fifo_2_V_V_din),
    .if_full_n(mlp_1_weight_fifo_2_V_V_full_n),
    .if_write(MLP_PE_146_U0_mlp_1_weight_fifo_2_V_V_write),
    .if_dout(mlp_1_weight_fifo_2_V_V_dout),
    .if_empty_n(mlp_1_weight_fifo_2_V_V_empty_n),
    .if_read(MLP_PE_147_U0_mlp_1_weight_fifo_2_V_V_read)
);

GIN_compute_one_graph_fifo_w32_d2_S mlp_1_bias_V_load_loc_c16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_PE_146_U0_mlp_1_bias_V_load_loc_out_din),
    .if_full_n(mlp_1_bias_V_load_loc_c16_full_n),
    .if_write(MLP_PE_146_U0_mlp_1_bias_V_load_loc_out_write),
    .if_dout(mlp_1_bias_V_load_loc_c16_dout),
    .if_empty_n(mlp_1_bias_V_load_loc_c16_empty_n),
    .if_read(MLP_PE_147_U0_mlp_1_bias_V_load_loc_read)
);

GIN_compute_one_graph_fifo_w32_d2_S mlp_1_weight_fifo_3_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_PE_147_U0_mlp_1_weight_fifo_3_V_V_din),
    .if_full_n(mlp_1_weight_fifo_3_V_V_full_n),
    .if_write(MLP_PE_147_U0_mlp_1_weight_fifo_3_V_V_write),
    .if_dout(mlp_1_weight_fifo_3_V_V_dout),
    .if_empty_n(mlp_1_weight_fifo_3_V_V_empty_n),
    .if_read(MLP_PE_148_U0_mlp_1_weight_fifo_3_V_V_read)
);

GIN_compute_one_graph_fifo_w32_d2_S mlp_1_bias_V_load_loc_c17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(MLP_PE_147_U0_mlp_1_bias_V_load_loc_out_din),
    .if_full_n(mlp_1_bias_V_load_loc_c17_full_n),
    .if_write(MLP_PE_147_U0_mlp_1_bias_V_load_loc_out_write),
    .if_dout(mlp_1_bias_V_load_loc_c17_dout),
    .if_empty_n(mlp_1_bias_V_load_loc_c17_empty_n),
    .if_read(MLP_PE_148_U0_mlp_1_bias_V_load_loc_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready <= ap_sync_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_MLP_1_batch_nodes_entry59_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_MLP_1_batch_nodes_entry59_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_MLP_1_batch_nodes_entry59_U0_ap_ready <= ap_sync_MLP_1_batch_nodes_entry59_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_MLP_PE45_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_MLP_PE45_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_MLP_PE45_U0_ap_ready <= ap_sync_MLP_PE45_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_MLP_PE_146_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_MLP_PE_146_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_MLP_PE_146_U0_ap_ready <= ap_sync_MLP_PE_146_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_MLP_PE_147_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_MLP_PE_147_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_MLP_PE_147_U0_ap_ready <= ap_sync_MLP_PE_147_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_MLP_PE_148_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_MLP_PE_148_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_MLP_PE_148_U0_ap_ready <= ap_sync_MLP_PE_148_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_load_mlp_weight_vector_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_mlp_weight_vector_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_mlp_weight_vector_U0_ap_ready <= ap_sync_load_mlp_weight_vector_U0_ap_ready;
        end
    end
end

assign MLP_1_batch_nodes_Block_split13_proc_U0_ap_continue = 1'b1;

assign MLP_1_batch_nodes_Block_split13_proc_U0_ap_start = ((ap_sync_reg_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign MLP_1_batch_nodes_Block_split13_proc_U0_start_full_n = 1'b1;

assign MLP_1_batch_nodes_Block_split13_proc_U0_start_write = 1'b0;

assign MLP_1_batch_nodes_entry59_U0_ap_continue = 1'b1;

assign MLP_1_batch_nodes_entry59_U0_ap_start = ((ap_sync_reg_MLP_1_batch_nodes_entry59_U0_ap_ready ^ 1'b1) & ap_start);

assign MLP_1_batch_nodes_entry59_U0_start_full_n = 1'b1;

assign MLP_1_batch_nodes_entry59_U0_start_write = 1'b0;

assign MLP_PE45_U0_ap_continue = ap_sync_continue;

assign MLP_PE45_U0_ap_start = ((ap_sync_reg_MLP_PE45_U0_ap_ready ^ 1'b1) & ap_start);

assign MLP_PE45_U0_start_full_n = 1'b1;

assign MLP_PE45_U0_start_write = 1'b0;

assign MLP_PE_146_U0_ap_continue = ap_sync_continue;

assign MLP_PE_146_U0_ap_start = ((ap_sync_reg_MLP_PE_146_U0_ap_ready ^ 1'b1) & ap_start);

assign MLP_PE_146_U0_start_full_n = 1'b1;

assign MLP_PE_146_U0_start_write = 1'b0;

assign MLP_PE_147_U0_ap_continue = ap_sync_continue;

assign MLP_PE_147_U0_ap_start = ((ap_sync_reg_MLP_PE_147_U0_ap_ready ^ 1'b1) & ap_start);

assign MLP_PE_147_U0_start_full_n = 1'b1;

assign MLP_PE_147_U0_start_write = 1'b0;

assign MLP_PE_148_U0_ap_continue = ap_sync_continue;

assign MLP_PE_148_U0_ap_start = ((ap_sync_reg_MLP_PE_148_U0_ap_ready ^ 1'b1) & ap_start);

assign MLP_PE_148_U0_start_full_n = 1'b1;

assign MLP_PE_148_U0_start_write = 1'b0;

assign ap_done = ap_sync_done;

assign ap_idle = (load_mlp_weight_vector_U0_ap_idle & MLP_PE_148_U0_ap_idle & MLP_PE_147_U0_ap_idle & MLP_PE_146_U0_ap_idle & MLP_PE45_U0_ap_idle & MLP_1_batch_nodes_entry59_U0_ap_idle & MLP_1_batch_nodes_Block_split13_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready = (ap_sync_reg_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready | MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready);

assign ap_sync_MLP_1_batch_nodes_entry59_U0_ap_ready = (ap_sync_reg_MLP_1_batch_nodes_entry59_U0_ap_ready | MLP_1_batch_nodes_entry59_U0_ap_ready);

assign ap_sync_MLP_PE45_U0_ap_ready = (ap_sync_reg_MLP_PE45_U0_ap_ready | MLP_PE45_U0_ap_ready);

assign ap_sync_MLP_PE_146_U0_ap_ready = (ap_sync_reg_MLP_PE_146_U0_ap_ready | MLP_PE_146_U0_ap_ready);

assign ap_sync_MLP_PE_147_U0_ap_ready = (ap_sync_reg_MLP_PE_147_U0_ap_ready | MLP_PE_147_U0_ap_ready);

assign ap_sync_MLP_PE_148_U0_ap_ready = (ap_sync_reg_MLP_PE_148_U0_ap_ready | MLP_PE_148_U0_ap_ready);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (MLP_PE_148_U0_ap_done & MLP_PE_147_U0_ap_done & MLP_PE_146_U0_ap_done & MLP_PE45_U0_ap_done);

assign ap_sync_load_mlp_weight_vector_U0_ap_ready = (load_mlp_weight_vector_U0_ap_ready | ap_sync_reg_load_mlp_weight_vector_U0_ap_ready);

assign ap_sync_ready = (ap_sync_load_mlp_weight_vector_U0_ap_ready & ap_sync_MLP_PE_148_U0_ap_ready & ap_sync_MLP_PE_147_U0_ap_ready & ap_sync_MLP_PE_146_U0_ap_ready & ap_sync_MLP_PE45_U0_ap_ready & ap_sync_MLP_1_batch_nodes_entry59_U0_ap_ready & ap_sync_MLP_1_batch_nodes_Block_split13_proc_U0_ap_ready);

assign load_mlp_weight_vector_U0_ap_continue = 1'b1;

assign load_mlp_weight_vector_U0_ap_start = ((ap_sync_reg_load_mlp_weight_vector_U0_ap_ready ^ 1'b1) & ap_start);

assign load_mlp_weight_vector_U0_start_full_n = 1'b1;

assign load_mlp_weight_vector_U0_start_write = 1'b0;

assign mlp_1_bias_V_address0 = MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_address0;

assign mlp_1_bias_V_address1 = 10'd0;

assign mlp_1_bias_V_ce0 = MLP_1_batch_nodes_Block_split13_proc_U0_mlp_1_bias_V_ce0;

assign mlp_1_bias_V_ce1 = 1'b0;

assign mlp_1_bias_V_d0 = 32'd0;

assign mlp_1_bias_V_d1 = 32'd0;

assign mlp_1_bias_V_we0 = 1'b0;

assign mlp_1_bias_V_we1 = 1'b0;

assign mlp_1_weights_V_address0 = load_mlp_weight_vector_U0_mlp_1_weights_V_address0;

assign mlp_1_weights_V_address1 = 18'd0;

assign mlp_1_weights_V_ce0 = load_mlp_weight_vector_U0_mlp_1_weights_V_ce0;

assign mlp_1_weights_V_ce1 = 1'b0;

assign mlp_1_weights_V_d0 = 32'd0;

assign mlp_1_weights_V_d1 = 32'd0;

assign mlp_1_weights_V_we0 = 1'b0;

assign mlp_1_weights_V_we1 = 1'b0;

assign mlp_in_local1_address0 = MLP_PE_146_U0_mlp_in_local1_address0;

assign mlp_in_local1_address1 = 10'd0;

assign mlp_in_local1_ce0 = MLP_PE_146_U0_mlp_in_local1_ce0;

assign mlp_in_local1_ce1 = 1'b0;

assign mlp_in_local1_d0 = 32'd0;

assign mlp_in_local1_d1 = 32'd0;

assign mlp_in_local1_we0 = 1'b0;

assign mlp_in_local1_we1 = 1'b0;

assign mlp_in_local2_address0 = MLP_PE_147_U0_mlp_in_local2_address0;

assign mlp_in_local2_address1 = 10'd0;

assign mlp_in_local2_ce0 = MLP_PE_147_U0_mlp_in_local2_ce0;

assign mlp_in_local2_ce1 = 1'b0;

assign mlp_in_local2_d0 = 32'd0;

assign mlp_in_local2_d1 = 32'd0;

assign mlp_in_local2_we0 = 1'b0;

assign mlp_in_local2_we1 = 1'b0;

assign mlp_in_local3_address0 = MLP_PE_148_U0_mlp_in_local3_address0;

assign mlp_in_local3_address1 = 10'd0;

assign mlp_in_local3_ce0 = MLP_PE_148_U0_mlp_in_local3_ce0;

assign mlp_in_local3_ce1 = 1'b0;

assign mlp_in_local3_d0 = 32'd0;

assign mlp_in_local3_d1 = 32'd0;

assign mlp_in_local3_we0 = 1'b0;

assign mlp_in_local3_we1 = 1'b0;

assign mlp_in_local_address0 = MLP_PE45_U0_mlp_in_local_address0;

assign mlp_in_local_address1 = 10'd0;

assign mlp_in_local_ce0 = MLP_PE45_U0_mlp_in_local_ce0;

assign mlp_in_local_ce1 = 1'b0;

assign mlp_in_local_d0 = 32'd0;

assign mlp_in_local_d1 = 32'd0;

assign mlp_in_local_we0 = 1'b0;

assign mlp_in_local_we1 = 1'b0;

assign mlp_out_local = MLP_PE45_U0_mlp_out_local;

assign mlp_out_local4 = MLP_PE_146_U0_mlp_out_local4;

assign mlp_out_local4_ap_vld = MLP_PE_146_U0_mlp_out_local4_ap_vld;

assign mlp_out_local5 = MLP_PE_147_U0_mlp_out_local5;

assign mlp_out_local5_ap_vld = MLP_PE_147_U0_mlp_out_local5_ap_vld;

assign mlp_out_local6 = MLP_PE_148_U0_mlp_out_local6;

assign mlp_out_local6_ap_vld = MLP_PE_148_U0_mlp_out_local6_ap_vld;

assign mlp_out_local_ap_vld = MLP_PE45_U0_mlp_out_local_ap_vld;

endmodule //GIN_compute_one_graph_MLP_1_batch_nodes
