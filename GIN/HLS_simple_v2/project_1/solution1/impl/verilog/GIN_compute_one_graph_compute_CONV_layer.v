// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_one_graph_compute_CONV_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        num_of_nodes,
        num_of_edges,
        layer,
        gnn_node_mlp_1_weights_fixed,
        gnn_node_mlp_1_bias_fixed,
        gnn_node_mlp_2_weights_fixed,
        gnn_node_mlp_2_bias_fixed,
        edge_embedding_table_V_address0,
        edge_embedding_table_V_ce0,
        edge_embedding_table_V_q0,
        edge_attr_address0,
        edge_attr_ce0,
        edge_attr_q0,
        edge_list_address0,
        edge_list_ce0,
        edge_list_q0,
        edge_list_address1,
        edge_list_ce1,
        edge_list_q1,
        node_embedding_V_address0,
        node_embedding_V_ce0,
        node_embedding_V_q0,
        node_embedding_V_address1,
        node_embedding_V_ce1,
        node_embedding_V_we1,
        node_embedding_V_d1,
        mlp_eps_V_address0,
        mlp_eps_V_ce0,
        mlp_eps_V_q0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [63:0] m_axi_mem_AWADDR;
output  [0:0] m_axi_mem_AWID;
output  [31:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [0:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [31:0] m_axi_mem_WDATA;
output  [3:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [0:0] m_axi_mem_WID;
output  [0:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [63:0] m_axi_mem_ARADDR;
output  [0:0] m_axi_mem_ARID;
output  [31:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [0:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [31:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [0:0] m_axi_mem_RID;
input  [0:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [0:0] m_axi_mem_BID;
input  [0:0] m_axi_mem_BUSER;
input  [31:0] num_of_nodes;
input  [31:0] num_of_edges;
input  [2:0] layer;
input  [63:0] gnn_node_mlp_1_weights_fixed;
input  [63:0] gnn_node_mlp_1_bias_fixed;
input  [63:0] gnn_node_mlp_2_weights_fixed;
input  [63:0] gnn_node_mlp_2_bias_fixed;
output  [14:0] edge_embedding_table_V_address0;
output   edge_embedding_table_V_ce0;
input  [31:0] edge_embedding_table_V_q0;
output  [12:0] edge_attr_address0;
output   edge_attr_ce0;
input  [31:0] edge_attr_q0;
output  [11:0] edge_list_address0;
output   edge_list_ce0;
input  [31:0] edge_list_q0;
output  [11:0] edge_list_address1;
output   edge_list_ce1;
input  [31:0] edge_list_q1;
output  [18:0] node_embedding_V_address0;
output   node_embedding_V_ce0;
input  [31:0] node_embedding_V_q0;
output  [18:0] node_embedding_V_address1;
output   node_embedding_V_ce1;
output   node_embedding_V_we1;
output  [31:0] node_embedding_V_d1;
output  [2:0] mlp_eps_V_address0;
output   mlp_eps_V_ce0;
input  [31:0] mlp_eps_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_mem_ARVALID;
reg m_axi_mem_RREADY;
reg[18:0] node_embedding_V_address0;
reg node_embedding_V_ce0;
reg node_embedding_V_ce1;
reg node_embedding_V_we1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [19:0] edge_embedding_V_address0;
reg    edge_embedding_V_ce0;
wire   [31:0] edge_embedding_V_q0;
reg    edge_embedding_V_ce1;
reg    edge_embedding_V_we1;
reg   [18:0] message_V_address0;
reg    message_V_ce0;
wire   [31:0] message_V_q0;
reg    message_V_ce1;
reg    message_V_we1;
reg   [9:0] mlp_1_bias_V_address0;
reg    mlp_1_bias_V_ce0;
reg    mlp_1_bias_V_we0;
wire   [31:0] mlp_1_bias_V_q0;
reg   [17:0] mlp_1_weights_V_address0;
reg    mlp_1_weights_V_ce0;
reg    mlp_1_weights_V_we0;
wire   [31:0] mlp_1_weights_V_q0;
reg   [8:0] mlp_2_bias_V_address0;
reg    mlp_2_bias_V_ce0;
reg    mlp_2_bias_V_we0;
wire   [31:0] mlp_2_bias_V_q0;
reg   [17:0] mlp_2_weights_V_address0;
reg    mlp_2_weights_V_ce0;
reg    mlp_2_weights_V_we0;
wire   [31:0] mlp_2_weights_V_q0;
wire    ap_CS_fsm_state5;
wire    grp_MLP_fu_4112_ap_start;
wire    grp_MLP_fu_4112_ap_done;
wire    grp_MLP_fu_4112_ap_idle;
wire    grp_MLP_fu_4112_ap_ready;
wire   [2:0] grp_MLP_fu_4112_mlp_eps_V_address0;
wire    grp_MLP_fu_4112_mlp_eps_V_ce0;
wire   [18:0] grp_MLP_fu_4112_node_embedding_V_address0;
wire    grp_MLP_fu_4112_node_embedding_V_ce0;
wire   [18:0] grp_MLP_fu_4112_node_embedding_V_address1;
wire    grp_MLP_fu_4112_node_embedding_V_ce1;
wire    grp_MLP_fu_4112_node_embedding_V_we1;
wire   [31:0] grp_MLP_fu_4112_node_embedding_V_d1;
wire   [18:0] grp_MLP_fu_4112_message_V_address0;
wire    grp_MLP_fu_4112_message_V_ce0;
wire   [17:0] grp_MLP_fu_4112_mlp_1_weights_V_address0;
wire    grp_MLP_fu_4112_mlp_1_weights_V_ce0;
wire   [9:0] grp_MLP_fu_4112_mlp_1_bias_V_address0;
wire    grp_MLP_fu_4112_mlp_1_bias_V_ce0;
wire   [17:0] grp_MLP_fu_4112_mlp_2_weights_V_address0;
wire    grp_MLP_fu_4112_mlp_2_weights_V_ce0;
wire   [8:0] grp_MLP_fu_4112_mlp_2_bias_V_address0;
wire    grp_MLP_fu_4112_mlp_2_bias_V_ce0;
wire    grp_load_mlp_weights_one_layer_fu_8133_ap_start;
wire    grp_load_mlp_weights_one_layer_fu_8133_ap_done;
wire    grp_load_mlp_weights_one_layer_fu_8133_ap_idle;
wire    grp_load_mlp_weights_one_layer_fu_8133_ap_ready;
wire    grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWVALID;
wire   [63:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWADDR;
wire   [0:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWID;
wire   [31:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWLEN;
wire   [2:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWSIZE;
wire   [1:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWBURST;
wire   [1:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWLOCK;
wire   [3:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWCACHE;
wire   [2:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWPROT;
wire   [3:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWQOS;
wire   [3:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWREGION;
wire   [0:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWUSER;
wire    grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WVALID;
wire   [31:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WDATA;
wire   [3:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WSTRB;
wire    grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WLAST;
wire   [0:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WID;
wire   [0:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WUSER;
wire    grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARVALID;
wire   [63:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARADDR;
wire   [0:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARID;
wire   [31:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARLEN;
wire   [2:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARSIZE;
wire   [1:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARBURST;
wire   [1:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARLOCK;
wire   [3:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARCACHE;
wire   [2:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARPROT;
wire   [3:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARQOS;
wire   [3:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARREGION;
wire   [0:0] grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARUSER;
wire    grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_RREADY;
wire    grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_BREADY;
wire   [9:0] grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_address0;
wire    grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_ce0;
wire    grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_we0;
wire   [31:0] grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_d0;
wire   [17:0] grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_address0;
wire    grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_ce0;
wire    grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_we0;
wire   [31:0] grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_d0;
wire   [8:0] grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_address0;
wire    grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_ce0;
wire    grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_we0;
wire   [31:0] grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_d0;
wire   [17:0] grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_address0;
wire    grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_ce0;
wire    grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_we0;
wire   [31:0] grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_d0;
wire    grp_compute_edge_embedding_fu_8157_ap_start;
wire    grp_compute_edge_embedding_fu_8157_ap_done;
wire    grp_compute_edge_embedding_fu_8157_ap_idle;
wire    grp_compute_edge_embedding_fu_8157_ap_ready;
wire   [19:0] grp_compute_edge_embedding_fu_8157_edge_embedding_V_address0;
wire    grp_compute_edge_embedding_fu_8157_edge_embedding_V_ce0;
wire   [19:0] grp_compute_edge_embedding_fu_8157_edge_embedding_V_address1;
wire    grp_compute_edge_embedding_fu_8157_edge_embedding_V_ce1;
wire    grp_compute_edge_embedding_fu_8157_edge_embedding_V_we1;
wire   [31:0] grp_compute_edge_embedding_fu_8157_edge_embedding_V_d1;
wire   [14:0] grp_compute_edge_embedding_fu_8157_edge_embedding_table_V_address0;
wire    grp_compute_edge_embedding_fu_8157_edge_embedding_table_V_ce0;
wire   [12:0] grp_compute_edge_embedding_fu_8157_edge_attr_address0;
wire    grp_compute_edge_embedding_fu_8157_edge_attr_ce0;
wire    grp_message_passing_fu_8173_ap_start;
wire    grp_message_passing_fu_8173_ap_done;
wire    grp_message_passing_fu_8173_ap_idle;
wire    grp_message_passing_fu_8173_ap_ready;
wire   [18:0] grp_message_passing_fu_8173_message_V_address0;
wire    grp_message_passing_fu_8173_message_V_ce0;
wire   [18:0] grp_message_passing_fu_8173_message_V_address1;
wire    grp_message_passing_fu_8173_message_V_ce1;
wire    grp_message_passing_fu_8173_message_V_we1;
wire   [31:0] grp_message_passing_fu_8173_message_V_d1;
wire   [11:0] grp_message_passing_fu_8173_edge_list_address0;
wire    grp_message_passing_fu_8173_edge_list_ce0;
wire   [11:0] grp_message_passing_fu_8173_edge_list_address1;
wire    grp_message_passing_fu_8173_edge_list_ce1;
wire   [19:0] grp_message_passing_fu_8173_edge_embedding_V_address0;
wire    grp_message_passing_fu_8173_edge_embedding_V_ce0;
wire   [18:0] grp_message_passing_fu_8173_node_embedding_V_address0;
wire    grp_message_passing_fu_8173_node_embedding_V_ce0;
reg    grp_MLP_fu_4112_ap_start_reg;
wire    ap_CS_fsm_state6;
reg    grp_load_mlp_weights_one_layer_fu_8133_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_compute_edge_embedding_fu_8157_ap_start_reg;
reg    grp_message_passing_fu_8173_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [5:0] ap_NS_fsm;
reg    ap_block_state2_on_subcall_done;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_MLP_fu_4112_ap_start_reg = 1'b0;
#0 grp_load_mlp_weights_one_layer_fu_8133_ap_start_reg = 1'b0;
#0 grp_compute_edge_embedding_fu_8157_ap_start_reg = 1'b0;
#0 grp_message_passing_fu_8173_ap_start_reg = 1'b0;
end

GIN_compute_one_graph_compute_CONV_layer_edge_embedding_V #(
    .DataWidth( 32 ),
    .AddressRange( 600000 ),
    .AddressWidth( 20 ))
edge_embedding_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(edge_embedding_V_address0),
    .ce0(edge_embedding_V_ce0),
    .q0(edge_embedding_V_q0),
    .address1(grp_compute_edge_embedding_fu_8157_edge_embedding_V_address1),
    .ce1(edge_embedding_V_ce1),
    .we1(edge_embedding_V_we1),
    .d1(grp_compute_edge_embedding_fu_8157_edge_embedding_V_d1)
);

GIN_compute_one_graph_compute_CONV_layer_message_V #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
message_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(message_V_address0),
    .ce0(message_V_ce0),
    .q0(message_V_q0),
    .address1(grp_message_passing_fu_8173_message_V_address1),
    .ce1(message_V_ce1),
    .we1(message_V_we1),
    .d1(grp_message_passing_fu_8173_message_V_d1)
);

GIN_compute_one_graph_compute_CONV_layer_mlp_1_bias_V #(
    .DataWidth( 32 ),
    .AddressRange( 600 ),
    .AddressWidth( 10 ))
mlp_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_1_bias_V_address0),
    .ce0(mlp_1_bias_V_ce0),
    .we0(mlp_1_bias_V_we0),
    .d0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_d0),
    .q0(mlp_1_bias_V_q0)
);

GIN_compute_one_graph_compute_CONV_layer_mlp_1_weights_V #(
    .DataWidth( 32 ),
    .AddressRange( 180000 ),
    .AddressWidth( 18 ))
mlp_1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_1_weights_V_address0),
    .ce0(mlp_1_weights_V_ce0),
    .we0(mlp_1_weights_V_we0),
    .d0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_d0),
    .q0(mlp_1_weights_V_q0)
);

GIN_compute_one_graph_compute_CONV_layer_mlp_2_bias_V #(
    .DataWidth( 32 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
mlp_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_2_bias_V_address0),
    .ce0(mlp_2_bias_V_ce0),
    .we0(mlp_2_bias_V_we0),
    .d0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_d0),
    .q0(mlp_2_bias_V_q0)
);

GIN_compute_one_graph_compute_CONV_layer_mlp_1_weights_V #(
    .DataWidth( 32 ),
    .AddressRange( 180000 ),
    .AddressWidth( 18 ))
mlp_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_2_weights_V_address0),
    .ce0(mlp_2_weights_V_ce0),
    .we0(mlp_2_weights_V_we0),
    .d0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_d0),
    .q0(mlp_2_weights_V_q0)
);

GIN_compute_one_graph_MLP grp_MLP_fu_4112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MLP_fu_4112_ap_start),
    .ap_done(grp_MLP_fu_4112_ap_done),
    .ap_idle(grp_MLP_fu_4112_ap_idle),
    .ap_ready(grp_MLP_fu_4112_ap_ready),
    .num_of_nodes(num_of_nodes),
    .layer(layer),
    .mlp_eps_V_address0(grp_MLP_fu_4112_mlp_eps_V_address0),
    .mlp_eps_V_ce0(grp_MLP_fu_4112_mlp_eps_V_ce0),
    .mlp_eps_V_q0(mlp_eps_V_q0),
    .node_embedding_V_address0(grp_MLP_fu_4112_node_embedding_V_address0),
    .node_embedding_V_ce0(grp_MLP_fu_4112_node_embedding_V_ce0),
    .node_embedding_V_q0(node_embedding_V_q0),
    .node_embedding_V_address1(grp_MLP_fu_4112_node_embedding_V_address1),
    .node_embedding_V_ce1(grp_MLP_fu_4112_node_embedding_V_ce1),
    .node_embedding_V_we1(grp_MLP_fu_4112_node_embedding_V_we1),
    .node_embedding_V_d1(grp_MLP_fu_4112_node_embedding_V_d1),
    .message_V_address0(grp_MLP_fu_4112_message_V_address0),
    .message_V_ce0(grp_MLP_fu_4112_message_V_ce0),
    .message_V_q0(message_V_q0),
    .mlp_1_weights_V_address0(grp_MLP_fu_4112_mlp_1_weights_V_address0),
    .mlp_1_weights_V_ce0(grp_MLP_fu_4112_mlp_1_weights_V_ce0),
    .mlp_1_weights_V_q0(mlp_1_weights_V_q0),
    .mlp_1_bias_V_address0(grp_MLP_fu_4112_mlp_1_bias_V_address0),
    .mlp_1_bias_V_ce0(grp_MLP_fu_4112_mlp_1_bias_V_ce0),
    .mlp_1_bias_V_q0(mlp_1_bias_V_q0),
    .mlp_2_weights_V_address0(grp_MLP_fu_4112_mlp_2_weights_V_address0),
    .mlp_2_weights_V_ce0(grp_MLP_fu_4112_mlp_2_weights_V_ce0),
    .mlp_2_weights_V_q0(mlp_2_weights_V_q0),
    .mlp_2_bias_V_address0(grp_MLP_fu_4112_mlp_2_bias_V_address0),
    .mlp_2_bias_V_ce0(grp_MLP_fu_4112_mlp_2_bias_V_ce0),
    .mlp_2_bias_V_q0(mlp_2_bias_V_q0)
);

GIN_compute_one_graph_load_mlp_weights_one_layer grp_load_mlp_weights_one_layer_fu_8133(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_mlp_weights_one_layer_fu_8133_ap_start),
    .ap_done(grp_load_mlp_weights_one_layer_fu_8133_ap_done),
    .ap_idle(grp_load_mlp_weights_one_layer_fu_8133_ap_idle),
    .ap_ready(grp_load_mlp_weights_one_layer_fu_8133_ap_ready),
    .m_axi_mem_AWVALID(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(m_axi_mem_ARREADY),
    .m_axi_mem_ARADDR(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(m_axi_mem_RVALID),
    .m_axi_mem_RREADY(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(m_axi_mem_RDATA),
    .m_axi_mem_RLAST(m_axi_mem_RLAST),
    .m_axi_mem_RID(m_axi_mem_RID),
    .m_axi_mem_RUSER(m_axi_mem_RUSER),
    .m_axi_mem_RRESP(m_axi_mem_RRESP),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .layer(layer),
    .gnn_node_mlp_1_weights_fixed(gnn_node_mlp_1_weights_fixed),
    .gnn_node_mlp_1_bias_fixed(gnn_node_mlp_1_bias_fixed),
    .gnn_node_mlp_2_weights_fixed(gnn_node_mlp_2_weights_fixed),
    .gnn_node_mlp_2_bias_fixed(gnn_node_mlp_2_bias_fixed),
    .mlp_1_bias_V_address0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_address0),
    .mlp_1_bias_V_ce0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_ce0),
    .mlp_1_bias_V_we0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_we0),
    .mlp_1_bias_V_d0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_d0),
    .mlp_1_weights_V_address0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_address0),
    .mlp_1_weights_V_ce0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_ce0),
    .mlp_1_weights_V_we0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_we0),
    .mlp_1_weights_V_d0(grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_d0),
    .mlp_2_bias_V_address0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_address0),
    .mlp_2_bias_V_ce0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_ce0),
    .mlp_2_bias_V_we0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_we0),
    .mlp_2_bias_V_d0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_d0),
    .mlp_2_weights_V_address0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_address0),
    .mlp_2_weights_V_ce0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_ce0),
    .mlp_2_weights_V_we0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_we0),
    .mlp_2_weights_V_d0(grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_d0)
);

GIN_compute_one_graph_compute_edge_embedding grp_compute_edge_embedding_fu_8157(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_edge_embedding_fu_8157_ap_start),
    .ap_done(grp_compute_edge_embedding_fu_8157_ap_done),
    .ap_idle(grp_compute_edge_embedding_fu_8157_ap_idle),
    .ap_ready(grp_compute_edge_embedding_fu_8157_ap_ready),
    .num_of_edges(num_of_edges),
    .layer(layer),
    .edge_embedding_V_address0(grp_compute_edge_embedding_fu_8157_edge_embedding_V_address0),
    .edge_embedding_V_ce0(grp_compute_edge_embedding_fu_8157_edge_embedding_V_ce0),
    .edge_embedding_V_q0(edge_embedding_V_q0),
    .edge_embedding_V_address1(grp_compute_edge_embedding_fu_8157_edge_embedding_V_address1),
    .edge_embedding_V_ce1(grp_compute_edge_embedding_fu_8157_edge_embedding_V_ce1),
    .edge_embedding_V_we1(grp_compute_edge_embedding_fu_8157_edge_embedding_V_we1),
    .edge_embedding_V_d1(grp_compute_edge_embedding_fu_8157_edge_embedding_V_d1),
    .edge_embedding_table_V_address0(grp_compute_edge_embedding_fu_8157_edge_embedding_table_V_address0),
    .edge_embedding_table_V_ce0(grp_compute_edge_embedding_fu_8157_edge_embedding_table_V_ce0),
    .edge_embedding_table_V_q0(edge_embedding_table_V_q0),
    .edge_attr_address0(grp_compute_edge_embedding_fu_8157_edge_attr_address0),
    .edge_attr_ce0(grp_compute_edge_embedding_fu_8157_edge_attr_ce0),
    .edge_attr_q0(edge_attr_q0)
);

GIN_compute_one_graph_message_passing grp_message_passing_fu_8173(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_message_passing_fu_8173_ap_start),
    .ap_done(grp_message_passing_fu_8173_ap_done),
    .ap_idle(grp_message_passing_fu_8173_ap_idle),
    .ap_ready(grp_message_passing_fu_8173_ap_ready),
    .num_of_edges(num_of_edges),
    .message_V_address0(grp_message_passing_fu_8173_message_V_address0),
    .message_V_ce0(grp_message_passing_fu_8173_message_V_ce0),
    .message_V_q0(message_V_q0),
    .message_V_address1(grp_message_passing_fu_8173_message_V_address1),
    .message_V_ce1(grp_message_passing_fu_8173_message_V_ce1),
    .message_V_we1(grp_message_passing_fu_8173_message_V_we1),
    .message_V_d1(grp_message_passing_fu_8173_message_V_d1),
    .edge_list_address0(grp_message_passing_fu_8173_edge_list_address0),
    .edge_list_ce0(grp_message_passing_fu_8173_edge_list_ce0),
    .edge_list_q0(edge_list_q0),
    .edge_list_address1(grp_message_passing_fu_8173_edge_list_address1),
    .edge_list_ce1(grp_message_passing_fu_8173_edge_list_ce1),
    .edge_list_q1(edge_list_q1),
    .edge_embedding_V_address0(grp_message_passing_fu_8173_edge_embedding_V_address0),
    .edge_embedding_V_ce0(grp_message_passing_fu_8173_edge_embedding_V_ce0),
    .edge_embedding_V_q0(edge_embedding_V_q0),
    .node_embedding_V_address0(grp_message_passing_fu_8173_node_embedding_V_address0),
    .node_embedding_V_ce0(grp_message_passing_fu_8173_node_embedding_V_ce0),
    .node_embedding_V_q0(node_embedding_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MLP_fu_4112_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_MLP_fu_4112_ap_start_reg <= 1'b1;
        end else if ((grp_MLP_fu_4112_ap_ready == 1'b1)) begin
            grp_MLP_fu_4112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_edge_embedding_fu_8157_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_compute_edge_embedding_fu_8157_ap_start_reg <= 1'b1;
        end else if ((grp_compute_edge_embedding_fu_8157_ap_ready == 1'b1)) begin
            grp_compute_edge_embedding_fu_8157_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_mlp_weights_one_layer_fu_8133_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_load_mlp_weights_one_layer_fu_8133_ap_start_reg <= 1'b1;
        end else if ((grp_load_mlp_weights_one_layer_fu_8133_ap_ready == 1'b1)) begin
            grp_load_mlp_weights_one_layer_fu_8133_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_message_passing_fu_8173_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_message_passing_fu_8173_ap_start_reg <= 1'b1;
        end else if ((grp_message_passing_fu_8173_ap_ready == 1'b1)) begin
            grp_message_passing_fu_8173_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((((grp_MLP_fu_4112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MLP_fu_4112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        edge_embedding_V_address0 = grp_message_passing_fu_8173_edge_embedding_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        edge_embedding_V_address0 = grp_compute_edge_embedding_fu_8157_edge_embedding_V_address0;
    end else begin
        edge_embedding_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        edge_embedding_V_ce0 = grp_message_passing_fu_8173_edge_embedding_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        edge_embedding_V_ce0 = grp_compute_edge_embedding_fu_8157_edge_embedding_V_ce0;
    end else begin
        edge_embedding_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        edge_embedding_V_ce1 = grp_compute_edge_embedding_fu_8157_edge_embedding_V_ce1;
    end else begin
        edge_embedding_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        edge_embedding_V_we1 = grp_compute_edge_embedding_fu_8157_edge_embedding_V_we1;
    end else begin
        edge_embedding_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_mem_ARVALID = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARVALID;
    end else begin
        m_axi_mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_mem_RREADY = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_RREADY;
    end else begin
        m_axi_mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        message_V_address0 = grp_message_passing_fu_8173_message_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        message_V_address0 = grp_MLP_fu_4112_message_V_address0;
    end else begin
        message_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        message_V_ce0 = grp_message_passing_fu_8173_message_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        message_V_ce0 = grp_MLP_fu_4112_message_V_ce0;
    end else begin
        message_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        message_V_ce1 = grp_message_passing_fu_8173_message_V_ce1;
    end else begin
        message_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        message_V_we1 = grp_message_passing_fu_8173_message_V_we1;
    end else begin
        message_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_1_bias_V_address0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mlp_1_bias_V_address0 = grp_MLP_fu_4112_mlp_1_bias_V_address0;
    end else begin
        mlp_1_bias_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_1_bias_V_ce0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mlp_1_bias_V_ce0 = grp_MLP_fu_4112_mlp_1_bias_V_ce0;
    end else begin
        mlp_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_1_bias_V_we0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_1_bias_V_we0;
    end else begin
        mlp_1_bias_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_1_weights_V_address0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mlp_1_weights_V_address0 = grp_MLP_fu_4112_mlp_1_weights_V_address0;
    end else begin
        mlp_1_weights_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_1_weights_V_ce0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mlp_1_weights_V_ce0 = grp_MLP_fu_4112_mlp_1_weights_V_ce0;
    end else begin
        mlp_1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_1_weights_V_we0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_1_weights_V_we0;
    end else begin
        mlp_1_weights_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_2_bias_V_address0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mlp_2_bias_V_address0 = grp_MLP_fu_4112_mlp_2_bias_V_address0;
    end else begin
        mlp_2_bias_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_2_bias_V_ce0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mlp_2_bias_V_ce0 = grp_MLP_fu_4112_mlp_2_bias_V_ce0;
    end else begin
        mlp_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_2_bias_V_we0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_2_bias_V_we0;
    end else begin
        mlp_2_bias_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_2_weights_V_address0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mlp_2_weights_V_address0 = grp_MLP_fu_4112_mlp_2_weights_V_address0;
    end else begin
        mlp_2_weights_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_2_weights_V_ce0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        mlp_2_weights_V_ce0 = grp_MLP_fu_4112_mlp_2_weights_V_ce0;
    end else begin
        mlp_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_2_weights_V_we0 = grp_load_mlp_weights_one_layer_fu_8133_mlp_2_weights_V_we0;
    end else begin
        mlp_2_weights_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        node_embedding_V_address0 = grp_message_passing_fu_8173_node_embedding_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        node_embedding_V_address0 = grp_MLP_fu_4112_node_embedding_V_address0;
    end else begin
        node_embedding_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        node_embedding_V_ce0 = grp_message_passing_fu_8173_node_embedding_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        node_embedding_V_ce0 = grp_MLP_fu_4112_node_embedding_V_ce0;
    end else begin
        node_embedding_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        node_embedding_V_ce1 = grp_MLP_fu_4112_node_embedding_V_ce1;
    end else begin
        node_embedding_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        node_embedding_V_we1 = grp_MLP_fu_4112_node_embedding_V_we1;
    end else begin
        node_embedding_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_message_passing_fu_8173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_MLP_fu_4112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_compute_edge_embedding_fu_8157_ap_done == 1'b0) | (grp_load_mlp_weights_one_layer_fu_8133_ap_done == 1'b0));
end

assign edge_attr_address0 = grp_compute_edge_embedding_fu_8157_edge_attr_address0;

assign edge_attr_ce0 = grp_compute_edge_embedding_fu_8157_edge_attr_ce0;

assign edge_embedding_table_V_address0 = grp_compute_edge_embedding_fu_8157_edge_embedding_table_V_address0;

assign edge_embedding_table_V_ce0 = grp_compute_edge_embedding_fu_8157_edge_embedding_table_V_ce0;

assign edge_list_address0 = grp_message_passing_fu_8173_edge_list_address0;

assign edge_list_address1 = grp_message_passing_fu_8173_edge_list_address1;

assign edge_list_ce0 = grp_message_passing_fu_8173_edge_list_ce0;

assign edge_list_ce1 = grp_message_passing_fu_8173_edge_list_ce1;

assign grp_MLP_fu_4112_ap_start = grp_MLP_fu_4112_ap_start_reg;

assign grp_compute_edge_embedding_fu_8157_ap_start = grp_compute_edge_embedding_fu_8157_ap_start_reg;

assign grp_load_mlp_weights_one_layer_fu_8133_ap_start = grp_load_mlp_weights_one_layer_fu_8133_ap_start_reg;

assign grp_message_passing_fu_8173_ap_start = grp_message_passing_fu_8173_ap_start_reg;

assign m_axi_mem_ARADDR = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARADDR;

assign m_axi_mem_ARBURST = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARBURST;

assign m_axi_mem_ARCACHE = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARCACHE;

assign m_axi_mem_ARID = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARID;

assign m_axi_mem_ARLEN = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARLEN;

assign m_axi_mem_ARLOCK = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARLOCK;

assign m_axi_mem_ARPROT = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARPROT;

assign m_axi_mem_ARQOS = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARQOS;

assign m_axi_mem_ARREGION = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARREGION;

assign m_axi_mem_ARSIZE = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARSIZE;

assign m_axi_mem_ARUSER = grp_load_mlp_weights_one_layer_fu_8133_m_axi_mem_ARUSER;

assign m_axi_mem_AWADDR = 64'd0;

assign m_axi_mem_AWBURST = 2'd0;

assign m_axi_mem_AWCACHE = 4'd0;

assign m_axi_mem_AWID = 1'd0;

assign m_axi_mem_AWLEN = 32'd0;

assign m_axi_mem_AWLOCK = 2'd0;

assign m_axi_mem_AWPROT = 3'd0;

assign m_axi_mem_AWQOS = 4'd0;

assign m_axi_mem_AWREGION = 4'd0;

assign m_axi_mem_AWSIZE = 3'd0;

assign m_axi_mem_AWUSER = 1'd0;

assign m_axi_mem_AWVALID = 1'b0;

assign m_axi_mem_BREADY = 1'b0;

assign m_axi_mem_WDATA = 32'd0;

assign m_axi_mem_WID = 1'd0;

assign m_axi_mem_WLAST = 1'b0;

assign m_axi_mem_WSTRB = 4'd0;

assign m_axi_mem_WUSER = 1'd0;

assign m_axi_mem_WVALID = 1'b0;

assign mlp_eps_V_address0 = grp_MLP_fu_4112_mlp_eps_V_address0;

assign mlp_eps_V_ce0 = grp_MLP_fu_4112_mlp_eps_V_ce0;

assign node_embedding_V_address1 = grp_MLP_fu_4112_node_embedding_V_address1;

assign node_embedding_V_d1 = grp_MLP_fu_4112_node_embedding_V_d1;

endmodule //GIN_compute_one_graph_compute_CONV_layer
