// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="GIN_compute_one_graph_GIN_compute_one_graph,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=87,HLS_SYN_DSP=0,HLS_SYN_FF=29122,HLS_SYN_LUT=48046,HLS_VERSION=2020_2}" *)

module GIN_compute_one_graph (
        ap_clk,
        ap_rst_n,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 53'd1;
parameter    ap_ST_fsm_state2 = 53'd2;
parameter    ap_ST_fsm_state3 = 53'd4;
parameter    ap_ST_fsm_state4 = 53'd8;
parameter    ap_ST_fsm_state5 = 53'd16;
parameter    ap_ST_fsm_state6 = 53'd32;
parameter    ap_ST_fsm_state7 = 53'd64;
parameter    ap_ST_fsm_state8 = 53'd128;
parameter    ap_ST_fsm_pp0_stage0 = 53'd256;
parameter    ap_ST_fsm_state12 = 53'd512;
parameter    ap_ST_fsm_state13 = 53'd1024;
parameter    ap_ST_fsm_state14 = 53'd2048;
parameter    ap_ST_fsm_state15 = 53'd4096;
parameter    ap_ST_fsm_state16 = 53'd8192;
parameter    ap_ST_fsm_state17 = 53'd16384;
parameter    ap_ST_fsm_state18 = 53'd32768;
parameter    ap_ST_fsm_state19 = 53'd65536;
parameter    ap_ST_fsm_state20 = 53'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 53'd262144;
parameter    ap_ST_fsm_state24 = 53'd524288;
parameter    ap_ST_fsm_state25 = 53'd1048576;
parameter    ap_ST_fsm_state26 = 53'd2097152;
parameter    ap_ST_fsm_state27 = 53'd4194304;
parameter    ap_ST_fsm_state28 = 53'd8388608;
parameter    ap_ST_fsm_state29 = 53'd16777216;
parameter    ap_ST_fsm_state30 = 53'd33554432;
parameter    ap_ST_fsm_pp2_stage0 = 53'd67108864;
parameter    ap_ST_fsm_state35 = 53'd134217728;
parameter    ap_ST_fsm_state36 = 53'd268435456;
parameter    ap_ST_fsm_state37 = 53'd536870912;
parameter    ap_ST_fsm_state38 = 53'd1073741824;
parameter    ap_ST_fsm_state39 = 53'd2147483648;
parameter    ap_ST_fsm_state40 = 53'd4294967296;
parameter    ap_ST_fsm_state41 = 53'd8589934592;
parameter    ap_ST_fsm_pp3_stage0 = 53'd17179869184;
parameter    ap_ST_fsm_state46 = 53'd34359738368;
parameter    ap_ST_fsm_state47 = 53'd68719476736;
parameter    ap_ST_fsm_state48 = 53'd137438953472;
parameter    ap_ST_fsm_state49 = 53'd274877906944;
parameter    ap_ST_fsm_state50 = 53'd549755813888;
parameter    ap_ST_fsm_state51 = 53'd1099511627776;
parameter    ap_ST_fsm_state52 = 53'd2199023255552;
parameter    ap_ST_fsm_state53 = 53'd4398046511104;
parameter    ap_ST_fsm_state54 = 53'd8796093022208;
parameter    ap_ST_fsm_state55 = 53'd17592186044416;
parameter    ap_ST_fsm_state56 = 53'd35184372088832;
parameter    ap_ST_fsm_state57 = 53'd70368744177664;
parameter    ap_ST_fsm_state58 = 53'd140737488355328;
parameter    ap_ST_fsm_state59 = 53'd281474976710656;
parameter    ap_ST_fsm_state60 = 53'd562949953421312;
parameter    ap_ST_fsm_state61 = 53'd1125899906842624;
parameter    ap_ST_fsm_state62 = 53'd2251799813685248;
parameter    ap_ST_fsm_state63 = 53'd4503599627370496;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_ID_WIDTH = 1;
parameter    C_M_AXI_MEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_MEM_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_USER_VALUE = 0;
parameter    C_M_AXI_MEM_PROT_VALUE = 0;
parameter    C_M_AXI_MEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_AWADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_AWID;
output  [7:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [C_M_AXI_MEM_AWUSER_WIDTH - 1:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_WDATA;
output  [C_M_AXI_MEM_WSTRB_WIDTH - 1:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_WID;
output  [C_M_AXI_MEM_WUSER_WIDTH - 1:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_ARADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_ARID;
output  [7:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [C_M_AXI_MEM_ARUSER_WIDTH - 1:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_RID;
input  [C_M_AXI_MEM_RUSER_WIDTH - 1:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_BID;
input  [C_M_AXI_MEM_BUSER_WIDTH - 1:0] m_axi_mem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [52:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] node_feature_in;
wire   [63:0] edge_list_in;
wire   [63:0] edge_attr_in;
wire   [63:0] graph_attr;
wire   [63:0] task_r;
wire   [63:0] gnn_node_mlp_1_weights_fixed;
wire   [63:0] gnn_node_mlp_1_bias_fixed;
wire   [63:0] gnn_node_mlp_2_weights_fixed;
wire   [63:0] gnn_node_mlp_2_bias_fixed;
wire   [63:0] gnn_node_embedding_fixed;
wire   [63:0] gnn_edge_embedding_fixed;
wire   [63:0] graph_pred_linear_weight_fixed;
wire   [63:0] graph_pred_linear_bias_fixed;
wire   [63:0] eps_fixed;
reg   [2:0] mlp_eps_V_address0;
reg    mlp_eps_V_ce0;
reg    mlp_eps_V_we0;
wire   [31:0] mlp_eps_V_q0;
reg   [8:0] graph_pred_weights_V_address0;
reg    graph_pred_weights_V_ce0;
reg    graph_pred_weights_V_we0;
wire   [31:0] graph_pred_weights_V_q0;
reg    node_embedding_table_V_ce0;
wire   [31:0] node_embedding_table_V_q0;
wire   [15:0] node_embedding_table_V_address1;
reg    node_embedding_table_V_ce1;
reg    node_embedding_table_V_we1;
reg    edge_embedding_table_V_ce0;
wire   [31:0] edge_embedding_table_V_q0;
wire   [14:0] edge_embedding_table_V_address1;
reg    edge_embedding_table_V_ce1;
reg    edge_embedding_table_V_we1;
reg    node_feature_ce0;
wire   [31:0] node_feature_q0;
reg    node_feature_ce1;
reg    node_feature_we1;
reg    edge_attr_ce0;
wire   [31:0] edge_attr_q0;
reg    edge_attr_ce1;
reg    edge_attr_we1;
reg    edge_list_ce0;
wire   [31:0] edge_list_q0;
reg   [11:0] edge_list_address1;
reg    edge_list_ce1;
reg    edge_list_we1;
wire   [31:0] edge_list_q1;
reg   [18:0] node_embedding_V_address0;
reg    node_embedding_V_ce0;
wire   [31:0] node_embedding_V_q0;
reg   [18:0] node_embedding_V_address1;
reg    node_embedding_V_ce1;
reg    node_embedding_V_we1;
reg   [31:0] node_embedding_V_d1;
reg    graph_embedding_V_ce0;
wire   [31:0] graph_embedding_V_q0;
reg    graph_embedding_V_ce1;
reg    graph_embedding_V_we1;
reg   [0:0] graph_pred_bias_V_address0;
reg    graph_pred_bias_V_ce0;
reg    graph_pred_bias_V_we0;
wire   [31:0] graph_pred_bias_V_q0;
reg    mem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    mem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln392_reg_9029;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln398_reg_9060;
wire    ap_CS_fsm_state24;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln403_reg_9080;
reg   [0:0] icmp_ln403_reg_9080_pp2_iter1_reg;
wire    ap_CS_fsm_state35;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln409_reg_9125;
reg   [0:0] icmp_ln409_reg_9125_pp3_iter1_reg;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
reg    mem_AWVALID;
wire    mem_AWREADY;
reg    mem_WVALID;
wire    mem_WREADY;
reg    mem_ARVALID;
wire    mem_ARREADY;
reg   [63:0] mem_ARADDR;
reg   [0:0] mem_ARID;
reg   [31:0] mem_ARLEN;
reg   [2:0] mem_ARSIZE;
reg   [1:0] mem_ARBURST;
reg   [1:0] mem_ARLOCK;
reg   [3:0] mem_ARCACHE;
reg   [2:0] mem_ARPROT;
reg   [3:0] mem_ARQOS;
reg   [3:0] mem_ARREGION;
reg   [0:0] mem_ARUSER;
wire    mem_RVALID;
reg    mem_RREADY;
wire   [31:0] mem_RDATA;
wire    mem_RLAST;
wire   [0:0] mem_RID;
wire   [0:0] mem_RUSER;
wire   [1:0] mem_RRESP;
wire    mem_BVALID;
reg    mem_BREADY;
wire   [1:0] mem_BRESP;
wire   [0:0] mem_BID;
wire   [0:0] mem_BUSER;
reg   [2:0] i_reg_4464;
reg   [2:0] i_reg_4464_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [8:0] dim_in_reg_4476;
reg   [8:0] dim_in_reg_4476_pp1_iter1_reg;
wire    ap_block_state21_pp1_stage0_iter0;
reg    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_state23_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [15:0] indvar_flatten_reg_4488;
reg   [7:0] i_3_reg_4499;
reg   [8:0] dim_reg_4510;
reg   [14:0] indvar_flatten7_reg_4521;
reg   [6:0] i_4_reg_4532;
reg   [8:0] dim_1_reg_4543;
reg   [63:0] graph_pred_linear_bias_fixed_read_reg_8953;
reg   [63:0] graph_pred_linear_weight_fixed_read_reg_8958;
reg   [63:0] gnn_edge_embedding_fixed_read_reg_8963;
reg   [63:0] gnn_node_embedding_fixed_read_reg_8968;
reg   [63:0] gnn_node_mlp_2_bias_fixed_read_reg_8973;
reg   [63:0] gnn_node_mlp_2_weights_fixed_read_reg_8978;
reg   [63:0] gnn_node_mlp_1_bias_fixed_read_reg_8983;
reg   [63:0] gnn_node_mlp_1_weights_fixed_read_reg_8988;
reg   [63:0] task_read_reg_8993;
reg   [63:0] graph_attr_read_reg_8998;
reg   [63:0] edge_attr_in_read_reg_9003;
reg   [63:0] edge_list_in_read_reg_9008;
reg   [63:0] node_feature_in_read_reg_9013;
reg   [63:0] mem_addr_reg_9018;
wire   [2:0] add_ln392_fu_8676_p2;
reg   [2:0] add_ln392_reg_9024;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln392_fu_8682_p2;
reg   [0:0] icmp_ln392_reg_9029_pp0_iter1_reg;
reg   [31:0] mem_addr_read_reg_9033;
reg   [63:0] mem_addr_7_reg_9044;
reg   [31:0] mem_addr_6_read_reg_9050;
wire   [8:0] add_ln398_fu_8732_p2;
reg   [8:0] add_ln398_reg_9055;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln398_fu_8738_p2;
reg   [0:0] icmp_ln398_reg_9060_pp1_iter1_reg;
reg   [31:0] mem_addr_7_read_reg_9064;
wire   [15:0] add_ln403_1_fu_8769_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state31_pp2_stage0_iter0;
wire    ap_block_state32_pp2_stage0_iter1;
reg    ap_block_state33_pp2_stage0_iter2;
wire    ap_block_state34_pp2_stage0_iter3;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln403_fu_8775_p2;
reg   [0:0] icmp_ln403_reg_9080_pp2_iter2_reg;
wire   [8:0] select_ln403_fu_8793_p3;
reg   [8:0] select_ln403_reg_9084;
reg   [8:0] select_ln403_reg_9084_pp2_iter1_reg;
wire   [7:0] select_ln403_1_fu_8801_p3;
reg   [7:0] select_ln403_1_reg_9089;
wire   [8:0] add_ln404_fu_8813_p2;
reg   [31:0] mem_addr_8_read_reg_9109;
wire   [14:0] add_ln409_1_fu_8846_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state42_pp3_stage0_iter0;
wire    ap_block_state43_pp3_stage0_iter1;
reg    ap_block_state44_pp3_stage0_iter2;
wire    ap_block_state45_pp3_stage0_iter3;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln409_fu_8852_p2;
reg   [0:0] icmp_ln409_reg_9125_pp3_iter2_reg;
wire   [8:0] select_ln409_fu_8870_p3;
reg   [8:0] select_ln409_reg_9129;
reg   [8:0] select_ln409_reg_9129_pp3_iter1_reg;
wire   [6:0] select_ln409_1_fu_8878_p3;
reg   [6:0] select_ln409_1_reg_9134;
wire   [8:0] add_ln410_fu_8890_p2;
reg   [31:0] mem_addr_9_read_reg_9154;
reg   [31:0] num_of_nodes_reg_9165;
reg   [31:0] num_of_edges_reg_9173;
wire   [2:0] layer_1_fu_8923_p2;
reg   [2:0] layer_1_reg_9179;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state20;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state30;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state31;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
wire    ap_CS_fsm_state41;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state42;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter3;
wire    grp_compute_CONV_layer_fu_4566_ap_start;
wire    grp_compute_CONV_layer_fu_4566_ap_done;
wire    grp_compute_CONV_layer_fu_4566_ap_idle;
wire    grp_compute_CONV_layer_fu_4566_ap_ready;
wire    grp_compute_CONV_layer_fu_4566_m_axi_mem_AWVALID;
wire   [63:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWADDR;
wire   [0:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWID;
wire   [31:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWLEN;
wire   [2:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWSIZE;
wire   [1:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWBURST;
wire   [1:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWLOCK;
wire   [3:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWCACHE;
wire   [2:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWPROT;
wire   [3:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWQOS;
wire   [3:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWREGION;
wire   [0:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_AWUSER;
wire    grp_compute_CONV_layer_fu_4566_m_axi_mem_WVALID;
wire   [31:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_WDATA;
wire   [3:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_WSTRB;
wire    grp_compute_CONV_layer_fu_4566_m_axi_mem_WLAST;
wire   [0:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_WID;
wire   [0:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_WUSER;
wire    grp_compute_CONV_layer_fu_4566_m_axi_mem_ARVALID;
wire   [63:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARADDR;
wire   [0:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARID;
wire   [31:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARLEN;
wire   [2:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARSIZE;
wire   [1:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARBURST;
wire   [1:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARLOCK;
wire   [3:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARCACHE;
wire   [2:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARPROT;
wire   [3:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARQOS;
wire   [3:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARREGION;
wire   [0:0] grp_compute_CONV_layer_fu_4566_m_axi_mem_ARUSER;
wire    grp_compute_CONV_layer_fu_4566_m_axi_mem_RREADY;
wire    grp_compute_CONV_layer_fu_4566_m_axi_mem_BREADY;
wire   [14:0] grp_compute_CONV_layer_fu_4566_edge_embedding_table_V_address0;
wire    grp_compute_CONV_layer_fu_4566_edge_embedding_table_V_ce0;
wire   [12:0] grp_compute_CONV_layer_fu_4566_edge_attr_address0;
wire    grp_compute_CONV_layer_fu_4566_edge_attr_ce0;
wire   [11:0] grp_compute_CONV_layer_fu_4566_edge_list_address0;
wire    grp_compute_CONV_layer_fu_4566_edge_list_ce0;
wire   [11:0] grp_compute_CONV_layer_fu_4566_edge_list_address1;
wire    grp_compute_CONV_layer_fu_4566_edge_list_ce1;
wire   [18:0] grp_compute_CONV_layer_fu_4566_node_embedding_V_address0;
wire    grp_compute_CONV_layer_fu_4566_node_embedding_V_ce0;
wire   [18:0] grp_compute_CONV_layer_fu_4566_node_embedding_V_address1;
wire    grp_compute_CONV_layer_fu_4566_node_embedding_V_ce1;
wire    grp_compute_CONV_layer_fu_4566_node_embedding_V_we1;
wire   [31:0] grp_compute_CONV_layer_fu_4566_node_embedding_V_d1;
wire   [2:0] grp_compute_CONV_layer_fu_4566_mlp_eps_V_address0;
wire    grp_compute_CONV_layer_fu_4566_mlp_eps_V_ce0;
wire    grp_load_graph_fu_8604_ap_start;
wire    grp_load_graph_fu_8604_ap_done;
wire    grp_load_graph_fu_8604_ap_idle;
wire    grp_load_graph_fu_8604_ap_ready;
wire    grp_load_graph_fu_8604_m_axi_mem_AWVALID;
wire   [63:0] grp_load_graph_fu_8604_m_axi_mem_AWADDR;
wire   [0:0] grp_load_graph_fu_8604_m_axi_mem_AWID;
wire   [31:0] grp_load_graph_fu_8604_m_axi_mem_AWLEN;
wire   [2:0] grp_load_graph_fu_8604_m_axi_mem_AWSIZE;
wire   [1:0] grp_load_graph_fu_8604_m_axi_mem_AWBURST;
wire   [1:0] grp_load_graph_fu_8604_m_axi_mem_AWLOCK;
wire   [3:0] grp_load_graph_fu_8604_m_axi_mem_AWCACHE;
wire   [2:0] grp_load_graph_fu_8604_m_axi_mem_AWPROT;
wire   [3:0] grp_load_graph_fu_8604_m_axi_mem_AWQOS;
wire   [3:0] grp_load_graph_fu_8604_m_axi_mem_AWREGION;
wire   [0:0] grp_load_graph_fu_8604_m_axi_mem_AWUSER;
wire    grp_load_graph_fu_8604_m_axi_mem_WVALID;
wire   [31:0] grp_load_graph_fu_8604_m_axi_mem_WDATA;
wire   [3:0] grp_load_graph_fu_8604_m_axi_mem_WSTRB;
wire    grp_load_graph_fu_8604_m_axi_mem_WLAST;
wire   [0:0] grp_load_graph_fu_8604_m_axi_mem_WID;
wire   [0:0] grp_load_graph_fu_8604_m_axi_mem_WUSER;
wire    grp_load_graph_fu_8604_m_axi_mem_ARVALID;
wire   [63:0] grp_load_graph_fu_8604_m_axi_mem_ARADDR;
wire   [0:0] grp_load_graph_fu_8604_m_axi_mem_ARID;
wire   [31:0] grp_load_graph_fu_8604_m_axi_mem_ARLEN;
wire   [2:0] grp_load_graph_fu_8604_m_axi_mem_ARSIZE;
wire   [1:0] grp_load_graph_fu_8604_m_axi_mem_ARBURST;
wire   [1:0] grp_load_graph_fu_8604_m_axi_mem_ARLOCK;
wire   [3:0] grp_load_graph_fu_8604_m_axi_mem_ARCACHE;
wire   [2:0] grp_load_graph_fu_8604_m_axi_mem_ARPROT;
wire   [3:0] grp_load_graph_fu_8604_m_axi_mem_ARQOS;
wire   [3:0] grp_load_graph_fu_8604_m_axi_mem_ARREGION;
wire   [0:0] grp_load_graph_fu_8604_m_axi_mem_ARUSER;
wire    grp_load_graph_fu_8604_m_axi_mem_RREADY;
wire    grp_load_graph_fu_8604_m_axi_mem_BREADY;
wire   [13:0] grp_load_graph_fu_8604_node_feature_address1;
wire    grp_load_graph_fu_8604_node_feature_ce1;
wire    grp_load_graph_fu_8604_node_feature_we1;
wire   [31:0] grp_load_graph_fu_8604_node_feature_d1;
wire   [12:0] grp_load_graph_fu_8604_edge_attr_address1;
wire    grp_load_graph_fu_8604_edge_attr_ce1;
wire    grp_load_graph_fu_8604_edge_attr_we1;
wire   [31:0] grp_load_graph_fu_8604_edge_attr_d1;
wire   [11:0] grp_load_graph_fu_8604_edge_list_address1;
wire    grp_load_graph_fu_8604_edge_list_ce1;
wire    grp_load_graph_fu_8604_edge_list_we1;
wire   [31:0] grp_load_graph_fu_8604_edge_list_d1;
wire    grp_global_mean_pooling_fu_8621_ap_start;
wire    grp_global_mean_pooling_fu_8621_ap_done;
wire    grp_global_mean_pooling_fu_8621_ap_idle;
wire    grp_global_mean_pooling_fu_8621_ap_ready;
wire   [18:0] grp_global_mean_pooling_fu_8621_node_embedding_V_address0;
wire    grp_global_mean_pooling_fu_8621_node_embedding_V_ce0;
wire   [8:0] grp_global_mean_pooling_fu_8621_graph_embedding_V_address1;
wire    grp_global_mean_pooling_fu_8621_graph_embedding_V_ce1;
wire    grp_global_mean_pooling_fu_8621_graph_embedding_V_we1;
wire   [31:0] grp_global_mean_pooling_fu_8621_graph_embedding_V_d1;
wire    grp_compute_node_embedding_fu_8630_ap_start;
wire    grp_compute_node_embedding_fu_8630_ap_done;
wire    grp_compute_node_embedding_fu_8630_ap_idle;
wire    grp_compute_node_embedding_fu_8630_ap_ready;
wire   [18:0] grp_compute_node_embedding_fu_8630_node_embedding_V_address0;
wire    grp_compute_node_embedding_fu_8630_node_embedding_V_ce0;
wire   [18:0] grp_compute_node_embedding_fu_8630_node_embedding_V_address1;
wire    grp_compute_node_embedding_fu_8630_node_embedding_V_ce1;
wire    grp_compute_node_embedding_fu_8630_node_embedding_V_we1;
wire   [31:0] grp_compute_node_embedding_fu_8630_node_embedding_V_d1;
wire   [15:0] grp_compute_node_embedding_fu_8630_node_embedding_table_V_address0;
wire    grp_compute_node_embedding_fu_8630_node_embedding_table_V_ce0;
wire   [13:0] grp_compute_node_embedding_fu_8630_node_feature_address0;
wire    grp_compute_node_embedding_fu_8630_node_feature_ce0;
wire    grp_global_graph_prediction_fu_8643_ap_start;
wire    grp_global_graph_prediction_fu_8643_ap_done;
wire    grp_global_graph_prediction_fu_8643_ap_idle;
wire    grp_global_graph_prediction_fu_8643_ap_ready;
wire    grp_global_graph_prediction_fu_8643_m_axi_mem_AWVALID;
wire   [63:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWADDR;
wire   [0:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWID;
wire   [31:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWLEN;
wire   [2:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWSIZE;
wire   [1:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWBURST;
wire   [1:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWLOCK;
wire   [3:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWCACHE;
wire   [2:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWPROT;
wire   [3:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWQOS;
wire   [3:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWREGION;
wire   [0:0] grp_global_graph_prediction_fu_8643_m_axi_mem_AWUSER;
wire    grp_global_graph_prediction_fu_8643_m_axi_mem_WVALID;
wire   [31:0] grp_global_graph_prediction_fu_8643_m_axi_mem_WDATA;
wire   [3:0] grp_global_graph_prediction_fu_8643_m_axi_mem_WSTRB;
wire    grp_global_graph_prediction_fu_8643_m_axi_mem_WLAST;
wire   [0:0] grp_global_graph_prediction_fu_8643_m_axi_mem_WID;
wire   [0:0] grp_global_graph_prediction_fu_8643_m_axi_mem_WUSER;
wire    grp_global_graph_prediction_fu_8643_m_axi_mem_ARVALID;
wire   [63:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARADDR;
wire   [0:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARID;
wire   [31:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARLEN;
wire   [2:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARSIZE;
wire   [1:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARBURST;
wire   [1:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARLOCK;
wire   [3:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARCACHE;
wire   [2:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARPROT;
wire   [3:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARQOS;
wire   [3:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARREGION;
wire   [0:0] grp_global_graph_prediction_fu_8643_m_axi_mem_ARUSER;
wire    grp_global_graph_prediction_fu_8643_m_axi_mem_RREADY;
wire    grp_global_graph_prediction_fu_8643_m_axi_mem_BREADY;
wire   [8:0] grp_global_graph_prediction_fu_8643_graph_embedding_V_address0;
wire    grp_global_graph_prediction_fu_8643_graph_embedding_V_ce0;
wire   [8:0] grp_global_graph_prediction_fu_8643_graph_pred_weights_V_address0;
wire    grp_global_graph_prediction_fu_8643_graph_pred_weights_V_ce0;
wire   [0:0] grp_global_graph_prediction_fu_8643_graph_pred_bias_V_address0;
wire    grp_global_graph_prediction_fu_8643_graph_pred_bias_V_ce0;
reg   [2:0] ap_phi_mux_i_phi_fu_4468_p4;
reg   [8:0] ap_phi_mux_dim_in_phi_fu_4480_p4;
reg   [7:0] ap_phi_mux_i_3_phi_fu_4503_p4;
reg   [6:0] ap_phi_mux_i_4_phi_fu_4536_p4;
reg   [2:0] layer_reg_4554;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state60;
reg    grp_compute_CONV_layer_fu_4566_ap_start_reg;
wire   [0:0] icmp_ln476_fu_8929_p2;
reg    grp_load_graph_fu_8604_ap_start_reg;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
reg    grp_global_mean_pooling_fu_8621_ap_start_reg;
wire    ap_CS_fsm_state61;
reg    grp_compute_node_embedding_fu_8630_ap_start_reg;
wire    ap_CS_fsm_state57;
reg    grp_global_graph_prediction_fu_8643_ap_start_reg;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire   [63:0] i_cast_fu_8688_p1;
wire   [63:0] dim_in_cast_fu_8744_p1;
wire   [63:0] zext_ln405_1_fu_8822_p1;
wire   [63:0] zext_ln411_1_fu_8899_p1;
wire  signed [63:0] sext_ln392_fu_8666_p1;
wire  signed [63:0] sext_ln397_fu_8702_p1;
wire  signed [63:0] sext_ln398_fu_8722_p1;
wire  signed [63:0] sext_ln403_fu_8758_p1;
wire  signed [63:0] sext_ln409_fu_8835_p1;
wire  signed [63:0] sext_ln464_fu_8912_p1;
wire   [61:0] trunc_ln_fu_8656_p4;
wire   [61:0] trunc_ln2_fu_8693_p4;
wire   [61:0] trunc_ln3_fu_8713_p4;
wire   [61:0] trunc_ln4_fu_8749_p4;
wire   [0:0] icmp_ln404_fu_8787_p2;
wire   [7:0] add_ln403_fu_8781_p2;
wire   [15:0] grp_fu_8935_p3;
wire   [61:0] trunc_ln5_fu_8826_p4;
wire   [0:0] icmp_ln410_fu_8864_p2;
wire   [6:0] add_ln409_fu_8858_p2;
wire   [14:0] grp_fu_8944_p3;
wire   [61:0] trunc_ln6_fu_8903_p4;
wire   [7:0] grp_fu_8935_p0;
wire   [9:0] grp_fu_8935_p1;
wire   [8:0] grp_fu_8935_p2;
wire   [6:0] grp_fu_8944_p0;
wire   [9:0] grp_fu_8944_p1;
wire   [8:0] grp_fu_8944_p2;
reg    grp_fu_8935_ce;
reg    grp_fu_8944_ce;
reg   [52:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [15:0] grp_fu_8935_p00;
wire   [15:0] grp_fu_8935_p20;
wire   [14:0] grp_fu_8944_p00;
wire   [14:0] grp_fu_8944_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 53'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 grp_compute_CONV_layer_fu_4566_ap_start_reg = 1'b0;
#0 grp_load_graph_fu_8604_ap_start_reg = 1'b0;
#0 grp_global_mean_pooling_fu_8621_ap_start_reg = 1'b0;
#0 grp_compute_node_embedding_fu_8630_ap_start_reg = 1'b0;
#0 grp_global_graph_prediction_fu_8643_ap_start_reg = 1'b0;
end

GIN_compute_one_graph_mlp_eps_V #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
mlp_eps_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mlp_eps_V_address0),
    .ce0(mlp_eps_V_ce0),
    .we0(mlp_eps_V_we0),
    .d0(mem_addr_read_reg_9033),
    .q0(mlp_eps_V_q0)
);

GIN_compute_one_graph_graph_pred_weights_V #(
    .DataWidth( 32 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
graph_pred_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(graph_pred_weights_V_address0),
    .ce0(graph_pred_weights_V_ce0),
    .we0(graph_pred_weights_V_we0),
    .d0(mem_addr_7_read_reg_9064),
    .q0(graph_pred_weights_V_q0)
);

GIN_compute_one_graph_node_embedding_table_V #(
    .DataWidth( 32 ),
    .AddressRange( 51900 ),
    .AddressWidth( 16 ))
node_embedding_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_compute_node_embedding_fu_8630_node_embedding_table_V_address0),
    .ce0(node_embedding_table_V_ce0),
    .q0(node_embedding_table_V_q0),
    .address1(node_embedding_table_V_address1),
    .ce1(node_embedding_table_V_ce1),
    .we1(node_embedding_table_V_we1),
    .d1(mem_addr_8_read_reg_9109)
);

GIN_compute_one_graph_edge_embedding_table_V #(
    .DataWidth( 32 ),
    .AddressRange( 19500 ),
    .AddressWidth( 15 ))
edge_embedding_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_compute_CONV_layer_fu_4566_edge_embedding_table_V_address0),
    .ce0(edge_embedding_table_V_ce0),
    .q0(edge_embedding_table_V_q0),
    .address1(edge_embedding_table_V_address1),
    .ce1(edge_embedding_table_V_ce1),
    .we1(edge_embedding_table_V_we1),
    .d1(mem_addr_9_read_reg_9154)
);

GIN_compute_one_graph_node_feature #(
    .DataWidth( 32 ),
    .AddressRange( 9000 ),
    .AddressWidth( 14 ))
node_feature_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_compute_node_embedding_fu_8630_node_feature_address0),
    .ce0(node_feature_ce0),
    .q0(node_feature_q0),
    .address1(grp_load_graph_fu_8604_node_feature_address1),
    .ce1(node_feature_ce1),
    .we1(node_feature_we1),
    .d1(grp_load_graph_fu_8604_node_feature_d1)
);

GIN_compute_one_graph_edge_attr #(
    .DataWidth( 32 ),
    .AddressRange( 6000 ),
    .AddressWidth( 13 ))
edge_attr_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_compute_CONV_layer_fu_4566_edge_attr_address0),
    .ce0(edge_attr_ce0),
    .q0(edge_attr_q0),
    .address1(grp_load_graph_fu_8604_edge_attr_address1),
    .ce1(edge_attr_ce1),
    .we1(edge_attr_we1),
    .d1(grp_load_graph_fu_8604_edge_attr_d1)
);

GIN_compute_one_graph_edge_list #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
edge_list_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_compute_CONV_layer_fu_4566_edge_list_address0),
    .ce0(edge_list_ce0),
    .q0(edge_list_q0),
    .address1(edge_list_address1),
    .ce1(edge_list_ce1),
    .we1(edge_list_we1),
    .d1(grp_load_graph_fu_8604_edge_list_d1),
    .q1(edge_list_q1)
);

GIN_compute_one_graph_node_embedding_V #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
node_embedding_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(node_embedding_V_address0),
    .ce0(node_embedding_V_ce0),
    .q0(node_embedding_V_q0),
    .address1(node_embedding_V_address1),
    .ce1(node_embedding_V_ce1),
    .we1(node_embedding_V_we1),
    .d1(node_embedding_V_d1)
);

GIN_compute_one_graph_graph_embedding_V #(
    .DataWidth( 32 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
graph_embedding_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_global_graph_prediction_fu_8643_graph_embedding_V_address0),
    .ce0(graph_embedding_V_ce0),
    .q0(graph_embedding_V_q0),
    .address1(grp_global_mean_pooling_fu_8621_graph_embedding_V_address1),
    .ce1(graph_embedding_V_ce1),
    .we1(graph_embedding_V_we1),
    .d1(grp_global_mean_pooling_fu_8621_graph_embedding_V_d1)
);

GIN_compute_one_graph_graph_pred_bias_V #(
    .DataWidth( 32 ),
    .AddressRange( 1 ),
    .AddressWidth( 1 ))
graph_pred_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(graph_pred_bias_V_address0),
    .ce0(graph_pred_bias_V_ce0),
    .we0(graph_pred_bias_V_we0),
    .d0(mem_addr_6_read_reg_9050),
    .q0(graph_pred_bias_V_q0)
);

GIN_compute_one_graph_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .node_feature_in(node_feature_in),
    .edge_list_in(edge_list_in),
    .edge_attr_in(edge_attr_in),
    .graph_attr(graph_attr),
    .task_r(task_r),
    .gnn_node_mlp_1_weights_fixed(gnn_node_mlp_1_weights_fixed),
    .gnn_node_mlp_1_bias_fixed(gnn_node_mlp_1_bias_fixed),
    .gnn_node_mlp_2_weights_fixed(gnn_node_mlp_2_weights_fixed),
    .gnn_node_mlp_2_bias_fixed(gnn_node_mlp_2_bias_fixed),
    .gnn_node_embedding_fixed(gnn_node_embedding_fixed),
    .gnn_edge_embedding_fixed(gnn_edge_embedding_fixed),
    .graph_pred_linear_weight_fixed(graph_pred_linear_weight_fixed),
    .graph_pred_linear_bias_fixed(graph_pred_linear_bias_fixed),
    .eps_fixed(eps_fixed),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

GIN_compute_one_graph_mem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MEM_CACHE_VALUE ))
mem_m_axi_U(
    .AWVALID(m_axi_mem_AWVALID),
    .AWREADY(m_axi_mem_AWREADY),
    .AWADDR(m_axi_mem_AWADDR),
    .AWID(m_axi_mem_AWID),
    .AWLEN(m_axi_mem_AWLEN),
    .AWSIZE(m_axi_mem_AWSIZE),
    .AWBURST(m_axi_mem_AWBURST),
    .AWLOCK(m_axi_mem_AWLOCK),
    .AWCACHE(m_axi_mem_AWCACHE),
    .AWPROT(m_axi_mem_AWPROT),
    .AWQOS(m_axi_mem_AWQOS),
    .AWREGION(m_axi_mem_AWREGION),
    .AWUSER(m_axi_mem_AWUSER),
    .WVALID(m_axi_mem_WVALID),
    .WREADY(m_axi_mem_WREADY),
    .WDATA(m_axi_mem_WDATA),
    .WSTRB(m_axi_mem_WSTRB),
    .WLAST(m_axi_mem_WLAST),
    .WID(m_axi_mem_WID),
    .WUSER(m_axi_mem_WUSER),
    .ARVALID(m_axi_mem_ARVALID),
    .ARREADY(m_axi_mem_ARREADY),
    .ARADDR(m_axi_mem_ARADDR),
    .ARID(m_axi_mem_ARID),
    .ARLEN(m_axi_mem_ARLEN),
    .ARSIZE(m_axi_mem_ARSIZE),
    .ARBURST(m_axi_mem_ARBURST),
    .ARLOCK(m_axi_mem_ARLOCK),
    .ARCACHE(m_axi_mem_ARCACHE),
    .ARPROT(m_axi_mem_ARPROT),
    .ARQOS(m_axi_mem_ARQOS),
    .ARREGION(m_axi_mem_ARREGION),
    .ARUSER(m_axi_mem_ARUSER),
    .RVALID(m_axi_mem_RVALID),
    .RREADY(m_axi_mem_RREADY),
    .RDATA(m_axi_mem_RDATA),
    .RLAST(m_axi_mem_RLAST),
    .RID(m_axi_mem_RID),
    .RUSER(m_axi_mem_RUSER),
    .RRESP(m_axi_mem_RRESP),
    .BVALID(m_axi_mem_BVALID),
    .BREADY(m_axi_mem_BREADY),
    .BRESP(m_axi_mem_BRESP),
    .BID(m_axi_mem_BID),
    .BUSER(m_axi_mem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(mem_ARVALID),
    .I_ARREADY(mem_ARREADY),
    .I_ARADDR(mem_ARADDR),
    .I_ARID(mem_ARID),
    .I_ARLEN(mem_ARLEN),
    .I_ARSIZE(mem_ARSIZE),
    .I_ARLOCK(mem_ARLOCK),
    .I_ARCACHE(mem_ARCACHE),
    .I_ARQOS(mem_ARQOS),
    .I_ARPROT(mem_ARPROT),
    .I_ARUSER(mem_ARUSER),
    .I_ARBURST(mem_ARBURST),
    .I_ARREGION(mem_ARREGION),
    .I_RVALID(mem_RVALID),
    .I_RREADY(mem_RREADY),
    .I_RDATA(mem_RDATA),
    .I_RID(mem_RID),
    .I_RUSER(mem_RUSER),
    .I_RRESP(mem_RRESP),
    .I_RLAST(mem_RLAST),
    .I_AWVALID(mem_AWVALID),
    .I_AWREADY(mem_AWREADY),
    .I_AWADDR(grp_global_graph_prediction_fu_8643_m_axi_mem_AWADDR),
    .I_AWID(grp_global_graph_prediction_fu_8643_m_axi_mem_AWID),
    .I_AWLEN(grp_global_graph_prediction_fu_8643_m_axi_mem_AWLEN),
    .I_AWSIZE(grp_global_graph_prediction_fu_8643_m_axi_mem_AWSIZE),
    .I_AWLOCK(grp_global_graph_prediction_fu_8643_m_axi_mem_AWLOCK),
    .I_AWCACHE(grp_global_graph_prediction_fu_8643_m_axi_mem_AWCACHE),
    .I_AWQOS(grp_global_graph_prediction_fu_8643_m_axi_mem_AWQOS),
    .I_AWPROT(grp_global_graph_prediction_fu_8643_m_axi_mem_AWPROT),
    .I_AWUSER(grp_global_graph_prediction_fu_8643_m_axi_mem_AWUSER),
    .I_AWBURST(grp_global_graph_prediction_fu_8643_m_axi_mem_AWBURST),
    .I_AWREGION(grp_global_graph_prediction_fu_8643_m_axi_mem_AWREGION),
    .I_WVALID(mem_WVALID),
    .I_WREADY(mem_WREADY),
    .I_WDATA(grp_global_graph_prediction_fu_8643_m_axi_mem_WDATA),
    .I_WID(grp_global_graph_prediction_fu_8643_m_axi_mem_WID),
    .I_WUSER(grp_global_graph_prediction_fu_8643_m_axi_mem_WUSER),
    .I_WLAST(grp_global_graph_prediction_fu_8643_m_axi_mem_WLAST),
    .I_WSTRB(grp_global_graph_prediction_fu_8643_m_axi_mem_WSTRB),
    .I_BVALID(mem_BVALID),
    .I_BREADY(mem_BREADY),
    .I_BRESP(mem_BRESP),
    .I_BID(mem_BID),
    .I_BUSER(mem_BUSER)
);

GIN_compute_one_graph_compute_CONV_layer grp_compute_CONV_layer_fu_4566(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_compute_CONV_layer_fu_4566_ap_start),
    .ap_done(grp_compute_CONV_layer_fu_4566_ap_done),
    .ap_idle(grp_compute_CONV_layer_fu_4566_ap_idle),
    .ap_ready(grp_compute_CONV_layer_fu_4566_ap_ready),
    .m_axi_mem_AWVALID(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_compute_CONV_layer_fu_4566_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_compute_CONV_layer_fu_4566_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_compute_CONV_layer_fu_4566_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_compute_CONV_layer_fu_4566_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_compute_CONV_layer_fu_4566_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_compute_CONV_layer_fu_4566_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_compute_CONV_layer_fu_4566_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(mem_ARREADY),
    .m_axi_mem_ARADDR(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_compute_CONV_layer_fu_4566_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(mem_RVALID),
    .m_axi_mem_RREADY(grp_compute_CONV_layer_fu_4566_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(mem_RDATA),
    .m_axi_mem_RLAST(mem_RLAST),
    .m_axi_mem_RID(mem_RID),
    .m_axi_mem_RUSER(mem_RUSER),
    .m_axi_mem_RRESP(mem_RRESP),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_compute_CONV_layer_fu_4566_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .num_of_nodes(num_of_nodes_reg_9165),
    .num_of_edges(num_of_edges_reg_9173),
    .layer(layer_reg_4554),
    .gnn_node_mlp_1_weights_fixed(gnn_node_mlp_1_weights_fixed_read_reg_8988),
    .gnn_node_mlp_1_bias_fixed(gnn_node_mlp_1_bias_fixed_read_reg_8983),
    .gnn_node_mlp_2_weights_fixed(gnn_node_mlp_2_weights_fixed_read_reg_8978),
    .gnn_node_mlp_2_bias_fixed(gnn_node_mlp_2_bias_fixed_read_reg_8973),
    .edge_embedding_table_V_address0(grp_compute_CONV_layer_fu_4566_edge_embedding_table_V_address0),
    .edge_embedding_table_V_ce0(grp_compute_CONV_layer_fu_4566_edge_embedding_table_V_ce0),
    .edge_embedding_table_V_q0(edge_embedding_table_V_q0),
    .edge_attr_address0(grp_compute_CONV_layer_fu_4566_edge_attr_address0),
    .edge_attr_ce0(grp_compute_CONV_layer_fu_4566_edge_attr_ce0),
    .edge_attr_q0(edge_attr_q0),
    .edge_list_address0(grp_compute_CONV_layer_fu_4566_edge_list_address0),
    .edge_list_ce0(grp_compute_CONV_layer_fu_4566_edge_list_ce0),
    .edge_list_q0(edge_list_q0),
    .edge_list_address1(grp_compute_CONV_layer_fu_4566_edge_list_address1),
    .edge_list_ce1(grp_compute_CONV_layer_fu_4566_edge_list_ce1),
    .edge_list_q1(edge_list_q1),
    .node_embedding_V_address0(grp_compute_CONV_layer_fu_4566_node_embedding_V_address0),
    .node_embedding_V_ce0(grp_compute_CONV_layer_fu_4566_node_embedding_V_ce0),
    .node_embedding_V_q0(node_embedding_V_q0),
    .node_embedding_V_address1(grp_compute_CONV_layer_fu_4566_node_embedding_V_address1),
    .node_embedding_V_ce1(grp_compute_CONV_layer_fu_4566_node_embedding_V_ce1),
    .node_embedding_V_we1(grp_compute_CONV_layer_fu_4566_node_embedding_V_we1),
    .node_embedding_V_d1(grp_compute_CONV_layer_fu_4566_node_embedding_V_d1),
    .mlp_eps_V_address0(grp_compute_CONV_layer_fu_4566_mlp_eps_V_address0),
    .mlp_eps_V_ce0(grp_compute_CONV_layer_fu_4566_mlp_eps_V_ce0),
    .mlp_eps_V_q0(mlp_eps_V_q0)
);

GIN_compute_one_graph_load_graph grp_load_graph_fu_8604(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_graph_fu_8604_ap_start),
    .ap_done(grp_load_graph_fu_8604_ap_done),
    .ap_idle(grp_load_graph_fu_8604_ap_idle),
    .ap_ready(grp_load_graph_fu_8604_ap_ready),
    .m_axi_mem_AWVALID(grp_load_graph_fu_8604_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_load_graph_fu_8604_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_load_graph_fu_8604_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_load_graph_fu_8604_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_load_graph_fu_8604_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_load_graph_fu_8604_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_load_graph_fu_8604_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_load_graph_fu_8604_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_load_graph_fu_8604_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_load_graph_fu_8604_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_load_graph_fu_8604_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_load_graph_fu_8604_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_load_graph_fu_8604_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_load_graph_fu_8604_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_load_graph_fu_8604_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_load_graph_fu_8604_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_load_graph_fu_8604_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_load_graph_fu_8604_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_load_graph_fu_8604_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(mem_ARREADY),
    .m_axi_mem_ARADDR(grp_load_graph_fu_8604_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_load_graph_fu_8604_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_load_graph_fu_8604_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_load_graph_fu_8604_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_load_graph_fu_8604_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_load_graph_fu_8604_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_load_graph_fu_8604_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_load_graph_fu_8604_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_load_graph_fu_8604_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_load_graph_fu_8604_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_load_graph_fu_8604_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(mem_RVALID),
    .m_axi_mem_RREADY(grp_load_graph_fu_8604_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(mem_RDATA),
    .m_axi_mem_RLAST(mem_RLAST),
    .m_axi_mem_RID(mem_RID),
    .m_axi_mem_RUSER(mem_RUSER),
    .m_axi_mem_RRESP(mem_RRESP),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_load_graph_fu_8604_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .node_feature_in(node_feature_in_read_reg_9013),
    .edge_list_in(edge_list_in_read_reg_9008),
    .edge_attr_in(edge_attr_in_read_reg_9003),
    .num_of_nodes(num_of_nodes_reg_9165),
    .num_of_edges(num_of_edges_reg_9173),
    .node_feature_address1(grp_load_graph_fu_8604_node_feature_address1),
    .node_feature_ce1(grp_load_graph_fu_8604_node_feature_ce1),
    .node_feature_we1(grp_load_graph_fu_8604_node_feature_we1),
    .node_feature_d1(grp_load_graph_fu_8604_node_feature_d1),
    .edge_attr_address1(grp_load_graph_fu_8604_edge_attr_address1),
    .edge_attr_ce1(grp_load_graph_fu_8604_edge_attr_ce1),
    .edge_attr_we1(grp_load_graph_fu_8604_edge_attr_we1),
    .edge_attr_d1(grp_load_graph_fu_8604_edge_attr_d1),
    .edge_list_address1(grp_load_graph_fu_8604_edge_list_address1),
    .edge_list_ce1(grp_load_graph_fu_8604_edge_list_ce1),
    .edge_list_we1(grp_load_graph_fu_8604_edge_list_we1),
    .edge_list_d1(grp_load_graph_fu_8604_edge_list_d1)
);

GIN_compute_one_graph_global_mean_pooling grp_global_mean_pooling_fu_8621(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_global_mean_pooling_fu_8621_ap_start),
    .ap_done(grp_global_mean_pooling_fu_8621_ap_done),
    .ap_idle(grp_global_mean_pooling_fu_8621_ap_idle),
    .ap_ready(grp_global_mean_pooling_fu_8621_ap_ready),
    .num_of_nodes(num_of_nodes_reg_9165),
    .node_embedding_V_address0(grp_global_mean_pooling_fu_8621_node_embedding_V_address0),
    .node_embedding_V_ce0(grp_global_mean_pooling_fu_8621_node_embedding_V_ce0),
    .node_embedding_V_q0(node_embedding_V_q0),
    .graph_embedding_V_address1(grp_global_mean_pooling_fu_8621_graph_embedding_V_address1),
    .graph_embedding_V_ce1(grp_global_mean_pooling_fu_8621_graph_embedding_V_ce1),
    .graph_embedding_V_we1(grp_global_mean_pooling_fu_8621_graph_embedding_V_we1),
    .graph_embedding_V_d1(grp_global_mean_pooling_fu_8621_graph_embedding_V_d1)
);

GIN_compute_one_graph_compute_node_embedding grp_compute_node_embedding_fu_8630(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_compute_node_embedding_fu_8630_ap_start),
    .ap_done(grp_compute_node_embedding_fu_8630_ap_done),
    .ap_idle(grp_compute_node_embedding_fu_8630_ap_idle),
    .ap_ready(grp_compute_node_embedding_fu_8630_ap_ready),
    .num_of_nodes(num_of_nodes_reg_9165),
    .node_embedding_V_address0(grp_compute_node_embedding_fu_8630_node_embedding_V_address0),
    .node_embedding_V_ce0(grp_compute_node_embedding_fu_8630_node_embedding_V_ce0),
    .node_embedding_V_q0(node_embedding_V_q0),
    .node_embedding_V_address1(grp_compute_node_embedding_fu_8630_node_embedding_V_address1),
    .node_embedding_V_ce1(grp_compute_node_embedding_fu_8630_node_embedding_V_ce1),
    .node_embedding_V_we1(grp_compute_node_embedding_fu_8630_node_embedding_V_we1),
    .node_embedding_V_d1(grp_compute_node_embedding_fu_8630_node_embedding_V_d1),
    .node_embedding_table_V_address0(grp_compute_node_embedding_fu_8630_node_embedding_table_V_address0),
    .node_embedding_table_V_ce0(grp_compute_node_embedding_fu_8630_node_embedding_table_V_ce0),
    .node_embedding_table_V_q0(node_embedding_table_V_q0),
    .node_feature_address0(grp_compute_node_embedding_fu_8630_node_feature_address0),
    .node_feature_ce0(grp_compute_node_embedding_fu_8630_node_feature_ce0),
    .node_feature_q0(node_feature_q0)
);

GIN_compute_one_graph_global_graph_prediction grp_global_graph_prediction_fu_8643(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_global_graph_prediction_fu_8643_ap_start),
    .ap_done(grp_global_graph_prediction_fu_8643_ap_done),
    .ap_idle(grp_global_graph_prediction_fu_8643_ap_idle),
    .ap_ready(grp_global_graph_prediction_fu_8643_ap_ready),
    .m_axi_mem_AWVALID(grp_global_graph_prediction_fu_8643_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(mem_AWREADY),
    .m_axi_mem_AWADDR(grp_global_graph_prediction_fu_8643_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_global_graph_prediction_fu_8643_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_global_graph_prediction_fu_8643_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_global_graph_prediction_fu_8643_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_global_graph_prediction_fu_8643_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_global_graph_prediction_fu_8643_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_global_graph_prediction_fu_8643_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_global_graph_prediction_fu_8643_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_global_graph_prediction_fu_8643_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_global_graph_prediction_fu_8643_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_global_graph_prediction_fu_8643_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_global_graph_prediction_fu_8643_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(mem_WREADY),
    .m_axi_mem_WDATA(grp_global_graph_prediction_fu_8643_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_global_graph_prediction_fu_8643_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_global_graph_prediction_fu_8643_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_global_graph_prediction_fu_8643_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_global_graph_prediction_fu_8643_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_global_graph_prediction_fu_8643_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(1'b0),
    .m_axi_mem_ARADDR(grp_global_graph_prediction_fu_8643_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_global_graph_prediction_fu_8643_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_global_graph_prediction_fu_8643_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_global_graph_prediction_fu_8643_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_global_graph_prediction_fu_8643_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_global_graph_prediction_fu_8643_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_global_graph_prediction_fu_8643_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_global_graph_prediction_fu_8643_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_global_graph_prediction_fu_8643_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_global_graph_prediction_fu_8643_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_global_graph_prediction_fu_8643_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(1'b0),
    .m_axi_mem_RREADY(grp_global_graph_prediction_fu_8643_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(32'd0),
    .m_axi_mem_RLAST(1'b0),
    .m_axi_mem_RID(1'd0),
    .m_axi_mem_RUSER(1'd0),
    .m_axi_mem_RRESP(2'd0),
    .m_axi_mem_BVALID(mem_BVALID),
    .m_axi_mem_BREADY(grp_global_graph_prediction_fu_8643_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(mem_BRESP),
    .m_axi_mem_BID(mem_BID),
    .m_axi_mem_BUSER(mem_BUSER),
    .d_out(task_read_reg_8993),
    .graph_embedding_V_address0(grp_global_graph_prediction_fu_8643_graph_embedding_V_address0),
    .graph_embedding_V_ce0(grp_global_graph_prediction_fu_8643_graph_embedding_V_ce0),
    .graph_embedding_V_q0(graph_embedding_V_q0),
    .graph_pred_weights_V_address0(grp_global_graph_prediction_fu_8643_graph_pred_weights_V_address0),
    .graph_pred_weights_V_ce0(grp_global_graph_prediction_fu_8643_graph_pred_weights_V_ce0),
    .graph_pred_weights_V_q0(graph_pred_weights_V_q0),
    .graph_pred_bias_V_address0(grp_global_graph_prediction_fu_8643_graph_pred_bias_V_address0),
    .graph_pred_bias_V_ce0(grp_global_graph_prediction_fu_8643_graph_pred_bias_V_ce0),
    .graph_pred_bias_V_q0(graph_pred_bias_V_q0)
);

GIN_compute_one_graph_mac_muladd_8ns_10ns_9ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_10ns_9ns_16_4_1_U179(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_8935_p0),
    .din1(grp_fu_8935_p1),
    .din2(grp_fu_8935_p2),
    .ce(grp_fu_8935_ce),
    .dout(grp_fu_8935_p3)
);

GIN_compute_one_graph_mac_muladd_7ns_10ns_9ns_15_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mac_muladd_7ns_10ns_9ns_15_4_1_U180(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_8944_p0),
    .din1(grp_fu_8944_p1),
    .din2(grp_fu_8944_p2),
    .ce(grp_fu_8944_ce),
    .dout(grp_fu_8944_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state31) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state31)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state31);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state42) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state42)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state42);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_compute_CONV_layer_fu_4566_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0))) begin
            grp_compute_CONV_layer_fu_4566_ap_start_reg <= 1'b1;
        end else if ((grp_compute_CONV_layer_fu_4566_ap_ready == 1'b1)) begin
            grp_compute_CONV_layer_fu_4566_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_compute_node_embedding_fu_8630_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_compute_node_embedding_fu_8630_ap_start_reg <= 1'b1;
        end else if ((grp_compute_node_embedding_fu_8630_ap_ready == 1'b1)) begin
            grp_compute_node_embedding_fu_8630_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_global_graph_prediction_fu_8643_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state62)) begin
            grp_global_graph_prediction_fu_8643_ap_start_reg <= 1'b1;
        end else if ((grp_global_graph_prediction_fu_8643_ap_ready == 1'b1)) begin
            grp_global_graph_prediction_fu_8643_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_global_mean_pooling_fu_8621_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd1))) begin
            grp_global_mean_pooling_fu_8621_ap_start_reg <= 1'b1;
        end else if ((grp_global_mean_pooling_fu_8621_ap_ready == 1'b1)) begin
            grp_global_mean_pooling_fu_8621_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_graph_fu_8604_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state55)) begin
            grp_load_graph_fu_8604_ap_start_reg <= 1'b1;
        end else if ((grp_load_graph_fu_8604_ap_ready == 1'b1)) begin
            grp_load_graph_fu_8604_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_8852_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        dim_1_reg_4543 <= add_ln410_fu_8890_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        dim_1_reg_4543 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dim_in_reg_4476 <= 9'd0;
    end else if (((icmp_ln398_reg_9060 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dim_in_reg_4476 <= add_ln398_reg_9055;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln403_fu_8775_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dim_reg_4510 <= add_ln404_fu_8813_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        dim_reg_4510 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln403_reg_9080 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_3_reg_4499 <= select_ln403_1_reg_9089;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        i_3_reg_4499 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln409_reg_9125 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_4_reg_4532 <= select_ln409_1_reg_9134;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        i_4_reg_4532 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_4464 <= 3'd0;
    end else if (((icmp_ln392_reg_9029 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_4464 <= add_ln392_reg_9024;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_8852_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten7_reg_4521 <= add_ln409_1_fu_8846_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        indvar_flatten7_reg_4521 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln403_fu_8775_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten_reg_4488 <= add_ln403_1_fu_8769_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        indvar_flatten_reg_4488 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_compute_CONV_layer_fu_4566_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
        layer_reg_4554 <= layer_1_reg_9179;
    end else if (((grp_compute_node_embedding_fu_8630_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
        layer_reg_4554 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln392_reg_9024 <= add_ln392_fu_8676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln398_reg_9055 <= add_ln398_fu_8732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dim_in_reg_4476_pp1_iter1_reg <= dim_in_reg_4476;
        icmp_ln398_reg_9060 <= icmp_ln398_fu_8738_p2;
        icmp_ln398_reg_9060_pp1_iter1_reg <= icmp_ln398_reg_9060;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        edge_attr_in_read_reg_9003 <= edge_attr_in;
        edge_list_in_read_reg_9008 <= edge_list_in;
        gnn_edge_embedding_fixed_read_reg_8963 <= gnn_edge_embedding_fixed;
        gnn_node_embedding_fixed_read_reg_8968 <= gnn_node_embedding_fixed;
        gnn_node_mlp_1_bias_fixed_read_reg_8983 <= gnn_node_mlp_1_bias_fixed;
        gnn_node_mlp_1_weights_fixed_read_reg_8988 <= gnn_node_mlp_1_weights_fixed;
        gnn_node_mlp_2_bias_fixed_read_reg_8973 <= gnn_node_mlp_2_bias_fixed;
        gnn_node_mlp_2_weights_fixed_read_reg_8978 <= gnn_node_mlp_2_weights_fixed;
        graph_attr_read_reg_8998 <= graph_attr;
        graph_pred_linear_bias_fixed_read_reg_8953 <= graph_pred_linear_bias_fixed;
        graph_pred_linear_weight_fixed_read_reg_8958 <= graph_pred_linear_weight_fixed;
        mem_addr_reg_9018 <= sext_ln392_fu_8666_p1;
        node_feature_in_read_reg_9013 <= node_feature_in;
        task_read_reg_8993 <= task_r;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_4464_pp0_iter1_reg <= i_reg_4464;
        icmp_ln392_reg_9029 <= icmp_ln392_fu_8682_p2;
        icmp_ln392_reg_9029_pp0_iter1_reg <= icmp_ln392_reg_9029;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln403_reg_9080 <= icmp_ln403_fu_8775_p2;
        icmp_ln403_reg_9080_pp2_iter1_reg <= icmp_ln403_reg_9080;
        select_ln403_reg_9084_pp2_iter1_reg <= select_ln403_reg_9084;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln403_reg_9080_pp2_iter2_reg <= icmp_ln403_reg_9080_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln409_reg_9125 <= icmp_ln409_fu_8852_p2;
        icmp_ln409_reg_9125_pp3_iter1_reg <= icmp_ln409_reg_9125;
        select_ln409_reg_9129_pp3_iter1_reg <= select_ln409_reg_9129;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln409_reg_9125_pp3_iter2_reg <= icmp_ln409_reg_9125_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        layer_1_reg_9179 <= layer_1_fu_8923_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        mem_addr_6_read_reg_9050 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln398_reg_9060 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        mem_addr_7_read_reg_9064 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        mem_addr_7_reg_9044 <= sext_ln398_fu_8722_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln403_reg_9080_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        mem_addr_8_read_reg_9109 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_reg_9125_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        mem_addr_9_read_reg_9154 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln392_reg_9029 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mem_addr_read_reg_9033 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        num_of_edges_reg_9173 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        num_of_nodes_reg_9165 <= mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln403_fu_8775_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln403_1_reg_9089 <= select_ln403_1_fu_8801_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln403_fu_8775_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln403_reg_9084 <= select_ln403_fu_8793_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_8852_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln409_1_reg_9134 <= select_ln409_1_fu_8878_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_8852_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln409_reg_9129 <= select_ln409_fu_8870_p3;
    end
end

always @ (*) begin
    if ((icmp_ln392_fu_8682_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln398_fu_8738_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln403_fu_8775_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln409_fu_8852_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state42 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state42 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_global_graph_prediction_fu_8643_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln398_reg_9060 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_dim_in_phi_fu_4480_p4 = add_ln398_reg_9055;
    end else begin
        ap_phi_mux_dim_in_phi_fu_4480_p4 = dim_in_reg_4476;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln403_reg_9080 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_3_phi_fu_4503_p4 = select_ln403_1_reg_9089;
    end else begin
        ap_phi_mux_i_3_phi_fu_4503_p4 = i_3_reg_4499;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln409_reg_9125 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_4_phi_fu_4536_p4 = select_ln409_1_reg_9134;
    end else begin
        ap_phi_mux_i_4_phi_fu_4536_p4 = i_4_reg_4532;
    end
end

always @ (*) begin
    if (((icmp_ln392_reg_9029 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_4468_p4 = add_ln392_reg_9024;
    end else begin
        ap_phi_mux_i_phi_fu_4468_p4 = i_reg_4464;
    end
end

always @ (*) begin
    if (((grp_global_graph_prediction_fu_8643_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        edge_attr_ce0 = grp_compute_CONV_layer_fu_4566_edge_attr_ce0;
    end else begin
        edge_attr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        edge_attr_ce1 = grp_load_graph_fu_8604_edge_attr_ce1;
    end else begin
        edge_attr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        edge_attr_we1 = grp_load_graph_fu_8604_edge_attr_we1;
    end else begin
        edge_attr_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        edge_embedding_table_V_ce0 = grp_compute_CONV_layer_fu_4566_edge_embedding_table_V_ce0;
    end else begin
        edge_embedding_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        edge_embedding_table_V_ce1 = 1'b1;
    end else begin
        edge_embedding_table_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln409_reg_9125_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        edge_embedding_table_V_we1 = 1'b1;
    end else begin
        edge_embedding_table_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        edge_list_address1 = grp_load_graph_fu_8604_edge_list_address1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        edge_list_address1 = grp_compute_CONV_layer_fu_4566_edge_list_address1;
    end else begin
        edge_list_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        edge_list_ce0 = grp_compute_CONV_layer_fu_4566_edge_list_ce0;
    end else begin
        edge_list_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        edge_list_ce1 = grp_load_graph_fu_8604_edge_list_ce1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        edge_list_ce1 = grp_compute_CONV_layer_fu_4566_edge_list_ce1;
    end else begin
        edge_list_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        edge_list_we1 = grp_load_graph_fu_8604_edge_list_we1;
    end else begin
        edge_list_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        graph_embedding_V_ce0 = grp_global_graph_prediction_fu_8643_graph_embedding_V_ce0;
    end else begin
        graph_embedding_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        graph_embedding_V_ce1 = grp_global_mean_pooling_fu_8621_graph_embedding_V_ce1;
    end else begin
        graph_embedding_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        graph_embedding_V_we1 = grp_global_mean_pooling_fu_8621_graph_embedding_V_we1;
    end else begin
        graph_embedding_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        graph_pred_bias_V_address0 = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        graph_pred_bias_V_address0 = grp_global_graph_prediction_fu_8643_graph_pred_bias_V_address0;
    end else begin
        graph_pred_bias_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        graph_pred_bias_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        graph_pred_bias_V_ce0 = grp_global_graph_prediction_fu_8643_graph_pred_bias_V_ce0;
    end else begin
        graph_pred_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        graph_pred_bias_V_we0 = 1'b1;
    end else begin
        graph_pred_bias_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        graph_pred_weights_V_address0 = dim_in_cast_fu_8744_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        graph_pred_weights_V_address0 = grp_global_graph_prediction_fu_8643_graph_pred_weights_V_address0;
    end else begin
        graph_pred_weights_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        graph_pred_weights_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        graph_pred_weights_V_ce0 = grp_global_graph_prediction_fu_8643_graph_pred_weights_V_ce0;
    end else begin
        graph_pred_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln398_reg_9060_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        graph_pred_weights_V_we0 = 1'b1;
    end else begin
        graph_pred_weights_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_8935_ce = 1'b1;
    end else begin
        grp_fu_8935_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_8944_ce = 1'b1;
    end else begin
        grp_fu_8944_ce = 1'b0;
    end
end

always @ (*) begin
    if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
        mem_ARADDR = sext_ln464_fu_8912_p1;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        mem_ARADDR = sext_ln409_fu_8835_p1;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        mem_ARADDR = sext_ln403_fu_8758_p1;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        mem_ARADDR = mem_addr_7_reg_9044;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        mem_ARADDR = sext_ln397_fu_8702_p1;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_ARADDR = mem_addr_reg_9018;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARADDR = grp_load_graph_fu_8604_m_axi_mem_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARADDR = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARADDR;
    end else begin
        mem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARBURST = grp_load_graph_fu_8604_m_axi_mem_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARBURST = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARBURST;
    end else begin
        mem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARCACHE = grp_load_graph_fu_8604_m_axi_mem_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARCACHE = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARCACHE;
    end else begin
        mem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARID = grp_load_graph_fu_8604_m_axi_mem_ARID;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARID = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARID;
    end else begin
        mem_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
        mem_ARLEN = 32'd2;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        mem_ARLEN = 32'd19500;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        mem_ARLEN = 32'd51900;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        mem_ARLEN = 32'd300;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        mem_ARLEN = 32'd1;
    end else if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_ARLEN = 32'd5;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARLEN = grp_load_graph_fu_8604_m_axi_mem_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARLEN = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARLEN;
    end else begin
        mem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARLOCK = grp_load_graph_fu_8604_m_axi_mem_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARLOCK = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARLOCK;
    end else begin
        mem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARPROT = grp_load_graph_fu_8604_m_axi_mem_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARPROT = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARPROT;
    end else begin
        mem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARQOS = grp_load_graph_fu_8604_m_axi_mem_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARQOS = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARQOS;
    end else begin
        mem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARREGION = grp_load_graph_fu_8604_m_axi_mem_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARREGION = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARREGION;
    end else begin
        mem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARSIZE = grp_load_graph_fu_8604_m_axi_mem_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARSIZE = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARSIZE;
    end else begin
        mem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARUSER = grp_load_graph_fu_8604_m_axi_mem_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARUSER = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARUSER;
    end else begin
        mem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state46)) | ((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35)) | ((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        mem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_ARVALID = grp_load_graph_fu_8604_m_axi_mem_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_ARVALID = grp_compute_CONV_layer_fu_4566_m_axi_mem_ARVALID;
    end else begin
        mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62))) begin
        mem_AWVALID = grp_global_graph_prediction_fu_8643_m_axi_mem_AWVALID;
    end else begin
        mem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62))) begin
        mem_BREADY = grp_global_graph_prediction_fu_8643_m_axi_mem_BREADY;
    end else begin
        mem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state54)) | ((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln409_reg_9125_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((icmp_ln403_reg_9080_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln398_reg_9060 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln392_reg_9029 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        mem_RREADY = grp_load_graph_fu_8604_m_axi_mem_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd0)))) begin
        mem_RREADY = grp_compute_CONV_layer_fu_4566_m_axi_mem_RREADY;
    end else begin
        mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62))) begin
        mem_WVALID = grp_global_graph_prediction_fu_8643_m_axi_mem_WVALID;
    end else begin
        mem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state2))) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state19) | ((icmp_ln409_reg_9125_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((icmp_ln403_reg_9080_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0)) | ((icmp_ln398_reg_9060 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln392_reg_9029 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_blk_n_R = m_axi_mem_RVALID;
    end else begin
        mem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        mlp_eps_V_address0 = i_cast_fu_8688_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        mlp_eps_V_address0 = grp_compute_CONV_layer_fu_4566_mlp_eps_V_address0;
    end else begin
        mlp_eps_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mlp_eps_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        mlp_eps_V_ce0 = grp_compute_CONV_layer_fu_4566_mlp_eps_V_ce0;
    end else begin
        mlp_eps_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln392_reg_9029_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mlp_eps_V_we0 = 1'b1;
    end else begin
        mlp_eps_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        node_embedding_V_address0 = grp_compute_node_embedding_fu_8630_node_embedding_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        node_embedding_V_address0 = grp_global_mean_pooling_fu_8621_node_embedding_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        node_embedding_V_address0 = grp_compute_CONV_layer_fu_4566_node_embedding_V_address0;
    end else begin
        node_embedding_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        node_embedding_V_address1 = grp_compute_node_embedding_fu_8630_node_embedding_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        node_embedding_V_address1 = grp_compute_CONV_layer_fu_4566_node_embedding_V_address1;
    end else begin
        node_embedding_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        node_embedding_V_ce0 = grp_compute_node_embedding_fu_8630_node_embedding_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        node_embedding_V_ce0 = grp_global_mean_pooling_fu_8621_node_embedding_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        node_embedding_V_ce0 = grp_compute_CONV_layer_fu_4566_node_embedding_V_ce0;
    end else begin
        node_embedding_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        node_embedding_V_ce1 = grp_compute_node_embedding_fu_8630_node_embedding_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        node_embedding_V_ce1 = grp_compute_CONV_layer_fu_4566_node_embedding_V_ce1;
    end else begin
        node_embedding_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        node_embedding_V_d1 = grp_compute_node_embedding_fu_8630_node_embedding_V_d1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        node_embedding_V_d1 = grp_compute_CONV_layer_fu_4566_node_embedding_V_d1;
    end else begin
        node_embedding_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        node_embedding_V_we1 = grp_compute_node_embedding_fu_8630_node_embedding_V_we1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        node_embedding_V_we1 = grp_compute_CONV_layer_fu_4566_node_embedding_V_we1;
    end else begin
        node_embedding_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        node_embedding_table_V_ce0 = grp_compute_node_embedding_fu_8630_node_embedding_table_V_ce0;
    end else begin
        node_embedding_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        node_embedding_table_V_ce1 = 1'b1;
    end else begin
        node_embedding_table_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln403_reg_9080_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        node_embedding_table_V_we1 = 1'b1;
    end else begin
        node_embedding_table_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        node_feature_ce0 = grp_compute_node_embedding_fu_8630_node_feature_ce0;
    end else begin
        node_feature_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        node_feature_ce1 = grp_load_graph_fu_8604_node_feature_ce1;
    end else begin
        node_feature_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        node_feature_we1 = grp_load_graph_fu_8604_node_feature_we1;
    end else begin
        node_feature_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln392_fu_8682_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln392_fu_8682_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln398_fu_8738_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln398_fu_8738_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln403_fu_8775_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln403_fu_8775_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln409_fu_8852_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln409_fu_8852_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((mem_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((grp_load_graph_fu_8604_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((grp_compute_node_embedding_fu_8630_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln476_fu_8929_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((grp_compute_CONV_layer_fu_4566_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((grp_global_mean_pooling_fu_8621_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            if (((grp_global_graph_prediction_fu_8643_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln392_fu_8676_p2 = (ap_phi_mux_i_phi_fu_4468_p4 + 3'd1);

assign add_ln398_fu_8732_p2 = (ap_phi_mux_dim_in_phi_fu_4480_p4 + 9'd1);

assign add_ln403_1_fu_8769_p2 = (indvar_flatten_reg_4488 + 16'd1);

assign add_ln403_fu_8781_p2 = (ap_phi_mux_i_3_phi_fu_4503_p4 + 8'd1);

assign add_ln404_fu_8813_p2 = (select_ln403_fu_8793_p3 + 9'd1);

assign add_ln409_1_fu_8846_p2 = (indvar_flatten7_reg_4521 + 15'd1);

assign add_ln409_fu_8858_p2 = (ap_phi_mux_i_4_phi_fu_4536_p4 + 7'd1);

assign add_ln410_fu_8890_p2 = (select_ln409_fu_8870_p3 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((mem_RVALID == 1'b0) & (icmp_ln392_reg_9029 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((mem_RVALID == 1'b0) & (icmp_ln392_reg_9029 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((mem_RVALID == 1'b0) & (icmp_ln398_reg_9060 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((mem_RVALID == 1'b0) & (icmp_ln398_reg_9060 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((mem_RVALID == 1'b0) & (icmp_ln403_reg_9080_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((mem_RVALID == 1'b0) & (icmp_ln403_reg_9080_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((mem_RVALID == 1'b0) & (icmp_ln409_reg_9125_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((mem_RVALID == 1'b0) & (icmp_ln409_reg_9125_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((mem_RVALID == 1'b0) & (icmp_ln392_reg_9029 == 1'd0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp1_stage0_iter1 = ((mem_RVALID == 1'b0) & (icmp_ln398_reg_9060 == 1'd0));
end

assign ap_block_state23_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp2_stage0_iter2 = ((mem_RVALID == 1'b0) & (icmp_ln403_reg_9080_pp2_iter1_reg == 1'd0));
end

assign ap_block_state34_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state44_pp3_stage0_iter2 = ((mem_RVALID == 1'b0) & (icmp_ln409_reg_9125_pp3_iter1_reg == 1'd0));
end

assign ap_block_state45_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign dim_in_cast_fu_8744_p1 = dim_in_reg_4476_pp1_iter1_reg;

assign edge_embedding_table_V_address1 = zext_ln411_1_fu_8899_p1;

assign grp_compute_CONV_layer_fu_4566_ap_start = grp_compute_CONV_layer_fu_4566_ap_start_reg;

assign grp_compute_node_embedding_fu_8630_ap_start = grp_compute_node_embedding_fu_8630_ap_start_reg;

assign grp_fu_8935_p0 = grp_fu_8935_p00;

assign grp_fu_8935_p00 = select_ln403_1_fu_8801_p3;

assign grp_fu_8935_p1 = 16'd300;

assign grp_fu_8935_p2 = grp_fu_8935_p20;

assign grp_fu_8935_p20 = select_ln403_reg_9084_pp2_iter1_reg;

assign grp_fu_8944_p0 = grp_fu_8944_p00;

assign grp_fu_8944_p00 = select_ln409_1_fu_8878_p3;

assign grp_fu_8944_p1 = 15'd300;

assign grp_fu_8944_p2 = grp_fu_8944_p20;

assign grp_fu_8944_p20 = select_ln409_reg_9129_pp3_iter1_reg;

assign grp_global_graph_prediction_fu_8643_ap_start = grp_global_graph_prediction_fu_8643_ap_start_reg;

assign grp_global_mean_pooling_fu_8621_ap_start = grp_global_mean_pooling_fu_8621_ap_start_reg;

assign grp_load_graph_fu_8604_ap_start = grp_load_graph_fu_8604_ap_start_reg;

assign i_cast_fu_8688_p1 = i_reg_4464_pp0_iter1_reg;

assign icmp_ln392_fu_8682_p2 = ((ap_phi_mux_i_phi_fu_4468_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln398_fu_8738_p2 = ((ap_phi_mux_dim_in_phi_fu_4480_p4 == 9'd300) ? 1'b1 : 1'b0);

assign icmp_ln403_fu_8775_p2 = ((indvar_flatten_reg_4488 == 16'd51900) ? 1'b1 : 1'b0);

assign icmp_ln404_fu_8787_p2 = ((dim_reg_4510 == 9'd300) ? 1'b1 : 1'b0);

assign icmp_ln409_fu_8852_p2 = ((indvar_flatten7_reg_4521 == 15'd19500) ? 1'b1 : 1'b0);

assign icmp_ln410_fu_8864_p2 = ((dim_1_reg_4543 == 9'd300) ? 1'b1 : 1'b0);

assign icmp_ln476_fu_8929_p2 = ((layer_reg_4554 == 3'd5) ? 1'b1 : 1'b0);

assign layer_1_fu_8923_p2 = (layer_reg_4554 + 3'd1);

assign node_embedding_table_V_address1 = zext_ln405_1_fu_8822_p1;

assign select_ln403_1_fu_8801_p3 = ((icmp_ln404_fu_8787_p2[0:0] == 1'b1) ? add_ln403_fu_8781_p2 : ap_phi_mux_i_3_phi_fu_4503_p4);

assign select_ln403_fu_8793_p3 = ((icmp_ln404_fu_8787_p2[0:0] == 1'b1) ? 9'd0 : dim_reg_4510);

assign select_ln409_1_fu_8878_p3 = ((icmp_ln410_fu_8864_p2[0:0] == 1'b1) ? add_ln409_fu_8858_p2 : ap_phi_mux_i_4_phi_fu_4536_p4);

assign select_ln409_fu_8870_p3 = ((icmp_ln410_fu_8864_p2[0:0] == 1'b1) ? 9'd0 : dim_1_reg_4543);

assign sext_ln392_fu_8666_p1 = $signed(trunc_ln_fu_8656_p4);

assign sext_ln397_fu_8702_p1 = $signed(trunc_ln2_fu_8693_p4);

assign sext_ln398_fu_8722_p1 = $signed(trunc_ln3_fu_8713_p4);

assign sext_ln403_fu_8758_p1 = $signed(trunc_ln4_fu_8749_p4);

assign sext_ln409_fu_8835_p1 = $signed(trunc_ln5_fu_8826_p4);

assign sext_ln464_fu_8912_p1 = $signed(trunc_ln6_fu_8903_p4);

assign trunc_ln2_fu_8693_p4 = {{graph_pred_linear_bias_fixed_read_reg_8953[63:2]}};

assign trunc_ln3_fu_8713_p4 = {{graph_pred_linear_weight_fixed_read_reg_8958[63:2]}};

assign trunc_ln4_fu_8749_p4 = {{gnn_node_embedding_fixed_read_reg_8968[63:2]}};

assign trunc_ln5_fu_8826_p4 = {{gnn_edge_embedding_fixed_read_reg_8963[63:2]}};

assign trunc_ln6_fu_8903_p4 = {{graph_attr_read_reg_8998[63:2]}};

assign trunc_ln_fu_8656_p4 = {{eps_fixed[63:2]}};

assign zext_ln405_1_fu_8822_p1 = grp_fu_8935_p3;

assign zext_ln411_1_fu_8899_p1 = grp_fu_8944_p3;

endmodule //GIN_compute_one_graph
