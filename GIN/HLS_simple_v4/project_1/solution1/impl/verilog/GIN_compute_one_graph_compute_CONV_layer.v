// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_one_graph_compute_CONV_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer,
        edge_attr_address0,
        edge_attr_ce0,
        edge_attr_q0,
        edge_list_address0,
        edge_list_ce0,
        edge_list_q0,
        edge_list_address1,
        edge_list_ce1,
        edge_list_q1,
        node_embedding_V_address0,
        node_embedding_V_ce0,
        node_embedding_V_q0,
        node_embedding_V_address1,
        node_embedding_V_ce1,
        node_embedding_V_we1,
        node_embedding_V_d1
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] layer;
output  [10:0] edge_attr_address0;
output   edge_attr_ce0;
input  [31:0] edge_attr_q0;
output  [9:0] edge_list_address0;
output   edge_list_ce0;
input  [31:0] edge_list_q0;
output  [9:0] edge_list_address1;
output   edge_list_ce1;
input  [31:0] edge_list_q1;
output  [15:0] node_embedding_V_address0;
output   node_embedding_V_ce0;
input  [31:0] node_embedding_V_q0;
output  [15:0] node_embedding_V_address1;
output   node_embedding_V_ce1;
output   node_embedding_V_we1;
output  [31:0] node_embedding_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] node_embedding_V_address0;
reg node_embedding_V_ce0;
reg node_embedding_V_ce1;
reg node_embedding_V_we1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [17:0] edge_embedding_V_address0;
reg    edge_embedding_V_ce0;
wire   [31:0] edge_embedding_V_q0;
reg    edge_embedding_V_ce1;
reg    edge_embedding_V_we1;
reg   [15:0] message_V_address0;
reg    message_V_ce0;
wire   [31:0] message_V_q0;
reg    message_V_ce1;
reg    message_V_we1;
wire    grp_MLP_fu_2428_ap_start;
wire    grp_MLP_fu_2428_ap_done;
wire    grp_MLP_fu_2428_ap_idle;
wire    grp_MLP_fu_2428_ap_ready;
wire   [15:0] grp_MLP_fu_2428_node_embedding_V_address0;
wire    grp_MLP_fu_2428_node_embedding_V_ce0;
wire   [15:0] grp_MLP_fu_2428_node_embedding_V_address1;
wire    grp_MLP_fu_2428_node_embedding_V_ce1;
wire    grp_MLP_fu_2428_node_embedding_V_we1;
wire   [31:0] grp_MLP_fu_2428_node_embedding_V_d1;
wire   [15:0] grp_MLP_fu_2428_message_V_address0;
wire    grp_MLP_fu_2428_message_V_ce0;
wire    grp_compute_edge_embedding_fu_4837_ap_start;
wire    grp_compute_edge_embedding_fu_4837_ap_done;
wire    grp_compute_edge_embedding_fu_4837_ap_idle;
wire    grp_compute_edge_embedding_fu_4837_ap_ready;
wire   [17:0] grp_compute_edge_embedding_fu_4837_edge_embedding_V_address0;
wire    grp_compute_edge_embedding_fu_4837_edge_embedding_V_ce0;
wire   [17:0] grp_compute_edge_embedding_fu_4837_edge_embedding_V_address1;
wire    grp_compute_edge_embedding_fu_4837_edge_embedding_V_ce1;
wire    grp_compute_edge_embedding_fu_4837_edge_embedding_V_we1;
wire   [31:0] grp_compute_edge_embedding_fu_4837_edge_embedding_V_d1;
wire   [10:0] grp_compute_edge_embedding_fu_4837_edge_attr_address0;
wire    grp_compute_edge_embedding_fu_4837_edge_attr_ce0;
wire    grp_message_passing_fu_4849_ap_start;
wire    grp_message_passing_fu_4849_ap_done;
wire    grp_message_passing_fu_4849_ap_idle;
wire    grp_message_passing_fu_4849_ap_ready;
wire   [15:0] grp_message_passing_fu_4849_message_V_address0;
wire    grp_message_passing_fu_4849_message_V_ce0;
wire   [15:0] grp_message_passing_fu_4849_message_V_address1;
wire    grp_message_passing_fu_4849_message_V_ce1;
wire    grp_message_passing_fu_4849_message_V_we1;
wire   [31:0] grp_message_passing_fu_4849_message_V_d1;
wire   [9:0] grp_message_passing_fu_4849_edge_list_address0;
wire    grp_message_passing_fu_4849_edge_list_ce0;
wire   [9:0] grp_message_passing_fu_4849_edge_list_address1;
wire    grp_message_passing_fu_4849_edge_list_ce1;
wire   [17:0] grp_message_passing_fu_4849_edge_embedding_V_address0;
wire    grp_message_passing_fu_4849_edge_embedding_V_ce0;
wire   [15:0] grp_message_passing_fu_4849_node_embedding_V_address0;
wire    grp_message_passing_fu_4849_node_embedding_V_ce0;
reg    grp_MLP_fu_2428_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_compute_edge_embedding_fu_4837_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_message_passing_fu_4849_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [5:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_MLP_fu_2428_ap_start_reg = 1'b0;
#0 grp_compute_edge_embedding_fu_4837_ap_start_reg = 1'b0;
#0 grp_message_passing_fu_4849_ap_start_reg = 1'b0;
end

GIN_compute_one_graph_compute_CONV_layer_edge_embedding_V #(
    .DataWidth( 32 ),
    .AddressRange( 150000 ),
    .AddressWidth( 18 ))
edge_embedding_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(edge_embedding_V_address0),
    .ce0(edge_embedding_V_ce0),
    .q0(edge_embedding_V_q0),
    .address1(grp_compute_edge_embedding_fu_4837_edge_embedding_V_address1),
    .ce1(edge_embedding_V_ce1),
    .we1(edge_embedding_V_we1),
    .d1(grp_compute_edge_embedding_fu_4837_edge_embedding_V_d1)
);

GIN_compute_one_graph_compute_CONV_layer_message_V #(
    .DataWidth( 32 ),
    .AddressRange( 60000 ),
    .AddressWidth( 16 ))
message_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(message_V_address0),
    .ce0(message_V_ce0),
    .q0(message_V_q0),
    .address1(grp_message_passing_fu_4849_message_V_address1),
    .ce1(message_V_ce1),
    .we1(message_V_we1),
    .d1(grp_message_passing_fu_4849_message_V_d1)
);

GIN_compute_one_graph_MLP grp_MLP_fu_2428(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MLP_fu_2428_ap_start),
    .ap_done(grp_MLP_fu_2428_ap_done),
    .ap_idle(grp_MLP_fu_2428_ap_idle),
    .ap_ready(grp_MLP_fu_2428_ap_ready),
    .layer(layer),
    .node_embedding_V_address0(grp_MLP_fu_2428_node_embedding_V_address0),
    .node_embedding_V_ce0(grp_MLP_fu_2428_node_embedding_V_ce0),
    .node_embedding_V_q0(node_embedding_V_q0),
    .node_embedding_V_address1(grp_MLP_fu_2428_node_embedding_V_address1),
    .node_embedding_V_ce1(grp_MLP_fu_2428_node_embedding_V_ce1),
    .node_embedding_V_we1(grp_MLP_fu_2428_node_embedding_V_we1),
    .node_embedding_V_d1(grp_MLP_fu_2428_node_embedding_V_d1),
    .message_V_address0(grp_MLP_fu_2428_message_V_address0),
    .message_V_ce0(grp_MLP_fu_2428_message_V_ce0),
    .message_V_q0(message_V_q0)
);

GIN_compute_one_graph_compute_edge_embedding grp_compute_edge_embedding_fu_4837(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_edge_embedding_fu_4837_ap_start),
    .ap_done(grp_compute_edge_embedding_fu_4837_ap_done),
    .ap_idle(grp_compute_edge_embedding_fu_4837_ap_idle),
    .ap_ready(grp_compute_edge_embedding_fu_4837_ap_ready),
    .layer(layer),
    .edge_embedding_V_address0(grp_compute_edge_embedding_fu_4837_edge_embedding_V_address0),
    .edge_embedding_V_ce0(grp_compute_edge_embedding_fu_4837_edge_embedding_V_ce0),
    .edge_embedding_V_q0(edge_embedding_V_q0),
    .edge_embedding_V_address1(grp_compute_edge_embedding_fu_4837_edge_embedding_V_address1),
    .edge_embedding_V_ce1(grp_compute_edge_embedding_fu_4837_edge_embedding_V_ce1),
    .edge_embedding_V_we1(grp_compute_edge_embedding_fu_4837_edge_embedding_V_we1),
    .edge_embedding_V_d1(grp_compute_edge_embedding_fu_4837_edge_embedding_V_d1),
    .edge_attr_address0(grp_compute_edge_embedding_fu_4837_edge_attr_address0),
    .edge_attr_ce0(grp_compute_edge_embedding_fu_4837_edge_attr_ce0),
    .edge_attr_q0(edge_attr_q0)
);

GIN_compute_one_graph_message_passing grp_message_passing_fu_4849(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_message_passing_fu_4849_ap_start),
    .ap_done(grp_message_passing_fu_4849_ap_done),
    .ap_idle(grp_message_passing_fu_4849_ap_idle),
    .ap_ready(grp_message_passing_fu_4849_ap_ready),
    .message_V_address0(grp_message_passing_fu_4849_message_V_address0),
    .message_V_ce0(grp_message_passing_fu_4849_message_V_ce0),
    .message_V_q0(message_V_q0),
    .message_V_address1(grp_message_passing_fu_4849_message_V_address1),
    .message_V_ce1(grp_message_passing_fu_4849_message_V_ce1),
    .message_V_we1(grp_message_passing_fu_4849_message_V_we1),
    .message_V_d1(grp_message_passing_fu_4849_message_V_d1),
    .edge_list_address0(grp_message_passing_fu_4849_edge_list_address0),
    .edge_list_ce0(grp_message_passing_fu_4849_edge_list_ce0),
    .edge_list_q0(edge_list_q0),
    .edge_list_address1(grp_message_passing_fu_4849_edge_list_address1),
    .edge_list_ce1(grp_message_passing_fu_4849_edge_list_ce1),
    .edge_list_q1(edge_list_q1),
    .edge_embedding_V_address0(grp_message_passing_fu_4849_edge_embedding_V_address0),
    .edge_embedding_V_ce0(grp_message_passing_fu_4849_edge_embedding_V_ce0),
    .edge_embedding_V_q0(edge_embedding_V_q0),
    .node_embedding_V_address0(grp_message_passing_fu_4849_node_embedding_V_address0),
    .node_embedding_V_ce0(grp_message_passing_fu_4849_node_embedding_V_ce0),
    .node_embedding_V_q0(node_embedding_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MLP_fu_2428_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_MLP_fu_2428_ap_start_reg <= 1'b1;
        end else if ((grp_MLP_fu_2428_ap_ready == 1'b1)) begin
            grp_MLP_fu_2428_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_edge_embedding_fu_4837_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_compute_edge_embedding_fu_4837_ap_start_reg <= 1'b1;
        end else if ((grp_compute_edge_embedding_fu_4837_ap_ready == 1'b1)) begin
            grp_compute_edge_embedding_fu_4837_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_message_passing_fu_4849_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_message_passing_fu_4849_ap_start_reg <= 1'b1;
        end else if ((grp_message_passing_fu_4849_ap_ready == 1'b1)) begin
            grp_message_passing_fu_4849_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((grp_MLP_fu_2428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_MLP_fu_2428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        edge_embedding_V_address0 = grp_message_passing_fu_4849_edge_embedding_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        edge_embedding_V_address0 = grp_compute_edge_embedding_fu_4837_edge_embedding_V_address0;
    end else begin
        edge_embedding_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        edge_embedding_V_ce0 = grp_message_passing_fu_4849_edge_embedding_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        edge_embedding_V_ce0 = grp_compute_edge_embedding_fu_4837_edge_embedding_V_ce0;
    end else begin
        edge_embedding_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        edge_embedding_V_ce1 = grp_compute_edge_embedding_fu_4837_edge_embedding_V_ce1;
    end else begin
        edge_embedding_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        edge_embedding_V_we1 = grp_compute_edge_embedding_fu_4837_edge_embedding_V_we1;
    end else begin
        edge_embedding_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        message_V_address0 = grp_message_passing_fu_4849_message_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        message_V_address0 = grp_MLP_fu_2428_message_V_address0;
    end else begin
        message_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        message_V_ce0 = grp_message_passing_fu_4849_message_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        message_V_ce0 = grp_MLP_fu_2428_message_V_ce0;
    end else begin
        message_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        message_V_ce1 = grp_message_passing_fu_4849_message_V_ce1;
    end else begin
        message_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        message_V_we1 = grp_message_passing_fu_4849_message_V_we1;
    end else begin
        message_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        node_embedding_V_address0 = grp_message_passing_fu_4849_node_embedding_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        node_embedding_V_address0 = grp_MLP_fu_2428_node_embedding_V_address0;
    end else begin
        node_embedding_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        node_embedding_V_ce0 = grp_message_passing_fu_4849_node_embedding_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        node_embedding_V_ce0 = grp_MLP_fu_2428_node_embedding_V_ce0;
    end else begin
        node_embedding_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        node_embedding_V_ce1 = grp_MLP_fu_2428_node_embedding_V_ce1;
    end else begin
        node_embedding_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        node_embedding_V_we1 = grp_MLP_fu_2428_node_embedding_V_we1;
    end else begin
        node_embedding_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_compute_edge_embedding_fu_4837_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_message_passing_fu_4849_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_MLP_fu_2428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign edge_attr_address0 = grp_compute_edge_embedding_fu_4837_edge_attr_address0;

assign edge_attr_ce0 = grp_compute_edge_embedding_fu_4837_edge_attr_ce0;

assign edge_list_address0 = grp_message_passing_fu_4849_edge_list_address0;

assign edge_list_address1 = grp_message_passing_fu_4849_edge_list_address1;

assign edge_list_ce0 = grp_message_passing_fu_4849_edge_list_ce0;

assign edge_list_ce1 = grp_message_passing_fu_4849_edge_list_ce1;

assign grp_MLP_fu_2428_ap_start = grp_MLP_fu_2428_ap_start_reg;

assign grp_compute_edge_embedding_fu_4837_ap_start = grp_compute_edge_embedding_fu_4837_ap_start_reg;

assign grp_message_passing_fu_4849_ap_start = grp_message_passing_fu_4849_ap_start_reg;

assign node_embedding_V_address1 = grp_MLP_fu_2428_node_embedding_V_address1;

assign node_embedding_V_d1 = grp_MLP_fu_2428_node_embedding_V_d1;

endmodule //GIN_compute_one_graph_compute_CONV_layer
