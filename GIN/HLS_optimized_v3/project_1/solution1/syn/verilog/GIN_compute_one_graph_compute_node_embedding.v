// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_one_graph_compute_node_embedding (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        node_embedding_V_address1,
        node_embedding_V_ce1,
        node_embedding_V_we1,
        node_embedding_V_d1,
        degree_table_address0,
        degree_table_ce0,
        degree_table_q0,
        degree_table_address1,
        degree_table_ce1,
        degree_table_q1,
        neighbor_table_address0,
        neighbor_table_ce0,
        neighbor_table_q0,
        message1_V_address0,
        message1_V_ce0,
        message1_V_q0,
        message1_V_address1,
        message1_V_ce1,
        message1_V_we1,
        message1_V_d1
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] node_embedding_V_address1;
output   node_embedding_V_ce1;
output   node_embedding_V_we1;
output  [31:0] node_embedding_V_d1;
output  [9:0] degree_table_address0;
output   degree_table_ce0;
input  [31:0] degree_table_q0;
output  [9:0] degree_table_address1;
output   degree_table_ce1;
input  [31:0] degree_table_q1;
output  [12:0] neighbor_table_address0;
output   neighbor_table_ce0;
input  [7:0] neighbor_table_q0;
output  [14:0] message1_V_address0;
output   message1_V_ce0;
input  [31:0] message1_V_q0;
output  [14:0] message1_V_address1;
output   message1_V_ce1;
output   message1_V_we1;
output  [31:0] message1_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg node_embedding_V_ce1;
reg node_embedding_V_we1;
reg degree_table_ce0;
reg degree_table_ce1;
reg neighbor_table_ce0;
reg message1_V_ce0;
reg message1_V_ce1;
reg message1_V_we1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] sub_fu_90_p2;
reg   [4:0] sub_reg_110;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln278_fu_84_p2;
wire   [0:0] trunc_ln278_fu_97_p1;
reg   [0:0] trunc_ln278_reg_115;
wire   [4:0] nd_1_fu_101_p2;
wire    ap_CS_fsm_state4;
reg   [6:0] emb_vec1_V_address0;
reg    emb_vec1_V_ce0;
reg    emb_vec1_V_we0;
wire   [31:0] emb_vec1_V_q0;
reg   [6:0] emb_vec2_V_address0;
reg    emb_vec2_V_ce0;
reg    emb_vec2_V_we0;
wire   [31:0] emb_vec2_V_q0;
wire    grp_message_passing_one_node_vec_fu_60_ap_start;
wire    grp_message_passing_one_node_vec_fu_60_ap_done;
wire    grp_message_passing_one_node_vec_fu_60_ap_idle;
wire    grp_message_passing_one_node_vec_fu_60_ap_ready;
wire   [6:0] grp_message_passing_one_node_vec_fu_60_emb_vec_address0;
wire    grp_message_passing_one_node_vec_fu_60_emb_vec_ce0;
reg   [31:0] grp_message_passing_one_node_vec_fu_60_emb_vec_q0;
reg   [4:0] grp_message_passing_one_node_vec_fu_60_nd_offset;
wire   [14:0] grp_message_passing_one_node_vec_fu_60_message_tb_address0;
wire    grp_message_passing_one_node_vec_fu_60_message_tb_ce0;
wire   [14:0] grp_message_passing_one_node_vec_fu_60_message_tb_address1;
wire    grp_message_passing_one_node_vec_fu_60_message_tb_ce1;
wire    grp_message_passing_one_node_vec_fu_60_message_tb_we1;
wire   [31:0] grp_message_passing_one_node_vec_fu_60_message_tb_d1;
wire   [9:0] grp_message_passing_one_node_vec_fu_60_degree_table_address0;
wire    grp_message_passing_one_node_vec_fu_60_degree_table_ce0;
wire   [9:0] grp_message_passing_one_node_vec_fu_60_degree_table_address1;
wire    grp_message_passing_one_node_vec_fu_60_degree_table_ce1;
wire   [12:0] grp_message_passing_one_node_vec_fu_60_neighbor_table_address0;
wire    grp_message_passing_one_node_vec_fu_60_neighbor_table_ce0;
wire    grp_one_node_embedding_fu_73_ap_start;
wire    grp_one_node_embedding_fu_73_ap_done;
wire    grp_one_node_embedding_fu_73_ap_idle;
wire    grp_one_node_embedding_fu_73_ap_ready;
reg   [4:0] grp_one_node_embedding_fu_73_nd;
wire   [6:0] grp_one_node_embedding_fu_73_emb_vec_address0;
wire    grp_one_node_embedding_fu_73_emb_vec_ce0;
wire    grp_one_node_embedding_fu_73_emb_vec_we0;
wire   [31:0] grp_one_node_embedding_fu_73_emb_vec_d0;
wire   [14:0] grp_one_node_embedding_fu_73_node_embedding_V_address1;
wire    grp_one_node_embedding_fu_73_node_embedding_V_ce1;
wire    grp_one_node_embedding_fu_73_node_embedding_V_we1;
wire   [31:0] grp_one_node_embedding_fu_73_node_embedding_V_d1;
reg   [4:0] nd_reg_48;
wire    ap_CS_fsm_state2;
reg    ap_block_state4_on_subcall_done;
reg    grp_message_passing_one_node_vec_fu_60_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_one_node_embedding_fu_73_ap_start_reg;
reg   [4:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_message_passing_one_node_vec_fu_60_ap_start_reg = 1'b0;
#0 grp_one_node_embedding_fu_73_ap_start_reg = 1'b0;
end

GIN_compute_one_graph_compute_node_embedding_emb_vec1_V #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
emb_vec1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(emb_vec1_V_address0),
    .ce0(emb_vec1_V_ce0),
    .we0(emb_vec1_V_we0),
    .d0(grp_one_node_embedding_fu_73_emb_vec_d0),
    .q0(emb_vec1_V_q0)
);

GIN_compute_one_graph_compute_node_embedding_emb_vec1_V #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
emb_vec2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(emb_vec2_V_address0),
    .ce0(emb_vec2_V_ce0),
    .we0(emb_vec2_V_we0),
    .d0(grp_one_node_embedding_fu_73_emb_vec_d0),
    .q0(emb_vec2_V_q0)
);

GIN_compute_one_graph_message_passing_one_node_vec grp_message_passing_one_node_vec_fu_60(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_message_passing_one_node_vec_fu_60_ap_start),
    .ap_done(grp_message_passing_one_node_vec_fu_60_ap_done),
    .ap_idle(grp_message_passing_one_node_vec_fu_60_ap_idle),
    .ap_ready(grp_message_passing_one_node_vec_fu_60_ap_ready),
    .emb_vec_address0(grp_message_passing_one_node_vec_fu_60_emb_vec_address0),
    .emb_vec_ce0(grp_message_passing_one_node_vec_fu_60_emb_vec_ce0),
    .emb_vec_q0(grp_message_passing_one_node_vec_fu_60_emb_vec_q0),
    .nd_offset(grp_message_passing_one_node_vec_fu_60_nd_offset),
    .message_tb_address0(grp_message_passing_one_node_vec_fu_60_message_tb_address0),
    .message_tb_ce0(grp_message_passing_one_node_vec_fu_60_message_tb_ce0),
    .message_tb_q0(message1_V_q0),
    .message_tb_address1(grp_message_passing_one_node_vec_fu_60_message_tb_address1),
    .message_tb_ce1(grp_message_passing_one_node_vec_fu_60_message_tb_ce1),
    .message_tb_we1(grp_message_passing_one_node_vec_fu_60_message_tb_we1),
    .message_tb_d1(grp_message_passing_one_node_vec_fu_60_message_tb_d1),
    .degree_table_address0(grp_message_passing_one_node_vec_fu_60_degree_table_address0),
    .degree_table_ce0(grp_message_passing_one_node_vec_fu_60_degree_table_ce0),
    .degree_table_q0(degree_table_q0),
    .degree_table_address1(grp_message_passing_one_node_vec_fu_60_degree_table_address1),
    .degree_table_ce1(grp_message_passing_one_node_vec_fu_60_degree_table_ce1),
    .degree_table_q1(degree_table_q1),
    .neighbor_table_address0(grp_message_passing_one_node_vec_fu_60_neighbor_table_address0),
    .neighbor_table_ce0(grp_message_passing_one_node_vec_fu_60_neighbor_table_ce0),
    .neighbor_table_q0(neighbor_table_q0)
);

GIN_compute_one_graph_one_node_embedding grp_one_node_embedding_fu_73(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_one_node_embedding_fu_73_ap_start),
    .ap_done(grp_one_node_embedding_fu_73_ap_done),
    .ap_idle(grp_one_node_embedding_fu_73_ap_idle),
    .ap_ready(grp_one_node_embedding_fu_73_ap_ready),
    .nd(grp_one_node_embedding_fu_73_nd),
    .emb_vec_address0(grp_one_node_embedding_fu_73_emb_vec_address0),
    .emb_vec_ce0(grp_one_node_embedding_fu_73_emb_vec_ce0),
    .emb_vec_we0(grp_one_node_embedding_fu_73_emb_vec_we0),
    .emb_vec_d0(grp_one_node_embedding_fu_73_emb_vec_d0),
    .node_embedding_V_address1(grp_one_node_embedding_fu_73_node_embedding_V_address1),
    .node_embedding_V_ce1(grp_one_node_embedding_fu_73_node_embedding_V_ce1),
    .node_embedding_V_we1(grp_one_node_embedding_fu_73_node_embedding_V_we1),
    .node_embedding_V_d1(grp_one_node_embedding_fu_73_node_embedding_V_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_message_passing_one_node_vec_fu_60_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln278_fu_84_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln278_fu_97_p1 == 1'd1) & (icmp_ln278_fu_84_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln278_fu_97_p1 == 1'd0) & (icmp_ln278_fu_84_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_message_passing_one_node_vec_fu_60_ap_start_reg <= 1'b1;
        end else if ((grp_message_passing_one_node_vec_fu_60_ap_ready == 1'b1)) begin
            grp_message_passing_one_node_vec_fu_60_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_one_node_embedding_fu_73_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((trunc_ln278_fu_97_p1 == 1'd1) & (icmp_ln278_fu_84_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((trunc_ln278_fu_97_p1 == 1'd0) & (icmp_ln278_fu_84_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_one_node_embedding_fu_73_ap_start_reg <= 1'b1;
        end else if ((grp_one_node_embedding_fu_73_ap_ready == 1'b1)) begin
            grp_one_node_embedding_fu_73_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
        nd_reg_48 <= nd_1_fu_101_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_one_node_embedding_fu_73_ap_done == 1'b1))) begin
        nd_reg_48 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln278_fu_84_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        sub_reg_110 <= sub_fu_90_p2;
        trunc_ln278_reg_115 <= trunc_ln278_fu_97_p1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((grp_message_passing_one_node_vec_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_message_passing_one_node_vec_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        degree_table_ce0 = grp_message_passing_one_node_vec_fu_60_degree_table_ce0;
    end else begin
        degree_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        degree_table_ce1 = grp_message_passing_one_node_vec_fu_60_degree_table_ce1;
    end else begin
        degree_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        emb_vec1_V_address0 = grp_one_node_embedding_fu_73_emb_vec_address0;
    end else if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        emb_vec1_V_address0 = grp_message_passing_one_node_vec_fu_60_emb_vec_address0;
    end else begin
        emb_vec1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        emb_vec1_V_ce0 = grp_one_node_embedding_fu_73_emb_vec_ce0;
    end else if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        emb_vec1_V_ce0 = grp_message_passing_one_node_vec_fu_60_emb_vec_ce0;
    end else begin
        emb_vec1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        emb_vec1_V_we0 = grp_one_node_embedding_fu_73_emb_vec_we0;
    end else begin
        emb_vec1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if ((trunc_ln278_reg_115 == 1'd1)) begin
            emb_vec2_V_address0 = grp_one_node_embedding_fu_73_emb_vec_address0;
        end else if ((trunc_ln278_reg_115 == 1'd0)) begin
            emb_vec2_V_address0 = grp_message_passing_one_node_vec_fu_60_emb_vec_address0;
        end else begin
            emb_vec2_V_address0 = 'bx;
        end
    end else begin
        emb_vec2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if ((trunc_ln278_reg_115 == 1'd1)) begin
            emb_vec2_V_ce0 = grp_one_node_embedding_fu_73_emb_vec_ce0;
        end else if ((trunc_ln278_reg_115 == 1'd0)) begin
            emb_vec2_V_ce0 = grp_message_passing_one_node_vec_fu_60_emb_vec_ce0;
        end else begin
            emb_vec2_V_ce0 = 1'b0;
        end
    end else begin
        emb_vec2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        emb_vec2_V_we0 = grp_one_node_embedding_fu_73_emb_vec_we0;
    end else begin
        emb_vec2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_message_passing_one_node_vec_fu_60_emb_vec_q0 = emb_vec1_V_q0;
    end else if (((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        grp_message_passing_one_node_vec_fu_60_emb_vec_q0 = emb_vec2_V_q0;
    end else begin
        grp_message_passing_one_node_vec_fu_60_emb_vec_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_message_passing_one_node_vec_fu_60_nd_offset = 5'd18;
    end else if ((((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_message_passing_one_node_vec_fu_60_nd_offset = sub_reg_110;
    end else begin
        grp_message_passing_one_node_vec_fu_60_nd_offset = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_one_node_embedding_fu_73_nd = nd_reg_48;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_one_node_embedding_fu_73_nd = 5'd0;
    end else begin
        grp_one_node_embedding_fu_73_nd = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        message1_V_ce0 = grp_message_passing_one_node_vec_fu_60_message_tb_ce0;
    end else begin
        message1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        message1_V_ce1 = grp_message_passing_one_node_vec_fu_60_message_tb_ce1;
    end else begin
        message1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        message1_V_we1 = grp_message_passing_one_node_vec_fu_60_message_tb_we1;
    end else begin
        message1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        neighbor_table_ce0 = grp_message_passing_one_node_vec_fu_60_neighbor_table_ce0;
    end else begin
        neighbor_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        node_embedding_V_ce1 = grp_one_node_embedding_fu_73_node_embedding_V_ce1;
    end else begin
        node_embedding_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((trunc_ln278_reg_115 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((trunc_ln278_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        node_embedding_V_we1 = grp_one_node_embedding_fu_73_node_embedding_V_we1;
    end else begin
        node_embedding_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_one_node_embedding_fu_73_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln278_fu_84_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_message_passing_one_node_vec_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state4_on_subcall_done = (((trunc_ln278_reg_115 == 1'd1) & (grp_one_node_embedding_fu_73_ap_done == 1'b0)) | ((trunc_ln278_reg_115 == 1'd0) & (grp_one_node_embedding_fu_73_ap_done == 1'b0)) | ((grp_message_passing_one_node_vec_fu_60_ap_done == 1'b0) & (trunc_ln278_reg_115 == 1'd1)) | ((grp_message_passing_one_node_vec_fu_60_ap_done == 1'b0) & (trunc_ln278_reg_115 == 1'd0)));
end

assign degree_table_address0 = grp_message_passing_one_node_vec_fu_60_degree_table_address0;

assign degree_table_address1 = grp_message_passing_one_node_vec_fu_60_degree_table_address1;

assign grp_message_passing_one_node_vec_fu_60_ap_start = grp_message_passing_one_node_vec_fu_60_ap_start_reg;

assign grp_one_node_embedding_fu_73_ap_start = grp_one_node_embedding_fu_73_ap_start_reg;

assign icmp_ln278_fu_84_p2 = ((nd_reg_48 == 5'd19) ? 1'b1 : 1'b0);

assign message1_V_address0 = grp_message_passing_one_node_vec_fu_60_message_tb_address0;

assign message1_V_address1 = grp_message_passing_one_node_vec_fu_60_message_tb_address1;

assign message1_V_d1 = grp_message_passing_one_node_vec_fu_60_message_tb_d1;

assign nd_1_fu_101_p2 = (nd_reg_48 + 5'd1);

assign neighbor_table_address0 = grp_message_passing_one_node_vec_fu_60_neighbor_table_address0;

assign node_embedding_V_address1 = grp_one_node_embedding_fu_73_node_embedding_V_address1;

assign node_embedding_V_d1 = grp_one_node_embedding_fu_73_node_embedding_V_d1;

assign sub_fu_90_p2 = ($signed(nd_reg_48) + $signed(5'd31));

assign trunc_ln278_fu_97_p1 = nd_reg_48[0:0];

endmodule //GIN_compute_one_graph_compute_node_embedding
