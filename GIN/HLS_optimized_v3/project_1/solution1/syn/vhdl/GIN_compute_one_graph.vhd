-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
-- Version: 2020.2.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GIN_compute_one_graph is
generic (
    C_M_AXI_MEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_MEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_MEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_MEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_MEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_MEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_mem_AWVALID : OUT STD_LOGIC;
    m_axi_mem_AWREADY : IN STD_LOGIC;
    m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ADDR_WIDTH-1 downto 0);
    m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_AWUSER_WIDTH-1 downto 0);
    m_axi_mem_WVALID : OUT STD_LOGIC;
    m_axi_mem_WREADY : IN STD_LOGIC;
    m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_DATA_WIDTH-1 downto 0);
    m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_DATA_WIDTH/8-1 downto 0);
    m_axi_mem_WLAST : OUT STD_LOGIC;
    m_axi_mem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_WUSER_WIDTH-1 downto 0);
    m_axi_mem_ARVALID : OUT STD_LOGIC;
    m_axi_mem_ARREADY : IN STD_LOGIC;
    m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ADDR_WIDTH-1 downto 0);
    m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ARUSER_WIDTH-1 downto 0);
    m_axi_mem_RVALID : IN STD_LOGIC;
    m_axi_mem_RREADY : OUT STD_LOGIC;
    m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_DATA_WIDTH-1 downto 0);
    m_axi_mem_RLAST : IN STD_LOGIC;
    m_axi_mem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_RUSER_WIDTH-1 downto 0);
    m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_BVALID : IN STD_LOGIC;
    m_axi_mem_BREADY : OUT STD_LOGIC;
    m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of GIN_compute_one_graph is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "GIN_compute_one_graph_GIN_compute_one_graph,hls_ip_2020_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=42955,HLS_SYN_TPT=none,HLS_SYN_MEM=34,HLS_SYN_DSP=0,HLS_SYN_FF=26324,HLS_SYN_LUT=20536,HLS_VERSION=2020_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal node_feature_in : STD_LOGIC_VECTOR (63 downto 0);
    signal edge_list_in : STD_LOGIC_VECTOR (63 downto 0);
    signal edge_attr_in : STD_LOGIC_VECTOR (63 downto 0);
    signal graph_attr : STD_LOGIC_VECTOR (63 downto 0);
    signal task_r : STD_LOGIC_VECTOR (63 downto 0);
    signal gnn_node_mlp_1_weights_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal gnn_node_mlp_1_bias_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal gnn_node_mlp_2_weights_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal gnn_node_mlp_2_bias_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal gnn_node_embedding_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal gnn_edge_embedding_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal graph_pred_linear_weight_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal graph_pred_linear_bias_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal eps_fixed : STD_LOGIC_VECTOR (63 downto 0);
    signal edge_list_ce0 : STD_LOGIC;
    signal edge_list_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal edge_list_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal edge_list_ce1 : STD_LOGIC;
    signal edge_list_we1 : STD_LOGIC;
    signal edge_list_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal degree_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal degree_table_ce0 : STD_LOGIC;
    signal degree_table_we0 : STD_LOGIC;
    signal degree_table_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal degree_table_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal degree_table_ce1 : STD_LOGIC;
    signal degree_table_we1 : STD_LOGIC;
    signal degree_table_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal neighbor_table_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal neighbor_table_ce0 : STD_LOGIC;
    signal neighbor_table_we0 : STD_LOGIC;
    signal neighbor_table_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal neighbor_table_ce1 : STD_LOGIC;
    signal neighbor_table_we1 : STD_LOGIC;
    signal message1_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal message1_V_ce0 : STD_LOGIC;
    signal message1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal message1_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal message1_V_ce1 : STD_LOGIC;
    signal message1_V_we1 : STD_LOGIC;
    signal message1_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal message2_V_ce0 : STD_LOGIC;
    signal message2_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal message2_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal message2_V_ce1 : STD_LOGIC;
    signal message2_V_we1 : STD_LOGIC;
    signal message2_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal node_embedding_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal node_embedding_V_ce0 : STD_LOGIC;
    signal node_embedding_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal node_embedding_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal node_embedding_V_ce1 : STD_LOGIC;
    signal node_embedding_V_we1 : STD_LOGIC;
    signal node_embedding_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal node_embedding_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_AWVALID : STD_LOGIC;
    signal mem_AWREADY : STD_LOGIC;
    signal mem_WVALID : STD_LOGIC;
    signal mem_WREADY : STD_LOGIC;
    signal mem_ARVALID : STD_LOGIC;
    signal mem_ARREADY : STD_LOGIC;
    signal mem_RVALID : STD_LOGIC;
    signal mem_RREADY : STD_LOGIC;
    signal mem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_RLAST : STD_LOGIC;
    signal mem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal mem_BVALID : STD_LOGIC;
    signal mem_BREADY : STD_LOGIC;
    signal mem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal mem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal task_read_reg_758 : STD_LOGIC_VECTOR (63 downto 0);
    signal edge_attr_in_read_reg_763 : STD_LOGIC_VECTOR (63 downto 0);
    signal edge_list_in_read_reg_768 : STD_LOGIC_VECTOR (63 downto 0);
    signal node_feature_in_read_reg_773 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_1_fu_746_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal layer_1_reg_778 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_compute_CONV_layer_fu_662_ap_start : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_ap_done : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_ap_idle : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_ap_ready : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_message2_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_CONV_layer_fu_662_message2_V_ce0 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_message2_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_CONV_layer_fu_662_message2_V_ce1 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_message2_V_we1 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_message2_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_CONV_layer_fu_662_node_embedding_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_CONV_layer_fu_662_node_embedding_V_ce0 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_node_embedding_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_CONV_layer_fu_662_node_embedding_V_ce1 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_node_embedding_V_we1 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_node_embedding_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_CONV_layer_fu_662_message1_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_CONV_layer_fu_662_message1_V_ce0 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_message1_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_CONV_layer_fu_662_message1_V_ce1 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_message1_V_we1 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_message1_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_CONV_layer_fu_662_degree_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute_CONV_layer_fu_662_degree_table_ce0 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_degree_table_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute_CONV_layer_fu_662_degree_table_ce1 : STD_LOGIC;
    signal grp_compute_CONV_layer_fu_662_neighbor_table_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_compute_CONV_layer_fu_662_neighbor_table_ce0 : STD_LOGIC;
    signal grp_global_mean_pooling_fu_678_ap_start : STD_LOGIC;
    signal grp_global_mean_pooling_fu_678_ap_done : STD_LOGIC;
    signal grp_global_mean_pooling_fu_678_ap_idle : STD_LOGIC;
    signal grp_global_mean_pooling_fu_678_ap_ready : STD_LOGIC;
    signal grp_global_mean_pooling_fu_678_node_embedding_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_global_mean_pooling_fu_678_node_embedding_V_ce0 : STD_LOGIC;
    signal grp_global_mean_pooling_fu_678_node_embedding_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_global_mean_pooling_fu_678_node_embedding_V_ce1 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_ap_start : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_ap_done : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_ap_idle : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_ap_ready : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_degree_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_degree_table_ce0 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_degree_table_we0 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_degree_table_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_degree_table_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_degree_table_ce1 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_degree_table_we1 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_degree_table_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_edge_list_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_edge_list_ce0 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_edge_list_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_edge_list_ce1 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_neighbor_table_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_neighbor_table_ce0 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_neighbor_table_we0 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_neighbor_table_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_neighbor_table_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_prepare_degree_neighbor_table_fu_686_neighbor_table_ce1 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_neighbor_table_we1 : STD_LOGIC;
    signal grp_prepare_degree_neighbor_table_fu_686_neighbor_table_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_node_embedding_fu_696_ap_start : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_ap_done : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_ap_idle : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_ap_ready : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_node_embedding_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_node_embedding_fu_696_node_embedding_V_ce1 : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_node_embedding_V_we1 : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_node_embedding_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_compute_node_embedding_fu_696_degree_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute_node_embedding_fu_696_degree_table_ce0 : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_degree_table_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_compute_node_embedding_fu_696_degree_table_ce1 : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_neighbor_table_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_compute_node_embedding_fu_696_neighbor_table_ce0 : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_message1_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_node_embedding_fu_696_message1_V_ce0 : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_message1_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_node_embedding_fu_696_message1_V_ce1 : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_message1_V_we1 : STD_LOGIC;
    signal grp_compute_node_embedding_fu_696_message1_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_graph_fu_708_ap_start : STD_LOGIC;
    signal grp_load_graph_fu_708_ap_done : STD_LOGIC;
    signal grp_load_graph_fu_708_ap_idle : STD_LOGIC;
    signal grp_load_graph_fu_708_ap_ready : STD_LOGIC;
    signal grp_load_graph_fu_708_m_axi_mem_AWVALID : STD_LOGIC;
    signal grp_load_graph_fu_708_m_axi_mem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_WVALID : STD_LOGIC;
    signal grp_load_graph_fu_708_m_axi_mem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_WLAST : STD_LOGIC;
    signal grp_load_graph_fu_708_m_axi_mem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARVALID : STD_LOGIC;
    signal grp_load_graph_fu_708_m_axi_mem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_graph_fu_708_m_axi_mem_RREADY : STD_LOGIC;
    signal grp_load_graph_fu_708_m_axi_mem_BREADY : STD_LOGIC;
    signal grp_load_graph_fu_708_edge_list_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_load_graph_fu_708_edge_list_ce1 : STD_LOGIC;
    signal grp_load_graph_fu_708_edge_list_we1 : STD_LOGIC;
    signal grp_load_graph_fu_708_edge_list_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clear_message_table_fu_727_ap_start : STD_LOGIC;
    signal grp_clear_message_table_fu_727_ap_done : STD_LOGIC;
    signal grp_clear_message_table_fu_727_ap_idle : STD_LOGIC;
    signal grp_clear_message_table_fu_727_ap_ready : STD_LOGIC;
    signal grp_clear_message_table_fu_727_message_tb_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_clear_message_table_fu_727_message_tb_ce1 : STD_LOGIC;
    signal grp_clear_message_table_fu_727_message_tb_we1 : STD_LOGIC;
    signal grp_clear_message_table_fu_727_message_tb_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clear_message_table_fu_733_ap_start : STD_LOGIC;
    signal grp_clear_message_table_fu_733_ap_done : STD_LOGIC;
    signal grp_clear_message_table_fu_733_ap_idle : STD_LOGIC;
    signal grp_clear_message_table_fu_733_ap_ready : STD_LOGIC;
    signal grp_clear_message_table_fu_733_message_tb_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_clear_message_table_fu_733_message_tb_ce1 : STD_LOGIC;
    signal grp_clear_message_table_fu_733_message_tb_we1 : STD_LOGIC;
    signal grp_clear_message_table_fu_733_message_tb_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_global_graph_prediction_fu_739_ap_start : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_ap_done : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_ap_idle : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_ap_ready : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWVALID : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_WVALID : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_m_axi_mem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_WLAST : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_m_axi_mem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARVALID : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_global_graph_prediction_fu_739_m_axi_mem_RREADY : STD_LOGIC;
    signal grp_global_graph_prediction_fu_739_m_axi_mem_BREADY : STD_LOGIC;
    signal layer_reg_650 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_compute_CONV_layer_fu_662_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln629_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_global_mean_pooling_fu_678_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_prepare_degree_neighbor_table_fu_686_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_compute_node_embedding_fu_696_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_load_graph_fu_708_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_clear_message_table_fu_727_ap_start_reg : STD_LOGIC := '0';
    signal grp_clear_message_table_fu_733_ap_start_reg : STD_LOGIC := '0';
    signal grp_global_graph_prediction_fu_739_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component GIN_compute_one_graph_compute_CONV_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer : IN STD_LOGIC_VECTOR (2 downto 0);
        message2_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        message2_V_ce0 : OUT STD_LOGIC;
        message2_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        message2_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        message2_V_ce1 : OUT STD_LOGIC;
        message2_V_we1 : OUT STD_LOGIC;
        message2_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        node_embedding_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        node_embedding_V_ce0 : OUT STD_LOGIC;
        node_embedding_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        node_embedding_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        node_embedding_V_ce1 : OUT STD_LOGIC;
        node_embedding_V_we1 : OUT STD_LOGIC;
        node_embedding_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        message1_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        message1_V_ce0 : OUT STD_LOGIC;
        message1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        message1_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        message1_V_ce1 : OUT STD_LOGIC;
        message1_V_we1 : OUT STD_LOGIC;
        message1_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        degree_table_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        degree_table_ce0 : OUT STD_LOGIC;
        degree_table_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        degree_table_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        degree_table_ce1 : OUT STD_LOGIC;
        degree_table_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        neighbor_table_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        neighbor_table_ce0 : OUT STD_LOGIC;
        neighbor_table_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component GIN_compute_one_graph_global_mean_pooling IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        node_embedding_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        node_embedding_V_ce0 : OUT STD_LOGIC;
        node_embedding_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        node_embedding_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        node_embedding_V_ce1 : OUT STD_LOGIC;
        node_embedding_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GIN_compute_one_graph_prepare_degree_neighbor_table IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        degree_table_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        degree_table_ce0 : OUT STD_LOGIC;
        degree_table_we0 : OUT STD_LOGIC;
        degree_table_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        degree_table_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        degree_table_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        degree_table_ce1 : OUT STD_LOGIC;
        degree_table_we1 : OUT STD_LOGIC;
        degree_table_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        degree_table_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_list_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_list_ce0 : OUT STD_LOGIC;
        edge_list_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_list_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_list_ce1 : OUT STD_LOGIC;
        edge_list_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        neighbor_table_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        neighbor_table_ce0 : OUT STD_LOGIC;
        neighbor_table_we0 : OUT STD_LOGIC;
        neighbor_table_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        neighbor_table_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        neighbor_table_ce1 : OUT STD_LOGIC;
        neighbor_table_we1 : OUT STD_LOGIC;
        neighbor_table_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component GIN_compute_one_graph_compute_node_embedding IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        node_embedding_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        node_embedding_V_ce1 : OUT STD_LOGIC;
        node_embedding_V_we1 : OUT STD_LOGIC;
        node_embedding_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        degree_table_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        degree_table_ce0 : OUT STD_LOGIC;
        degree_table_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        degree_table_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        degree_table_ce1 : OUT STD_LOGIC;
        degree_table_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        neighbor_table_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        neighbor_table_ce0 : OUT STD_LOGIC;
        neighbor_table_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        message1_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        message1_V_ce0 : OUT STD_LOGIC;
        message1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        message1_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        message1_V_ce1 : OUT STD_LOGIC;
        message1_V_we1 : OUT STD_LOGIC;
        message1_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GIN_compute_one_graph_load_graph IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_mem_AWVALID : OUT STD_LOGIC;
        m_axi_mem_AWREADY : IN STD_LOGIC;
        m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WVALID : OUT STD_LOGIC;
        m_axi_mem_WREADY : IN STD_LOGIC;
        m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_WLAST : OUT STD_LOGIC;
        m_axi_mem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARVALID : OUT STD_LOGIC;
        m_axi_mem_ARREADY : IN STD_LOGIC;
        m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RVALID : IN STD_LOGIC;
        m_axi_mem_RREADY : OUT STD_LOGIC;
        m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_RLAST : IN STD_LOGIC;
        m_axi_mem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BVALID : IN STD_LOGIC;
        m_axi_mem_BREADY : OUT STD_LOGIC;
        m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        node_feature_in : IN STD_LOGIC_VECTOR (63 downto 0);
        edge_list_in : IN STD_LOGIC_VECTOR (63 downto 0);
        edge_attr_in : IN STD_LOGIC_VECTOR (63 downto 0);
        edge_list_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        edge_list_ce1 : OUT STD_LOGIC;
        edge_list_we1 : OUT STD_LOGIC;
        edge_list_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GIN_compute_one_graph_clear_message_table IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        message_tb_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        message_tb_ce1 : OUT STD_LOGIC;
        message_tb_we1 : OUT STD_LOGIC;
        message_tb_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GIN_compute_one_graph_global_graph_prediction IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_mem_AWVALID : OUT STD_LOGIC;
        m_axi_mem_AWREADY : IN STD_LOGIC;
        m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WVALID : OUT STD_LOGIC;
        m_axi_mem_WREADY : IN STD_LOGIC;
        m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_WLAST : OUT STD_LOGIC;
        m_axi_mem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARVALID : OUT STD_LOGIC;
        m_axi_mem_ARREADY : IN STD_LOGIC;
        m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RVALID : IN STD_LOGIC;
        m_axi_mem_RREADY : OUT STD_LOGIC;
        m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_RLAST : IN STD_LOGIC;
        m_axi_mem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BVALID : IN STD_LOGIC;
        m_axi_mem_BREADY : OUT STD_LOGIC;
        m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        d_out : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component GIN_compute_one_graph_edge_list IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GIN_compute_one_graph_degree_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GIN_compute_one_graph_neighbor_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component GIN_compute_one_graph_message1_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GIN_compute_one_graph_node_embedding_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GIN_compute_one_graph_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        node_feature_in : OUT STD_LOGIC_VECTOR (63 downto 0);
        edge_list_in : OUT STD_LOGIC_VECTOR (63 downto 0);
        edge_attr_in : OUT STD_LOGIC_VECTOR (63 downto 0);
        graph_attr : OUT STD_LOGIC_VECTOR (63 downto 0);
        task_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        gnn_node_mlp_1_weights_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        gnn_node_mlp_1_bias_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        gnn_node_mlp_2_weights_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        gnn_node_mlp_2_bias_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        gnn_node_embedding_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        gnn_edge_embedding_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        graph_pred_linear_weight_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        graph_pred_linear_bias_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        eps_fixed : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component GIN_compute_one_graph_mem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    edge_list_U : component GIN_compute_one_graph_edge_list
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_prepare_degree_neighbor_table_fu_686_edge_list_address0,
        ce0 => edge_list_ce0,
        q0 => edge_list_q0,
        address1 => edge_list_address1,
        ce1 => edge_list_ce1,
        we1 => edge_list_we1,
        d1 => grp_load_graph_fu_708_edge_list_d1,
        q1 => edge_list_q1);

    degree_table_U : component GIN_compute_one_graph_degree_table
    generic map (
        DataWidth => 32,
        AddressRange => 600,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => degree_table_address0,
        ce0 => degree_table_ce0,
        we0 => degree_table_we0,
        d0 => grp_prepare_degree_neighbor_table_fu_686_degree_table_d0,
        q0 => degree_table_q0,
        address1 => degree_table_address1,
        ce1 => degree_table_ce1,
        we1 => degree_table_we1,
        d1 => grp_prepare_degree_neighbor_table_fu_686_degree_table_d1,
        q1 => degree_table_q1);

    neighbor_table_U : component GIN_compute_one_graph_neighbor_table
    generic map (
        DataWidth => 8,
        AddressRange => 8000,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => neighbor_table_address0,
        ce0 => neighbor_table_ce0,
        we0 => neighbor_table_we0,
        d0 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_d0,
        q0 => neighbor_table_q0,
        address1 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_address1,
        ce1 => neighbor_table_ce1,
        we1 => neighbor_table_we1,
        d1 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_d1);

    message1_V_U : component GIN_compute_one_graph_message1_V
    generic map (
        DataWidth => 32,
        AddressRange => 20000,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => message1_V_address0,
        ce0 => message1_V_ce0,
        q0 => message1_V_q0,
        address1 => message1_V_address1,
        ce1 => message1_V_ce1,
        we1 => message1_V_we1,
        d1 => message1_V_d1);

    message2_V_U : component GIN_compute_one_graph_message1_V
    generic map (
        DataWidth => 32,
        AddressRange => 20000,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_compute_CONV_layer_fu_662_message2_V_address0,
        ce0 => message2_V_ce0,
        q0 => message2_V_q0,
        address1 => message2_V_address1,
        ce1 => message2_V_ce1,
        we1 => message2_V_we1,
        d1 => message2_V_d1);

    node_embedding_V_U : component GIN_compute_one_graph_node_embedding_V
    generic map (
        DataWidth => 32,
        AddressRange => 20000,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => node_embedding_V_address0,
        ce0 => node_embedding_V_ce0,
        q0 => node_embedding_V_q0,
        address1 => node_embedding_V_address1,
        ce1 => node_embedding_V_ce1,
        we1 => node_embedding_V_we1,
        d1 => node_embedding_V_d1,
        q1 => node_embedding_V_q1);

    control_s_axi_U : component GIN_compute_one_graph_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        node_feature_in => node_feature_in,
        edge_list_in => edge_list_in,
        edge_attr_in => edge_attr_in,
        graph_attr => graph_attr,
        task_r => task_r,
        gnn_node_mlp_1_weights_fixed => gnn_node_mlp_1_weights_fixed,
        gnn_node_mlp_1_bias_fixed => gnn_node_mlp_1_bias_fixed,
        gnn_node_mlp_2_weights_fixed => gnn_node_mlp_2_weights_fixed,
        gnn_node_mlp_2_bias_fixed => gnn_node_mlp_2_bias_fixed,
        gnn_node_embedding_fixed => gnn_node_embedding_fixed,
        gnn_edge_embedding_fixed => gnn_edge_embedding_fixed,
        graph_pred_linear_weight_fixed => graph_pred_linear_weight_fixed,
        graph_pred_linear_bias_fixed => graph_pred_linear_bias_fixed,
        eps_fixed => eps_fixed,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mem_m_axi_U : component GIN_compute_one_graph_mem_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_MEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_MEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_MEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_MEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_MEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_MEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_MEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_MEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_MEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_MEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_MEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_mem_AWVALID,
        AWREADY => m_axi_mem_AWREADY,
        AWADDR => m_axi_mem_AWADDR,
        AWID => m_axi_mem_AWID,
        AWLEN => m_axi_mem_AWLEN,
        AWSIZE => m_axi_mem_AWSIZE,
        AWBURST => m_axi_mem_AWBURST,
        AWLOCK => m_axi_mem_AWLOCK,
        AWCACHE => m_axi_mem_AWCACHE,
        AWPROT => m_axi_mem_AWPROT,
        AWQOS => m_axi_mem_AWQOS,
        AWREGION => m_axi_mem_AWREGION,
        AWUSER => m_axi_mem_AWUSER,
        WVALID => m_axi_mem_WVALID,
        WREADY => m_axi_mem_WREADY,
        WDATA => m_axi_mem_WDATA,
        WSTRB => m_axi_mem_WSTRB,
        WLAST => m_axi_mem_WLAST,
        WID => m_axi_mem_WID,
        WUSER => m_axi_mem_WUSER,
        ARVALID => m_axi_mem_ARVALID,
        ARREADY => m_axi_mem_ARREADY,
        ARADDR => m_axi_mem_ARADDR,
        ARID => m_axi_mem_ARID,
        ARLEN => m_axi_mem_ARLEN,
        ARSIZE => m_axi_mem_ARSIZE,
        ARBURST => m_axi_mem_ARBURST,
        ARLOCK => m_axi_mem_ARLOCK,
        ARCACHE => m_axi_mem_ARCACHE,
        ARPROT => m_axi_mem_ARPROT,
        ARQOS => m_axi_mem_ARQOS,
        ARREGION => m_axi_mem_ARREGION,
        ARUSER => m_axi_mem_ARUSER,
        RVALID => m_axi_mem_RVALID,
        RREADY => m_axi_mem_RREADY,
        RDATA => m_axi_mem_RDATA,
        RLAST => m_axi_mem_RLAST,
        RID => m_axi_mem_RID,
        RUSER => m_axi_mem_RUSER,
        RRESP => m_axi_mem_RRESP,
        BVALID => m_axi_mem_BVALID,
        BREADY => m_axi_mem_BREADY,
        BRESP => m_axi_mem_BRESP,
        BID => m_axi_mem_BID,
        BUSER => m_axi_mem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => mem_ARVALID,
        I_ARREADY => mem_ARREADY,
        I_ARADDR => grp_load_graph_fu_708_m_axi_mem_ARADDR,
        I_ARID => grp_load_graph_fu_708_m_axi_mem_ARID,
        I_ARLEN => grp_load_graph_fu_708_m_axi_mem_ARLEN,
        I_ARSIZE => grp_load_graph_fu_708_m_axi_mem_ARSIZE,
        I_ARLOCK => grp_load_graph_fu_708_m_axi_mem_ARLOCK,
        I_ARCACHE => grp_load_graph_fu_708_m_axi_mem_ARCACHE,
        I_ARQOS => grp_load_graph_fu_708_m_axi_mem_ARQOS,
        I_ARPROT => grp_load_graph_fu_708_m_axi_mem_ARPROT,
        I_ARUSER => grp_load_graph_fu_708_m_axi_mem_ARUSER,
        I_ARBURST => grp_load_graph_fu_708_m_axi_mem_ARBURST,
        I_ARREGION => grp_load_graph_fu_708_m_axi_mem_ARREGION,
        I_RVALID => mem_RVALID,
        I_RREADY => mem_RREADY,
        I_RDATA => mem_RDATA,
        I_RID => mem_RID,
        I_RUSER => mem_RUSER,
        I_RRESP => mem_RRESP,
        I_RLAST => mem_RLAST,
        I_AWVALID => mem_AWVALID,
        I_AWREADY => mem_AWREADY,
        I_AWADDR => grp_global_graph_prediction_fu_739_m_axi_mem_AWADDR,
        I_AWID => grp_global_graph_prediction_fu_739_m_axi_mem_AWID,
        I_AWLEN => grp_global_graph_prediction_fu_739_m_axi_mem_AWLEN,
        I_AWSIZE => grp_global_graph_prediction_fu_739_m_axi_mem_AWSIZE,
        I_AWLOCK => grp_global_graph_prediction_fu_739_m_axi_mem_AWLOCK,
        I_AWCACHE => grp_global_graph_prediction_fu_739_m_axi_mem_AWCACHE,
        I_AWQOS => grp_global_graph_prediction_fu_739_m_axi_mem_AWQOS,
        I_AWPROT => grp_global_graph_prediction_fu_739_m_axi_mem_AWPROT,
        I_AWUSER => grp_global_graph_prediction_fu_739_m_axi_mem_AWUSER,
        I_AWBURST => grp_global_graph_prediction_fu_739_m_axi_mem_AWBURST,
        I_AWREGION => grp_global_graph_prediction_fu_739_m_axi_mem_AWREGION,
        I_WVALID => mem_WVALID,
        I_WREADY => mem_WREADY,
        I_WDATA => grp_global_graph_prediction_fu_739_m_axi_mem_WDATA,
        I_WID => grp_global_graph_prediction_fu_739_m_axi_mem_WID,
        I_WUSER => grp_global_graph_prediction_fu_739_m_axi_mem_WUSER,
        I_WLAST => grp_global_graph_prediction_fu_739_m_axi_mem_WLAST,
        I_WSTRB => grp_global_graph_prediction_fu_739_m_axi_mem_WSTRB,
        I_BVALID => mem_BVALID,
        I_BREADY => mem_BREADY,
        I_BRESP => mem_BRESP,
        I_BID => mem_BID,
        I_BUSER => mem_BUSER);

    grp_compute_CONV_layer_fu_662 : component GIN_compute_one_graph_compute_CONV_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_compute_CONV_layer_fu_662_ap_start,
        ap_done => grp_compute_CONV_layer_fu_662_ap_done,
        ap_idle => grp_compute_CONV_layer_fu_662_ap_idle,
        ap_ready => grp_compute_CONV_layer_fu_662_ap_ready,
        layer => layer_reg_650,
        message2_V_address0 => grp_compute_CONV_layer_fu_662_message2_V_address0,
        message2_V_ce0 => grp_compute_CONV_layer_fu_662_message2_V_ce0,
        message2_V_q0 => message2_V_q0,
        message2_V_address1 => grp_compute_CONV_layer_fu_662_message2_V_address1,
        message2_V_ce1 => grp_compute_CONV_layer_fu_662_message2_V_ce1,
        message2_V_we1 => grp_compute_CONV_layer_fu_662_message2_V_we1,
        message2_V_d1 => grp_compute_CONV_layer_fu_662_message2_V_d1,
        node_embedding_V_address0 => grp_compute_CONV_layer_fu_662_node_embedding_V_address0,
        node_embedding_V_ce0 => grp_compute_CONV_layer_fu_662_node_embedding_V_ce0,
        node_embedding_V_q0 => node_embedding_V_q0,
        node_embedding_V_address1 => grp_compute_CONV_layer_fu_662_node_embedding_V_address1,
        node_embedding_V_ce1 => grp_compute_CONV_layer_fu_662_node_embedding_V_ce1,
        node_embedding_V_we1 => grp_compute_CONV_layer_fu_662_node_embedding_V_we1,
        node_embedding_V_d1 => grp_compute_CONV_layer_fu_662_node_embedding_V_d1,
        message1_V_address0 => grp_compute_CONV_layer_fu_662_message1_V_address0,
        message1_V_ce0 => grp_compute_CONV_layer_fu_662_message1_V_ce0,
        message1_V_q0 => message1_V_q0,
        message1_V_address1 => grp_compute_CONV_layer_fu_662_message1_V_address1,
        message1_V_ce1 => grp_compute_CONV_layer_fu_662_message1_V_ce1,
        message1_V_we1 => grp_compute_CONV_layer_fu_662_message1_V_we1,
        message1_V_d1 => grp_compute_CONV_layer_fu_662_message1_V_d1,
        degree_table_address0 => grp_compute_CONV_layer_fu_662_degree_table_address0,
        degree_table_ce0 => grp_compute_CONV_layer_fu_662_degree_table_ce0,
        degree_table_q0 => degree_table_q0,
        degree_table_address1 => grp_compute_CONV_layer_fu_662_degree_table_address1,
        degree_table_ce1 => grp_compute_CONV_layer_fu_662_degree_table_ce1,
        degree_table_q1 => degree_table_q1,
        neighbor_table_address0 => grp_compute_CONV_layer_fu_662_neighbor_table_address0,
        neighbor_table_ce0 => grp_compute_CONV_layer_fu_662_neighbor_table_ce0,
        neighbor_table_q0 => neighbor_table_q0);

    grp_global_mean_pooling_fu_678 : component GIN_compute_one_graph_global_mean_pooling
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_global_mean_pooling_fu_678_ap_start,
        ap_done => grp_global_mean_pooling_fu_678_ap_done,
        ap_idle => grp_global_mean_pooling_fu_678_ap_idle,
        ap_ready => grp_global_mean_pooling_fu_678_ap_ready,
        node_embedding_V_address0 => grp_global_mean_pooling_fu_678_node_embedding_V_address0,
        node_embedding_V_ce0 => grp_global_mean_pooling_fu_678_node_embedding_V_ce0,
        node_embedding_V_q0 => node_embedding_V_q0,
        node_embedding_V_address1 => grp_global_mean_pooling_fu_678_node_embedding_V_address1,
        node_embedding_V_ce1 => grp_global_mean_pooling_fu_678_node_embedding_V_ce1,
        node_embedding_V_q1 => node_embedding_V_q1);

    grp_prepare_degree_neighbor_table_fu_686 : component GIN_compute_one_graph_prepare_degree_neighbor_table
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_prepare_degree_neighbor_table_fu_686_ap_start,
        ap_done => grp_prepare_degree_neighbor_table_fu_686_ap_done,
        ap_idle => grp_prepare_degree_neighbor_table_fu_686_ap_idle,
        ap_ready => grp_prepare_degree_neighbor_table_fu_686_ap_ready,
        degree_table_address0 => grp_prepare_degree_neighbor_table_fu_686_degree_table_address0,
        degree_table_ce0 => grp_prepare_degree_neighbor_table_fu_686_degree_table_ce0,
        degree_table_we0 => grp_prepare_degree_neighbor_table_fu_686_degree_table_we0,
        degree_table_d0 => grp_prepare_degree_neighbor_table_fu_686_degree_table_d0,
        degree_table_q0 => degree_table_q0,
        degree_table_address1 => grp_prepare_degree_neighbor_table_fu_686_degree_table_address1,
        degree_table_ce1 => grp_prepare_degree_neighbor_table_fu_686_degree_table_ce1,
        degree_table_we1 => grp_prepare_degree_neighbor_table_fu_686_degree_table_we1,
        degree_table_d1 => grp_prepare_degree_neighbor_table_fu_686_degree_table_d1,
        degree_table_q1 => degree_table_q1,
        edge_list_address0 => grp_prepare_degree_neighbor_table_fu_686_edge_list_address0,
        edge_list_ce0 => grp_prepare_degree_neighbor_table_fu_686_edge_list_ce0,
        edge_list_q0 => edge_list_q0,
        edge_list_address1 => grp_prepare_degree_neighbor_table_fu_686_edge_list_address1,
        edge_list_ce1 => grp_prepare_degree_neighbor_table_fu_686_edge_list_ce1,
        edge_list_q1 => edge_list_q1,
        neighbor_table_address0 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_address0,
        neighbor_table_ce0 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_ce0,
        neighbor_table_we0 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_we0,
        neighbor_table_d0 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_d0,
        neighbor_table_address1 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_address1,
        neighbor_table_ce1 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_ce1,
        neighbor_table_we1 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_we1,
        neighbor_table_d1 => grp_prepare_degree_neighbor_table_fu_686_neighbor_table_d1);

    grp_compute_node_embedding_fu_696 : component GIN_compute_one_graph_compute_node_embedding
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_compute_node_embedding_fu_696_ap_start,
        ap_done => grp_compute_node_embedding_fu_696_ap_done,
        ap_idle => grp_compute_node_embedding_fu_696_ap_idle,
        ap_ready => grp_compute_node_embedding_fu_696_ap_ready,
        node_embedding_V_address1 => grp_compute_node_embedding_fu_696_node_embedding_V_address1,
        node_embedding_V_ce1 => grp_compute_node_embedding_fu_696_node_embedding_V_ce1,
        node_embedding_V_we1 => grp_compute_node_embedding_fu_696_node_embedding_V_we1,
        node_embedding_V_d1 => grp_compute_node_embedding_fu_696_node_embedding_V_d1,
        degree_table_address0 => grp_compute_node_embedding_fu_696_degree_table_address0,
        degree_table_ce0 => grp_compute_node_embedding_fu_696_degree_table_ce0,
        degree_table_q0 => degree_table_q0,
        degree_table_address1 => grp_compute_node_embedding_fu_696_degree_table_address1,
        degree_table_ce1 => grp_compute_node_embedding_fu_696_degree_table_ce1,
        degree_table_q1 => degree_table_q1,
        neighbor_table_address0 => grp_compute_node_embedding_fu_696_neighbor_table_address0,
        neighbor_table_ce0 => grp_compute_node_embedding_fu_696_neighbor_table_ce0,
        neighbor_table_q0 => neighbor_table_q0,
        message1_V_address0 => grp_compute_node_embedding_fu_696_message1_V_address0,
        message1_V_ce0 => grp_compute_node_embedding_fu_696_message1_V_ce0,
        message1_V_q0 => message1_V_q0,
        message1_V_address1 => grp_compute_node_embedding_fu_696_message1_V_address1,
        message1_V_ce1 => grp_compute_node_embedding_fu_696_message1_V_ce1,
        message1_V_we1 => grp_compute_node_embedding_fu_696_message1_V_we1,
        message1_V_d1 => grp_compute_node_embedding_fu_696_message1_V_d1);

    grp_load_graph_fu_708 : component GIN_compute_one_graph_load_graph
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_load_graph_fu_708_ap_start,
        ap_done => grp_load_graph_fu_708_ap_done,
        ap_idle => grp_load_graph_fu_708_ap_idle,
        ap_ready => grp_load_graph_fu_708_ap_ready,
        m_axi_mem_AWVALID => grp_load_graph_fu_708_m_axi_mem_AWVALID,
        m_axi_mem_AWREADY => ap_const_logic_0,
        m_axi_mem_AWADDR => grp_load_graph_fu_708_m_axi_mem_AWADDR,
        m_axi_mem_AWID => grp_load_graph_fu_708_m_axi_mem_AWID,
        m_axi_mem_AWLEN => grp_load_graph_fu_708_m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE => grp_load_graph_fu_708_m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST => grp_load_graph_fu_708_m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK => grp_load_graph_fu_708_m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE => grp_load_graph_fu_708_m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT => grp_load_graph_fu_708_m_axi_mem_AWPROT,
        m_axi_mem_AWQOS => grp_load_graph_fu_708_m_axi_mem_AWQOS,
        m_axi_mem_AWREGION => grp_load_graph_fu_708_m_axi_mem_AWREGION,
        m_axi_mem_AWUSER => grp_load_graph_fu_708_m_axi_mem_AWUSER,
        m_axi_mem_WVALID => grp_load_graph_fu_708_m_axi_mem_WVALID,
        m_axi_mem_WREADY => ap_const_logic_0,
        m_axi_mem_WDATA => grp_load_graph_fu_708_m_axi_mem_WDATA,
        m_axi_mem_WSTRB => grp_load_graph_fu_708_m_axi_mem_WSTRB,
        m_axi_mem_WLAST => grp_load_graph_fu_708_m_axi_mem_WLAST,
        m_axi_mem_WID => grp_load_graph_fu_708_m_axi_mem_WID,
        m_axi_mem_WUSER => grp_load_graph_fu_708_m_axi_mem_WUSER,
        m_axi_mem_ARVALID => grp_load_graph_fu_708_m_axi_mem_ARVALID,
        m_axi_mem_ARREADY => mem_ARREADY,
        m_axi_mem_ARADDR => grp_load_graph_fu_708_m_axi_mem_ARADDR,
        m_axi_mem_ARID => grp_load_graph_fu_708_m_axi_mem_ARID,
        m_axi_mem_ARLEN => grp_load_graph_fu_708_m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE => grp_load_graph_fu_708_m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST => grp_load_graph_fu_708_m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK => grp_load_graph_fu_708_m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE => grp_load_graph_fu_708_m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT => grp_load_graph_fu_708_m_axi_mem_ARPROT,
        m_axi_mem_ARQOS => grp_load_graph_fu_708_m_axi_mem_ARQOS,
        m_axi_mem_ARREGION => grp_load_graph_fu_708_m_axi_mem_ARREGION,
        m_axi_mem_ARUSER => grp_load_graph_fu_708_m_axi_mem_ARUSER,
        m_axi_mem_RVALID => mem_RVALID,
        m_axi_mem_RREADY => grp_load_graph_fu_708_m_axi_mem_RREADY,
        m_axi_mem_RDATA => mem_RDATA,
        m_axi_mem_RLAST => mem_RLAST,
        m_axi_mem_RID => mem_RID,
        m_axi_mem_RUSER => mem_RUSER,
        m_axi_mem_RRESP => mem_RRESP,
        m_axi_mem_BVALID => ap_const_logic_0,
        m_axi_mem_BREADY => grp_load_graph_fu_708_m_axi_mem_BREADY,
        m_axi_mem_BRESP => ap_const_lv2_0,
        m_axi_mem_BID => ap_const_lv1_0,
        m_axi_mem_BUSER => ap_const_lv1_0,
        node_feature_in => node_feature_in_read_reg_773,
        edge_list_in => edge_list_in_read_reg_768,
        edge_attr_in => edge_attr_in_read_reg_763,
        edge_list_address1 => grp_load_graph_fu_708_edge_list_address1,
        edge_list_ce1 => grp_load_graph_fu_708_edge_list_ce1,
        edge_list_we1 => grp_load_graph_fu_708_edge_list_we1,
        edge_list_d1 => grp_load_graph_fu_708_edge_list_d1);

    grp_clear_message_table_fu_727 : component GIN_compute_one_graph_clear_message_table
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_clear_message_table_fu_727_ap_start,
        ap_done => grp_clear_message_table_fu_727_ap_done,
        ap_idle => grp_clear_message_table_fu_727_ap_idle,
        ap_ready => grp_clear_message_table_fu_727_ap_ready,
        message_tb_address1 => grp_clear_message_table_fu_727_message_tb_address1,
        message_tb_ce1 => grp_clear_message_table_fu_727_message_tb_ce1,
        message_tb_we1 => grp_clear_message_table_fu_727_message_tb_we1,
        message_tb_d1 => grp_clear_message_table_fu_727_message_tb_d1);

    grp_clear_message_table_fu_733 : component GIN_compute_one_graph_clear_message_table
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_clear_message_table_fu_733_ap_start,
        ap_done => grp_clear_message_table_fu_733_ap_done,
        ap_idle => grp_clear_message_table_fu_733_ap_idle,
        ap_ready => grp_clear_message_table_fu_733_ap_ready,
        message_tb_address1 => grp_clear_message_table_fu_733_message_tb_address1,
        message_tb_ce1 => grp_clear_message_table_fu_733_message_tb_ce1,
        message_tb_we1 => grp_clear_message_table_fu_733_message_tb_we1,
        message_tb_d1 => grp_clear_message_table_fu_733_message_tb_d1);

    grp_global_graph_prediction_fu_739 : component GIN_compute_one_graph_global_graph_prediction
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_global_graph_prediction_fu_739_ap_start,
        ap_done => grp_global_graph_prediction_fu_739_ap_done,
        ap_idle => grp_global_graph_prediction_fu_739_ap_idle,
        ap_ready => grp_global_graph_prediction_fu_739_ap_ready,
        m_axi_mem_AWVALID => grp_global_graph_prediction_fu_739_m_axi_mem_AWVALID,
        m_axi_mem_AWREADY => mem_AWREADY,
        m_axi_mem_AWADDR => grp_global_graph_prediction_fu_739_m_axi_mem_AWADDR,
        m_axi_mem_AWID => grp_global_graph_prediction_fu_739_m_axi_mem_AWID,
        m_axi_mem_AWLEN => grp_global_graph_prediction_fu_739_m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE => grp_global_graph_prediction_fu_739_m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST => grp_global_graph_prediction_fu_739_m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK => grp_global_graph_prediction_fu_739_m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE => grp_global_graph_prediction_fu_739_m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT => grp_global_graph_prediction_fu_739_m_axi_mem_AWPROT,
        m_axi_mem_AWQOS => grp_global_graph_prediction_fu_739_m_axi_mem_AWQOS,
        m_axi_mem_AWREGION => grp_global_graph_prediction_fu_739_m_axi_mem_AWREGION,
        m_axi_mem_AWUSER => grp_global_graph_prediction_fu_739_m_axi_mem_AWUSER,
        m_axi_mem_WVALID => grp_global_graph_prediction_fu_739_m_axi_mem_WVALID,
        m_axi_mem_WREADY => mem_WREADY,
        m_axi_mem_WDATA => grp_global_graph_prediction_fu_739_m_axi_mem_WDATA,
        m_axi_mem_WSTRB => grp_global_graph_prediction_fu_739_m_axi_mem_WSTRB,
        m_axi_mem_WLAST => grp_global_graph_prediction_fu_739_m_axi_mem_WLAST,
        m_axi_mem_WID => grp_global_graph_prediction_fu_739_m_axi_mem_WID,
        m_axi_mem_WUSER => grp_global_graph_prediction_fu_739_m_axi_mem_WUSER,
        m_axi_mem_ARVALID => grp_global_graph_prediction_fu_739_m_axi_mem_ARVALID,
        m_axi_mem_ARREADY => ap_const_logic_0,
        m_axi_mem_ARADDR => grp_global_graph_prediction_fu_739_m_axi_mem_ARADDR,
        m_axi_mem_ARID => grp_global_graph_prediction_fu_739_m_axi_mem_ARID,
        m_axi_mem_ARLEN => grp_global_graph_prediction_fu_739_m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE => grp_global_graph_prediction_fu_739_m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST => grp_global_graph_prediction_fu_739_m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK => grp_global_graph_prediction_fu_739_m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE => grp_global_graph_prediction_fu_739_m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT => grp_global_graph_prediction_fu_739_m_axi_mem_ARPROT,
        m_axi_mem_ARQOS => grp_global_graph_prediction_fu_739_m_axi_mem_ARQOS,
        m_axi_mem_ARREGION => grp_global_graph_prediction_fu_739_m_axi_mem_ARREGION,
        m_axi_mem_ARUSER => grp_global_graph_prediction_fu_739_m_axi_mem_ARUSER,
        m_axi_mem_RVALID => ap_const_logic_0,
        m_axi_mem_RREADY => grp_global_graph_prediction_fu_739_m_axi_mem_RREADY,
        m_axi_mem_RDATA => ap_const_lv32_0,
        m_axi_mem_RLAST => ap_const_logic_0,
        m_axi_mem_RID => ap_const_lv1_0,
        m_axi_mem_RUSER => ap_const_lv1_0,
        m_axi_mem_RRESP => ap_const_lv2_0,
        m_axi_mem_BVALID => mem_BVALID,
        m_axi_mem_BREADY => grp_global_graph_prediction_fu_739_m_axi_mem_BREADY,
        m_axi_mem_BRESP => mem_BRESP,
        m_axi_mem_BID => mem_BID,
        m_axi_mem_BUSER => mem_BUSER,
        d_out => task_read_reg_758);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_clear_message_table_fu_727_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_clear_message_table_fu_727_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_clear_message_table_fu_727_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_clear_message_table_fu_727_ap_ready = ap_const_logic_1)) then 
                    grp_clear_message_table_fu_727_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_clear_message_table_fu_733_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_clear_message_table_fu_733_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_clear_message_table_fu_733_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_clear_message_table_fu_733_ap_ready = ap_const_logic_1)) then 
                    grp_clear_message_table_fu_733_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_CONV_layer_fu_662_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_compute_CONV_layer_fu_662_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln629_fu_752_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_compute_CONV_layer_fu_662_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_CONV_layer_fu_662_ap_ready = ap_const_logic_1)) then 
                    grp_compute_CONV_layer_fu_662_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_node_embedding_fu_696_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_compute_node_embedding_fu_696_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_compute_node_embedding_fu_696_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_node_embedding_fu_696_ap_ready = ap_const_logic_1)) then 
                    grp_compute_node_embedding_fu_696_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_global_graph_prediction_fu_739_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_global_graph_prediction_fu_739_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_global_graph_prediction_fu_739_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_global_graph_prediction_fu_739_ap_ready = ap_const_logic_1)) then 
                    grp_global_graph_prediction_fu_739_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_global_mean_pooling_fu_678_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_global_mean_pooling_fu_678_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_global_mean_pooling_fu_678_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_global_mean_pooling_fu_678_ap_ready = ap_const_logic_1)) then 
                    grp_global_mean_pooling_fu_678_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_graph_fu_708_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_load_graph_fu_708_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_load_graph_fu_708_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_graph_fu_708_ap_ready = ap_const_logic_1)) then 
                    grp_load_graph_fu_708_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_prepare_degree_neighbor_table_fu_686_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_prepare_degree_neighbor_table_fu_686_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_prepare_degree_neighbor_table_fu_686_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_prepare_degree_neighbor_table_fu_686_ap_ready = ap_const_logic_1)) then 
                    grp_prepare_degree_neighbor_table_fu_686_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    layer_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_compute_CONV_layer_fu_662_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                layer_reg_650 <= layer_1_reg_778;
            elsif (((grp_compute_node_embedding_fu_696_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                layer_reg_650 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                edge_attr_in_read_reg_763 <= edge_attr_in;
                edge_list_in_read_reg_768 <= edge_list_in;
                node_feature_in_read_reg_773 <= node_feature_in;
                task_read_reg_758 <= task_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                layer_1_reg_778 <= layer_1_fu_746_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state8, grp_compute_CONV_layer_fu_662_ap_done, grp_prepare_degree_neighbor_table_fu_686_ap_done, grp_compute_node_embedding_fu_696_ap_done, ap_CS_fsm_state7, ap_CS_fsm_state9, icmp_ln629_fu_752_p2, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state3, ap_block_state11_on_subcall_done, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_prepare_degree_neighbor_table_fu_686_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_compute_node_embedding_fu_696_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln629_fu_752_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_compute_CONV_layer_fu_662_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state11_on_subcall_done_assign_proc : process(grp_global_mean_pooling_fu_678_ap_done, grp_global_graph_prediction_fu_739_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((grp_global_graph_prediction_fu_739_ap_done = ap_const_logic_0) or (grp_global_mean_pooling_fu_678_ap_done = ap_const_logic_0));
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(grp_load_graph_fu_708_ap_done, grp_clear_message_table_fu_727_ap_done, grp_clear_message_table_fu_733_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_clear_message_table_fu_733_ap_done = ap_const_logic_0) or (grp_clear_message_table_fu_727_ap_done = ap_const_logic_0) or (grp_load_graph_fu_708_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    degree_table_address0_assign_proc : process(grp_compute_CONV_layer_fu_662_degree_table_address0, grp_prepare_degree_neighbor_table_fu_686_degree_table_address0, grp_compute_node_embedding_fu_696_degree_table_address0, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            degree_table_address0 <= grp_compute_node_embedding_fu_696_degree_table_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            degree_table_address0 <= grp_prepare_degree_neighbor_table_fu_686_degree_table_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            degree_table_address0 <= grp_compute_CONV_layer_fu_662_degree_table_address0;
        else 
            degree_table_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    degree_table_address1_assign_proc : process(grp_compute_CONV_layer_fu_662_degree_table_address1, grp_prepare_degree_neighbor_table_fu_686_degree_table_address1, grp_compute_node_embedding_fu_696_degree_table_address1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            degree_table_address1 <= grp_compute_node_embedding_fu_696_degree_table_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            degree_table_address1 <= grp_prepare_degree_neighbor_table_fu_686_degree_table_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            degree_table_address1 <= grp_compute_CONV_layer_fu_662_degree_table_address1;
        else 
            degree_table_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    degree_table_ce0_assign_proc : process(grp_compute_CONV_layer_fu_662_degree_table_ce0, grp_prepare_degree_neighbor_table_fu_686_degree_table_ce0, grp_compute_node_embedding_fu_696_degree_table_ce0, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            degree_table_ce0 <= grp_compute_node_embedding_fu_696_degree_table_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            degree_table_ce0 <= grp_prepare_degree_neighbor_table_fu_686_degree_table_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            degree_table_ce0 <= grp_compute_CONV_layer_fu_662_degree_table_ce0;
        else 
            degree_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    degree_table_ce1_assign_proc : process(grp_compute_CONV_layer_fu_662_degree_table_ce1, grp_prepare_degree_neighbor_table_fu_686_degree_table_ce1, grp_compute_node_embedding_fu_696_degree_table_ce1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            degree_table_ce1 <= grp_compute_node_embedding_fu_696_degree_table_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            degree_table_ce1 <= grp_prepare_degree_neighbor_table_fu_686_degree_table_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            degree_table_ce1 <= grp_compute_CONV_layer_fu_662_degree_table_ce1;
        else 
            degree_table_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    degree_table_we0_assign_proc : process(grp_prepare_degree_neighbor_table_fu_686_degree_table_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            degree_table_we0 <= grp_prepare_degree_neighbor_table_fu_686_degree_table_we0;
        else 
            degree_table_we0 <= ap_const_logic_0;
        end if; 
    end process;


    degree_table_we1_assign_proc : process(grp_prepare_degree_neighbor_table_fu_686_degree_table_we1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            degree_table_we1 <= grp_prepare_degree_neighbor_table_fu_686_degree_table_we1;
        else 
            degree_table_we1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_list_address1_assign_proc : process(grp_prepare_degree_neighbor_table_fu_686_edge_list_address1, grp_load_graph_fu_708_edge_list_address1, ap_CS_fsm_state5, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            edge_list_address1 <= grp_load_graph_fu_708_edge_list_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            edge_list_address1 <= grp_prepare_degree_neighbor_table_fu_686_edge_list_address1;
        else 
            edge_list_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    edge_list_ce0_assign_proc : process(grp_prepare_degree_neighbor_table_fu_686_edge_list_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            edge_list_ce0 <= grp_prepare_degree_neighbor_table_fu_686_edge_list_ce0;
        else 
            edge_list_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edge_list_ce1_assign_proc : process(grp_prepare_degree_neighbor_table_fu_686_edge_list_ce1, grp_load_graph_fu_708_edge_list_ce1, ap_CS_fsm_state5, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            edge_list_ce1 <= grp_load_graph_fu_708_edge_list_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            edge_list_ce1 <= grp_prepare_degree_neighbor_table_fu_686_edge_list_ce1;
        else 
            edge_list_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    edge_list_we1_assign_proc : process(grp_load_graph_fu_708_edge_list_we1, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            edge_list_we1 <= grp_load_graph_fu_708_edge_list_we1;
        else 
            edge_list_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_clear_message_table_fu_727_ap_start <= grp_clear_message_table_fu_727_ap_start_reg;
    grp_clear_message_table_fu_733_ap_start <= grp_clear_message_table_fu_733_ap_start_reg;
    grp_compute_CONV_layer_fu_662_ap_start <= grp_compute_CONV_layer_fu_662_ap_start_reg;
    grp_compute_node_embedding_fu_696_ap_start <= grp_compute_node_embedding_fu_696_ap_start_reg;
    grp_global_graph_prediction_fu_739_ap_start <= grp_global_graph_prediction_fu_739_ap_start_reg;
    grp_global_mean_pooling_fu_678_ap_start <= grp_global_mean_pooling_fu_678_ap_start_reg;
    grp_load_graph_fu_708_ap_start <= grp_load_graph_fu_708_ap_start_reg;
    grp_prepare_degree_neighbor_table_fu_686_ap_start <= grp_prepare_degree_neighbor_table_fu_686_ap_start_reg;
    icmp_ln629_fu_752_p2 <= "1" when (layer_reg_650 = ap_const_lv3_5) else "0";
    layer_1_fu_746_p2 <= std_logic_vector(unsigned(layer_reg_650) + unsigned(ap_const_lv3_1));

    mem_ARVALID_assign_proc : process(grp_load_graph_fu_708_m_axi_mem_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            mem_ARVALID <= grp_load_graph_fu_708_m_axi_mem_ARVALID;
        else 
            mem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    mem_AWVALID_assign_proc : process(grp_global_graph_prediction_fu_739_m_axi_mem_AWVALID, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            mem_AWVALID <= grp_global_graph_prediction_fu_739_m_axi_mem_AWVALID;
        else 
            mem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    mem_BREADY_assign_proc : process(grp_global_graph_prediction_fu_739_m_axi_mem_BREADY, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            mem_BREADY <= grp_global_graph_prediction_fu_739_m_axi_mem_BREADY;
        else 
            mem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    mem_RREADY_assign_proc : process(grp_load_graph_fu_708_m_axi_mem_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            mem_RREADY <= grp_load_graph_fu_708_m_axi_mem_RREADY;
        else 
            mem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    mem_WVALID_assign_proc : process(grp_global_graph_prediction_fu_739_m_axi_mem_WVALID, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            mem_WVALID <= grp_global_graph_prediction_fu_739_m_axi_mem_WVALID;
        else 
            mem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    message1_V_address0_assign_proc : process(grp_compute_CONV_layer_fu_662_message1_V_address0, grp_compute_node_embedding_fu_696_message1_V_address0, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            message1_V_address0 <= grp_compute_node_embedding_fu_696_message1_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message1_V_address0 <= grp_compute_CONV_layer_fu_662_message1_V_address0;
        else 
            message1_V_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    message1_V_address1_assign_proc : process(grp_compute_CONV_layer_fu_662_message1_V_address1, grp_compute_node_embedding_fu_696_message1_V_address1, grp_clear_message_table_fu_727_message_tb_address1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            message1_V_address1 <= grp_clear_message_table_fu_727_message_tb_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            message1_V_address1 <= grp_compute_node_embedding_fu_696_message1_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message1_V_address1 <= grp_compute_CONV_layer_fu_662_message1_V_address1;
        else 
            message1_V_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    message1_V_ce0_assign_proc : process(grp_compute_CONV_layer_fu_662_message1_V_ce0, grp_compute_node_embedding_fu_696_message1_V_ce0, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            message1_V_ce0 <= grp_compute_node_embedding_fu_696_message1_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message1_V_ce0 <= grp_compute_CONV_layer_fu_662_message1_V_ce0;
        else 
            message1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message1_V_ce1_assign_proc : process(grp_compute_CONV_layer_fu_662_message1_V_ce1, grp_compute_node_embedding_fu_696_message1_V_ce1, grp_clear_message_table_fu_727_message_tb_ce1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            message1_V_ce1 <= grp_clear_message_table_fu_727_message_tb_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            message1_V_ce1 <= grp_compute_node_embedding_fu_696_message1_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message1_V_ce1 <= grp_compute_CONV_layer_fu_662_message1_V_ce1;
        else 
            message1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    message1_V_d1_assign_proc : process(grp_compute_CONV_layer_fu_662_message1_V_d1, grp_compute_node_embedding_fu_696_message1_V_d1, grp_clear_message_table_fu_727_message_tb_d1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            message1_V_d1 <= grp_clear_message_table_fu_727_message_tb_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            message1_V_d1 <= grp_compute_node_embedding_fu_696_message1_V_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message1_V_d1 <= grp_compute_CONV_layer_fu_662_message1_V_d1;
        else 
            message1_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    message1_V_we1_assign_proc : process(grp_compute_CONV_layer_fu_662_message1_V_we1, grp_compute_node_embedding_fu_696_message1_V_we1, grp_clear_message_table_fu_727_message_tb_we1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            message1_V_we1 <= grp_clear_message_table_fu_727_message_tb_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            message1_V_we1 <= grp_compute_node_embedding_fu_696_message1_V_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message1_V_we1 <= grp_compute_CONV_layer_fu_662_message1_V_we1;
        else 
            message1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    message2_V_address1_assign_proc : process(grp_compute_CONV_layer_fu_662_message2_V_address1, grp_clear_message_table_fu_733_message_tb_address1, ap_CS_fsm_state9, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            message2_V_address1 <= grp_clear_message_table_fu_733_message_tb_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message2_V_address1 <= grp_compute_CONV_layer_fu_662_message2_V_address1;
        else 
            message2_V_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    message2_V_ce0_assign_proc : process(grp_compute_CONV_layer_fu_662_message2_V_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message2_V_ce0 <= grp_compute_CONV_layer_fu_662_message2_V_ce0;
        else 
            message2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    message2_V_ce1_assign_proc : process(grp_compute_CONV_layer_fu_662_message2_V_ce1, grp_clear_message_table_fu_733_message_tb_ce1, ap_CS_fsm_state9, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            message2_V_ce1 <= grp_clear_message_table_fu_733_message_tb_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message2_V_ce1 <= grp_compute_CONV_layer_fu_662_message2_V_ce1;
        else 
            message2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    message2_V_d1_assign_proc : process(grp_compute_CONV_layer_fu_662_message2_V_d1, grp_clear_message_table_fu_733_message_tb_d1, ap_CS_fsm_state9, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            message2_V_d1 <= grp_clear_message_table_fu_733_message_tb_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message2_V_d1 <= grp_compute_CONV_layer_fu_662_message2_V_d1;
        else 
            message2_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    message2_V_we1_assign_proc : process(grp_compute_CONV_layer_fu_662_message2_V_we1, grp_clear_message_table_fu_733_message_tb_we1, ap_CS_fsm_state9, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            message2_V_we1 <= grp_clear_message_table_fu_733_message_tb_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            message2_V_we1 <= grp_compute_CONV_layer_fu_662_message2_V_we1;
        else 
            message2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    neighbor_table_address0_assign_proc : process(grp_compute_CONV_layer_fu_662_neighbor_table_address0, grp_prepare_degree_neighbor_table_fu_686_neighbor_table_address0, grp_compute_node_embedding_fu_696_neighbor_table_address0, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            neighbor_table_address0 <= grp_compute_node_embedding_fu_696_neighbor_table_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            neighbor_table_address0 <= grp_prepare_degree_neighbor_table_fu_686_neighbor_table_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            neighbor_table_address0 <= grp_compute_CONV_layer_fu_662_neighbor_table_address0;
        else 
            neighbor_table_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    neighbor_table_ce0_assign_proc : process(grp_compute_CONV_layer_fu_662_neighbor_table_ce0, grp_prepare_degree_neighbor_table_fu_686_neighbor_table_ce0, grp_compute_node_embedding_fu_696_neighbor_table_ce0, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            neighbor_table_ce0 <= grp_compute_node_embedding_fu_696_neighbor_table_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            neighbor_table_ce0 <= grp_prepare_degree_neighbor_table_fu_686_neighbor_table_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            neighbor_table_ce0 <= grp_compute_CONV_layer_fu_662_neighbor_table_ce0;
        else 
            neighbor_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    neighbor_table_ce1_assign_proc : process(grp_prepare_degree_neighbor_table_fu_686_neighbor_table_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            neighbor_table_ce1 <= grp_prepare_degree_neighbor_table_fu_686_neighbor_table_ce1;
        else 
            neighbor_table_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    neighbor_table_we0_assign_proc : process(grp_prepare_degree_neighbor_table_fu_686_neighbor_table_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            neighbor_table_we0 <= grp_prepare_degree_neighbor_table_fu_686_neighbor_table_we0;
        else 
            neighbor_table_we0 <= ap_const_logic_0;
        end if; 
    end process;


    neighbor_table_we1_assign_proc : process(grp_prepare_degree_neighbor_table_fu_686_neighbor_table_we1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            neighbor_table_we1 <= grp_prepare_degree_neighbor_table_fu_686_neighbor_table_we1;
        else 
            neighbor_table_we1 <= ap_const_logic_0;
        end if; 
    end process;


    node_embedding_V_address0_assign_proc : process(grp_compute_CONV_layer_fu_662_node_embedding_V_address0, grp_global_mean_pooling_fu_678_node_embedding_V_address0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            node_embedding_V_address0 <= grp_global_mean_pooling_fu_678_node_embedding_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            node_embedding_V_address0 <= grp_compute_CONV_layer_fu_662_node_embedding_V_address0;
        else 
            node_embedding_V_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    node_embedding_V_address1_assign_proc : process(grp_compute_CONV_layer_fu_662_node_embedding_V_address1, grp_global_mean_pooling_fu_678_node_embedding_V_address1, grp_compute_node_embedding_fu_696_node_embedding_V_address1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            node_embedding_V_address1 <= grp_compute_node_embedding_fu_696_node_embedding_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            node_embedding_V_address1 <= grp_global_mean_pooling_fu_678_node_embedding_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            node_embedding_V_address1 <= grp_compute_CONV_layer_fu_662_node_embedding_V_address1;
        else 
            node_embedding_V_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    node_embedding_V_ce0_assign_proc : process(grp_compute_CONV_layer_fu_662_node_embedding_V_ce0, grp_global_mean_pooling_fu_678_node_embedding_V_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            node_embedding_V_ce0 <= grp_global_mean_pooling_fu_678_node_embedding_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            node_embedding_V_ce0 <= grp_compute_CONV_layer_fu_662_node_embedding_V_ce0;
        else 
            node_embedding_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    node_embedding_V_ce1_assign_proc : process(grp_compute_CONV_layer_fu_662_node_embedding_V_ce1, grp_global_mean_pooling_fu_678_node_embedding_V_ce1, grp_compute_node_embedding_fu_696_node_embedding_V_ce1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            node_embedding_V_ce1 <= grp_compute_node_embedding_fu_696_node_embedding_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            node_embedding_V_ce1 <= grp_global_mean_pooling_fu_678_node_embedding_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            node_embedding_V_ce1 <= grp_compute_CONV_layer_fu_662_node_embedding_V_ce1;
        else 
            node_embedding_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    node_embedding_V_d1_assign_proc : process(grp_compute_CONV_layer_fu_662_node_embedding_V_d1, grp_compute_node_embedding_fu_696_node_embedding_V_d1, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            node_embedding_V_d1 <= grp_compute_node_embedding_fu_696_node_embedding_V_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            node_embedding_V_d1 <= grp_compute_CONV_layer_fu_662_node_embedding_V_d1;
        else 
            node_embedding_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    node_embedding_V_we1_assign_proc : process(grp_compute_CONV_layer_fu_662_node_embedding_V_we1, grp_compute_node_embedding_fu_696_node_embedding_V_we1, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            node_embedding_V_we1 <= grp_compute_node_embedding_fu_696_node_embedding_V_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            node_embedding_V_we1 <= grp_compute_CONV_layer_fu_662_node_embedding_V_we1;
        else 
            node_embedding_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
