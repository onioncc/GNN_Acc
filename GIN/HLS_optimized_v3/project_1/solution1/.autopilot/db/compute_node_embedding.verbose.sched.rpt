

================================================================
== Vitis HLS Report for 'compute_node_embedding'
================================================================
* Date:           Sat Oct 30 13:57:54 2021

* Version:        2020.2.2 (Build 3118627 on Tue Feb  9 05:13:49 MST 2021)
* Project:        project_1
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.610 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     2174|     9774|  21.740 us|  97.740 us|  2174|  9774|     none|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+-----------+-----------+-----------+------+----------+
        |                 |  Latency (cycles) | Iteration |  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |  Latency  |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+-----------+-----------+-----------+------+----------+
        |- loop_node_emb  |     1962|     9162|  109 ~ 509|          -|          -|    18|        no|
        +-----------------+---------+---------+-----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 5 4 
4 --> 3 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.96>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%emb_vec1_V = alloca i64 1" [GIN_compute.cpp:273]   --->   Operation 6 'alloca' 'emb_vec1_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%emb_vec2_V = alloca i64 1" [GIN_compute.cpp:274]   --->   Operation 7 'alloca' 'emb_vec2_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [2/2] (1.96ns)   --->   "%call_ln276 = call void @one_node_embedding, i5 0, i32 %emb_vec1_V, i32 %node_embedding_V" [GIN_compute.cpp:276]   --->   Operation 8 'call' 'call_ln276' <Predicate = true> <Delay = 1.96> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.38>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %message1_V, i64 666, i64 24, i64 18446744073709551615"   --->   Operation 9 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/2] (0.00ns)   --->   "%call_ln276 = call void @one_node_embedding, i5 0, i32 %emb_vec1_V, i32 %node_embedding_V" [GIN_compute.cpp:276]   --->   Operation 10 'call' 'call_ln276' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 11 [1/1] (0.38ns)   --->   "%br_ln278 = br void" [GIN_compute.cpp:278]   --->   Operation 11 'br' 'br_ln278' <Predicate = true> <Delay = 0.38>

State 3 <SV = 2> <Delay = 3.73>
ST_3 : Operation 12 [1/1] (0.00ns)   --->   "%nd = phi i5 1, void, i5 %nd_1, void"   --->   Operation 12 'phi' 'nd' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 13 [1/1] (0.63ns)   --->   "%icmp_ln278 = icmp_eq  i5 %nd, i5 19" [GIN_compute.cpp:278]   --->   Operation 13 'icmp' 'icmp_ln278' <Predicate = true> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 14 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 18, i64 18, i64 18"   --->   Operation 14 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln278 = br i1 %icmp_ln278, void %.split, void" [GIN_compute.cpp:278]   --->   Operation 15 'br' 'br_ln278' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 16 [1/1] (0.00ns)   --->   "%specloopname_ln278 = specloopname void @_ssdm_op_SpecLoopName, void @empty" [GIN_compute.cpp:278]   --->   Operation 16 'specloopname' 'specloopname_ln278' <Predicate = (!icmp_ln278)> <Delay = 0.00>
ST_3 : Operation 17 [1/1] (0.70ns)   --->   "%sub = add i5 %nd, i5 31" [GIN_compute.cpp:278]   --->   Operation 17 'add' 'sub' <Predicate = (!icmp_ln278)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 18 [1/1] (0.00ns)   --->   "%trunc_ln278 = trunc i5 %nd" [GIN_compute.cpp:278]   --->   Operation 18 'trunc' 'trunc_ln278' <Predicate = (!icmp_ln278)> <Delay = 0.00>
ST_3 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln279 = br i1 %trunc_ln278, void, void" [GIN_compute.cpp:279]   --->   Operation 19 'br' 'br_ln279' <Predicate = (!icmp_ln278)> <Delay = 0.00>
ST_3 : Operation 20 [2/2] (3.03ns)   --->   "%call_ln284 = call void @message_passing_one_node_vec, i32 %emb_vec2_V, i5 %sub, i32 %message1_V, i32 %degree_table, i8 %neighbor_table" [GIN_compute.cpp:284]   --->   Operation 20 'call' 'call_ln284' <Predicate = (!icmp_ln278 & !trunc_ln278)> <Delay = 3.03> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 21 [2/2] (1.96ns)   --->   "%call_ln285 = call void @one_node_embedding, i5 %nd, i32 %emb_vec1_V, i32 %node_embedding_V" [GIN_compute.cpp:285]   --->   Operation 21 'call' 'call_ln285' <Predicate = (!icmp_ln278 & !trunc_ln278)> <Delay = 1.96> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 22 [2/2] (3.03ns)   --->   "%call_ln280 = call void @message_passing_one_node_vec, i32 %emb_vec1_V, i5 %sub, i32 %message1_V, i32 %degree_table, i8 %neighbor_table" [GIN_compute.cpp:280]   --->   Operation 22 'call' 'call_ln280' <Predicate = (!icmp_ln278 & trunc_ln278)> <Delay = 3.03> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 23 [2/2] (1.96ns)   --->   "%call_ln281 = call void @one_node_embedding, i5 %nd, i32 %emb_vec2_V, i32 %node_embedding_V" [GIN_compute.cpp:281]   --->   Operation 23 'call' 'call_ln281' <Predicate = (!icmp_ln278 & trunc_ln278)> <Delay = 1.96> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 24 [2/2] (3.03ns)   --->   "%call_ln289 = call void @message_passing_one_node_vec, i32 %emb_vec1_V, i5 18, i32 %message1_V, i32 %degree_table, i8 %neighbor_table" [GIN_compute.cpp:289]   --->   Operation 24 'call' 'call_ln289' <Predicate = (icmp_ln278)> <Delay = 3.03> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.70>
ST_4 : Operation 25 [1/2] (0.00ns)   --->   "%call_ln284 = call void @message_passing_one_node_vec, i32 %emb_vec2_V, i5 %sub, i32 %message1_V, i32 %degree_table, i8 %neighbor_table" [GIN_compute.cpp:284]   --->   Operation 25 'call' 'call_ln284' <Predicate = (!trunc_ln278)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 26 [1/2] (0.00ns)   --->   "%call_ln285 = call void @one_node_embedding, i5 %nd, i32 %emb_vec1_V, i32 %node_embedding_V" [GIN_compute.cpp:285]   --->   Operation 26 'call' 'call_ln285' <Predicate = (!trunc_ln278)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 27 'br' 'br_ln0' <Predicate = (!trunc_ln278)> <Delay = 0.00>
ST_4 : Operation 28 [1/2] (0.00ns)   --->   "%call_ln280 = call void @message_passing_one_node_vec, i32 %emb_vec1_V, i5 %sub, i32 %message1_V, i32 %degree_table, i8 %neighbor_table" [GIN_compute.cpp:280]   --->   Operation 28 'call' 'call_ln280' <Predicate = (trunc_ln278)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 29 [1/2] (0.00ns)   --->   "%call_ln281 = call void @one_node_embedding, i5 %nd, i32 %emb_vec2_V, i32 %node_embedding_V" [GIN_compute.cpp:281]   --->   Operation 29 'call' 'call_ln281' <Predicate = (trunc_ln278)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln282 = br void" [GIN_compute.cpp:282]   --->   Operation 30 'br' 'br_ln282' <Predicate = (trunc_ln278)> <Delay = 0.00>
ST_4 : Operation 31 [1/1] (0.70ns)   --->   "%nd_1 = add i5 %nd, i5 1" [GIN_compute.cpp:278]   --->   Operation 31 'add' 'nd_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 32 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 0.00>
ST_5 : Operation 33 [1/2] (0.00ns)   --->   "%call_ln289 = call void @message_passing_one_node_vec, i32 %emb_vec1_V, i5 18, i32 %message1_V, i32 %degree_table, i8 %neighbor_table" [GIN_compute.cpp:289]   --->   Operation 33 'call' 'call_ln289' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%ret_ln304 = ret" [GIN_compute.cpp:304]   --->   Operation 34 'ret' 'ret_ln304' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.97ns
The critical path consists of the following:
	'alloca' operation ('emb_vec1.V', GIN_compute.cpp:273) [9]  (0 ns)
	'call' operation ('call_ln276', GIN_compute.cpp:276) to 'one_node_embedding' [11]  (1.97 ns)

 <State 2>: 0.387ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('nd') with incoming values : ('nd', GIN_compute.cpp:278) [14]  (0.387 ns)

 <State 3>: 3.74ns
The critical path consists of the following:
	'phi' operation ('nd') with incoming values : ('nd', GIN_compute.cpp:278) [14]  (0 ns)
	'add' operation ('sub', GIN_compute.cpp:278) [20]  (0.707 ns)
	'call' operation ('call_ln284', GIN_compute.cpp:284) to 'message_passing_one_node_vec' [24]  (3.03 ns)

 <State 4>: 0.707ns
The critical path consists of the following:
	'add' operation ('nd', GIN_compute.cpp:278) [32]  (0.707 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
