

================================================================
== Vitis HLS Report for 'global_graph_prediction'
================================================================
* Date:           Sat Oct 30 13:58:30 2021

* Version:        2020.2.2 (Build 3118627 on Tue Feb  9 05:13:49 MST 2021)
* Project:        project_1
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  60.000 ns|  60.000 ns|    6|    6|     none|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+---------------------+---------+------+---------+---------+-----+
|         Name        | BRAM_18K|  DSP |    FF   |   LUT   | URAM|
+---------------------+---------+------+---------+---------+-----+
|DSP                  |        -|     -|        -|        -|    -|
|Expression           |        -|     -|        -|        -|    -|
|FIFO                 |        -|     -|        -|        -|    -|
|Instance             |        -|     -|        -|        -|    -|
|Memory               |        -|     -|        -|        -|    -|
|Multiplexer          |        -|     -|        -|       70|    -|
|Register             |        -|     -|        7|        -|    -|
+---------------------+---------+------+---------+---------+-----+
|Total                |        0|     0|        7|       70|    0|
+---------------------+---------+------+---------+---------+-----+
|Available SLR        |     1344|  3008|   869120|   434560|  320|
+---------------------+---------+------+---------+---------+-----+
|Utilization SLR (%)  |        0|     0|       ~0|       ~0|    0|
+---------------------+---------+------+---------+---------+-----+
|Available            |     4032|  9024|  2607360|  1303680|  960|
+---------------------+---------+------+---------+---------+-----+
|Utilization (%)      |        0|     0|       ~0|       ~0|    0|
+---------------------+---------+------+---------+---------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    +--------------+----+-----------+-----+-----------+
    |     Name     | LUT| Input Size| Bits| Total Bits|
    +--------------+----+-----------+-----+-----------+
    |ap_NS_fsm     |  43|          8|    1|          8|
    |mem_blk_n_AW  |   9|          2|    1|          2|
    |mem_blk_n_B   |   9|          2|    1|          2|
    |mem_blk_n_W   |   9|          2|    1|          2|
    +--------------+----+-----------+-----+-----------+
    |Total         |  70|         14|    4|         14|
    +--------------+----+-----------+-----+-----------+

    * Register: 
    +-----------+---+----+-----+-----------+
    |    Name   | FF| LUT| Bits| Const Bits|
    +-----------+---+----+-----+-----------+
    |ap_CS_fsm  |  7|   0|    7|          0|
    +-----------+---+----+-----+-----------+
    |Total      |  7|   0|    7|          0|
    +-----------+---+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+--------------------+-----+-----+------------+-------------------------+--------------+
|      RTL Ports     | Dir | Bits|  Protocol  |      Source Object      |    C Type    |
+--------------------+-----+-----+------------+-------------------------+--------------+
|ap_clk              |   in|    1|  ap_ctrl_hs|  global_graph_prediction|  return value|
|ap_rst              |   in|    1|  ap_ctrl_hs|  global_graph_prediction|  return value|
|ap_start            |   in|    1|  ap_ctrl_hs|  global_graph_prediction|  return value|
|ap_done             |  out|    1|  ap_ctrl_hs|  global_graph_prediction|  return value|
|ap_idle             |  out|    1|  ap_ctrl_hs|  global_graph_prediction|  return value|
|ap_ready            |  out|    1|  ap_ctrl_hs|  global_graph_prediction|  return value|
|m_axi_mem_AWVALID   |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_AWREADY   |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_AWADDR    |  out|   64|       m_axi|                      mem|       pointer|
|m_axi_mem_AWID      |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_AWLEN     |  out|   32|       m_axi|                      mem|       pointer|
|m_axi_mem_AWSIZE    |  out|    3|       m_axi|                      mem|       pointer|
|m_axi_mem_AWBURST   |  out|    2|       m_axi|                      mem|       pointer|
|m_axi_mem_AWLOCK    |  out|    2|       m_axi|                      mem|       pointer|
|m_axi_mem_AWCACHE   |  out|    4|       m_axi|                      mem|       pointer|
|m_axi_mem_AWPROT    |  out|    3|       m_axi|                      mem|       pointer|
|m_axi_mem_AWQOS     |  out|    4|       m_axi|                      mem|       pointer|
|m_axi_mem_AWREGION  |  out|    4|       m_axi|                      mem|       pointer|
|m_axi_mem_AWUSER    |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_WVALID    |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_WREADY    |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_WDATA     |  out|   32|       m_axi|                      mem|       pointer|
|m_axi_mem_WSTRB     |  out|    4|       m_axi|                      mem|       pointer|
|m_axi_mem_WLAST     |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_WID       |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_WUSER     |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_ARVALID   |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_ARREADY   |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_ARADDR    |  out|   64|       m_axi|                      mem|       pointer|
|m_axi_mem_ARID      |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_ARLEN     |  out|   32|       m_axi|                      mem|       pointer|
|m_axi_mem_ARSIZE    |  out|    3|       m_axi|                      mem|       pointer|
|m_axi_mem_ARBURST   |  out|    2|       m_axi|                      mem|       pointer|
|m_axi_mem_ARLOCK    |  out|    2|       m_axi|                      mem|       pointer|
|m_axi_mem_ARCACHE   |  out|    4|       m_axi|                      mem|       pointer|
|m_axi_mem_ARPROT    |  out|    3|       m_axi|                      mem|       pointer|
|m_axi_mem_ARQOS     |  out|    4|       m_axi|                      mem|       pointer|
|m_axi_mem_ARREGION  |  out|    4|       m_axi|                      mem|       pointer|
|m_axi_mem_ARUSER    |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_RVALID    |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_RREADY    |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_RDATA     |   in|   32|       m_axi|                      mem|       pointer|
|m_axi_mem_RLAST     |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_RID       |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_RUSER     |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_RRESP     |   in|    2|       m_axi|                      mem|       pointer|
|m_axi_mem_BVALID    |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_BREADY    |  out|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_BRESP     |   in|    2|       m_axi|                      mem|       pointer|
|m_axi_mem_BID       |   in|    1|       m_axi|                      mem|       pointer|
|m_axi_mem_BUSER     |   in|    1|       m_axi|                      mem|       pointer|
|d_out               |   in|   64|     ap_none|                    d_out|        scalar|
+--------------------+-----+-----+------------+-------------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.30>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%d_out_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %d_out" [GIN_compute.cpp:413]   --->   Operation 8 'read' 'd_out_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %d_out_read, i32 2, i32 63" [GIN_compute.cpp:413]   --->   Operation 9 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sext_ln413 = sext i62 %trunc_ln" [GIN_compute.cpp:413]   --->   Operation 10 'sext' 'sext_ln413' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i32 %mem, i64 %sext_ln413" [GIN_compute.cpp:413]   --->   Operation 11 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (7.30ns)   --->   "%mem_addr_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P1A, i64 %mem_addr, i32 1"   --->   Operation 12 'writereq' 'mem_addr_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 13 [1/1] (7.30ns)   --->   "%write_ln727 = write void @_ssdm_op_Write.m_axi.i32P1A, i64 %mem_addr, i32 0, i4 15"   --->   Operation 13 'write' 'write_ln727' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 14 [5/5] (7.30ns)   --->   "%mem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i64 %mem_addr"   --->   Operation 14 'writeresp' 'mem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 15 [4/5] (7.30ns)   --->   "%mem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i64 %mem_addr"   --->   Operation 15 'writeresp' 'mem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 16 [3/5] (7.30ns)   --->   "%mem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i64 %mem_addr"   --->   Operation 16 'writeresp' 'mem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 17 [2/5] (7.30ns)   --->   "%mem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i64 %mem_addr"   --->   Operation 17 'writeresp' 'mem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 18 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, void @graph_embedding_V, i64 666, i64 22, i64 18446744073709551615"   --->   Operation 18 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem, void @empty_22, i32 0, i32 0, void @empty_13, i32 0, i32 100000, void @empty_11, void @empty_10, void @empty_13, i32 16, i32 16, i32 16, i32 16, void @empty_13, void @empty_13"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 20 [1/5] (7.30ns)   --->   "%mem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i64 %mem_addr"   --->   Operation 20 'writeresp' 'mem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 21 [1/1] (0.00ns)   --->   "%ret_ln418 = ret" [GIN_compute.cpp:418]   --->   Operation 21 'ret' 'ret_ln418' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ mem]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ d_out]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
d_out_read        (read         ) [ 00000000]
trunc_ln          (partselect   ) [ 00000000]
sext_ln413        (sext         ) [ 00000000]
mem_addr          (getelementptr) [ 00111111]
mem_addr_req      (writereq     ) [ 00000000]
write_ln727       (write        ) [ 00000000]
specmemcore_ln0   (specmemcore  ) [ 00000000]
specinterface_ln0 (specinterface) [ 00000000]
mem_addr_resp     (writeresp    ) [ 00000000]
ret_ln418         (ret          ) [ 00000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="mem">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="mem"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="d_out">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_out"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i64"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i62.i64.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P1A"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.i32P1A"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P1A"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecMemCore"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="graph_embedding_V"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_22"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_13"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_11"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_10"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1004" name="d_out_read_read_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="64" slack="0"/>
<pin id="50" dir="0" index="1" bw="64" slack="0"/>
<pin id="51" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_out_read/1 "/>
</bind>
</comp>

<comp id="54" class="1004" name="grp_writeresp_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="1" slack="0"/>
<pin id="56" dir="0" index="1" bw="32" slack="0"/>
<pin id="57" dir="0" index="2" bw="1" slack="0"/>
<pin id="58" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="mem_addr_req/1 mem_addr_resp/3 "/>
</bind>
</comp>

<comp id="61" class="1004" name="write_ln727_write_fu_61">
<pin_list>
<pin id="62" dir="0" index="0" bw="0" slack="0"/>
<pin id="63" dir="0" index="1" bw="32" slack="1"/>
<pin id="64" dir="0" index="2" bw="1" slack="0"/>
<pin id="65" dir="0" index="3" bw="1" slack="0"/>
<pin id="66" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln727/2 "/>
</bind>
</comp>

<comp id="71" class="1004" name="trunc_ln_fu_71">
<pin_list>
<pin id="72" dir="0" index="0" bw="62" slack="0"/>
<pin id="73" dir="0" index="1" bw="64" slack="0"/>
<pin id="74" dir="0" index="2" bw="3" slack="0"/>
<pin id="75" dir="0" index="3" bw="7" slack="0"/>
<pin id="76" dir="1" index="4" bw="62" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="trunc_ln/1 "/>
</bind>
</comp>

<comp id="81" class="1004" name="sext_ln413_fu_81">
<pin_list>
<pin id="82" dir="0" index="0" bw="62" slack="0"/>
<pin id="83" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln413/1 "/>
</bind>
</comp>

<comp id="85" class="1004" name="mem_addr_fu_85">
<pin_list>
<pin id="86" dir="0" index="0" bw="64" slack="0"/>
<pin id="87" dir="0" index="1" bw="64" slack="0"/>
<pin id="88" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="mem_addr/1 "/>
</bind>
</comp>

<comp id="92" class="1005" name="mem_addr_reg_92">
<pin_list>
<pin id="93" dir="0" index="0" bw="32" slack="1"/>
<pin id="94" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="mem_addr "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="52"><net_src comp="4" pin="0"/><net_sink comp="48" pin=0"/></net>

<net id="53"><net_src comp="2" pin="0"/><net_sink comp="48" pin=1"/></net>

<net id="59"><net_src comp="12" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="60"><net_src comp="14" pin="0"/><net_sink comp="54" pin=2"/></net>

<net id="67"><net_src comp="16" pin="0"/><net_sink comp="61" pin=0"/></net>

<net id="68"><net_src comp="18" pin="0"/><net_sink comp="61" pin=2"/></net>

<net id="69"><net_src comp="20" pin="0"/><net_sink comp="61" pin=3"/></net>

<net id="70"><net_src comp="22" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="77"><net_src comp="6" pin="0"/><net_sink comp="71" pin=0"/></net>

<net id="78"><net_src comp="48" pin="2"/><net_sink comp="71" pin=1"/></net>

<net id="79"><net_src comp="8" pin="0"/><net_sink comp="71" pin=2"/></net>

<net id="80"><net_src comp="10" pin="0"/><net_sink comp="71" pin=3"/></net>

<net id="84"><net_src comp="71" pin="4"/><net_sink comp="81" pin=0"/></net>

<net id="89"><net_src comp="0" pin="0"/><net_sink comp="85" pin=0"/></net>

<net id="90"><net_src comp="81" pin="1"/><net_sink comp="85" pin=1"/></net>

<net id="91"><net_src comp="85" pin="2"/><net_sink comp="54" pin=1"/></net>

<net id="95"><net_src comp="85" pin="2"/><net_sink comp="92" pin=0"/></net>

<net id="96"><net_src comp="92" pin="1"/><net_sink comp="61" pin=1"/></net>

<net id="97"><net_src comp="92" pin="1"/><net_sink comp="54" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: mem | {1 2 3 4 5 6 7 }
 - Input state : 
	Port: global_graph_prediction : mem | {}
	Port: global_graph_prediction : d_out | {1 }
  - Chain level:
	State 1
		sext_ln413 : 1
		mem_addr : 2
		mem_addr_req : 3
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------------|
| Operation|     Functional Unit     |
|----------|-------------------------|
|   read   |  d_out_read_read_fu_48  |
|----------|-------------------------|
| writeresp|   grp_writeresp_fu_54   |
|----------|-------------------------|
|   write  | write_ln727_write_fu_61 |
|----------|-------------------------|
|partselect|      trunc_ln_fu_71     |
|----------|-------------------------|
|   sext   |     sext_ln413_fu_81    |
|----------|-------------------------|
|   Total  |                         |
|----------|-------------------------|

Memories:
N/A

* Register list:
+---------------+--------+
|               |   FF   |
+---------------+--------+
|mem_addr_reg_92|   32   |
+---------------+--------+
|     Total     |   32   |
+---------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_54 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_54 |  p1  |   2  |  32  |   64   ||    9    |
|---------------------|------|------|------|--------||---------||---------|
|        Total        |      |      |      |   66   ||  0.774  ||    9    |
|---------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    -   |    -   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    0   |    -   |    9   |
|  Register |    -   |   32   |    -   |
+-----------+--------+--------+--------+
|   Total   |    0   |   32   |    9   |
+-----------+--------+--------+--------+
