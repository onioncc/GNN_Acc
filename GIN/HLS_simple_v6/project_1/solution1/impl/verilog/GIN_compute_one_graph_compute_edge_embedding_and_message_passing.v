// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GIN_compute_one_graph_compute_edge_embedding_and_message_passing (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        message_V_address0,
        message_V_ce0,
        message_V_q0,
        message_V_address1,
        message_V_ce1,
        message_V_we1,
        message_V_d1,
        edge_list_address0,
        edge_list_ce0,
        edge_list_q0,
        edge_list_address1,
        edge_list_ce1,
        edge_list_q1,
        node_embedding_V_0_address0,
        node_embedding_V_0_ce0,
        node_embedding_V_0_q0,
        node_embedding_V_1_address0,
        node_embedding_V_1_ce0,
        node_embedding_V_1_q0,
        node_embedding_V_2_address0,
        node_embedding_V_2_ce0,
        node_embedding_V_2_q0,
        node_embedding_V_3_address0,
        node_embedding_V_3_ce0,
        node_embedding_V_3_q0,
        node_embedding_V_4_address0,
        node_embedding_V_4_ce0,
        node_embedding_V_4_q0,
        node_embedding_V_5_address0,
        node_embedding_V_5_ce0,
        node_embedding_V_5_q0,
        node_embedding_V_6_address0,
        node_embedding_V_6_ce0,
        node_embedding_V_6_q0,
        node_embedding_V_7_address0,
        node_embedding_V_7_ce0,
        node_embedding_V_7_q0,
        node_embedding_V_8_address0,
        node_embedding_V_8_ce0,
        node_embedding_V_8_q0,
        node_embedding_V_9_address0,
        node_embedding_V_9_ce0,
        node_embedding_V_9_q0,
        node_embedding_V_10_address0,
        node_embedding_V_10_ce0,
        node_embedding_V_10_q0,
        node_embedding_V_11_address0,
        node_embedding_V_11_ce0,
        node_embedding_V_11_q0,
        node_embedding_V_12_address0,
        node_embedding_V_12_ce0,
        node_embedding_V_12_q0,
        node_embedding_V_13_address0,
        node_embedding_V_13_ce0,
        node_embedding_V_13_q0,
        node_embedding_V_14_address0,
        node_embedding_V_14_ce0,
        node_embedding_V_14_q0,
        node_embedding_V_15_address0,
        node_embedding_V_15_ce0,
        node_embedding_V_15_q0,
        node_embedding_V_16_address0,
        node_embedding_V_16_ce0,
        node_embedding_V_16_q0,
        node_embedding_V_17_address0,
        node_embedding_V_17_ce0,
        node_embedding_V_17_q0,
        node_embedding_V_18_address0,
        node_embedding_V_18_ce0,
        node_embedding_V_18_q0,
        node_embedding_V_19_address0,
        node_embedding_V_19_ce0,
        node_embedding_V_19_q0,
        node_embedding_V_20_address0,
        node_embedding_V_20_ce0,
        node_embedding_V_20_q0,
        node_embedding_V_21_address0,
        node_embedding_V_21_ce0,
        node_embedding_V_21_q0,
        node_embedding_V_22_address0,
        node_embedding_V_22_ce0,
        node_embedding_V_22_q0,
        node_embedding_V_23_address0,
        node_embedding_V_23_ce0,
        node_embedding_V_23_q0,
        node_embedding_V_24_address0,
        node_embedding_V_24_ce0,
        node_embedding_V_24_q0,
        node_embedding_V_25_address0,
        node_embedding_V_25_ce0,
        node_embedding_V_25_q0,
        node_embedding_V_26_address0,
        node_embedding_V_26_ce0,
        node_embedding_V_26_q0,
        node_embedding_V_27_address0,
        node_embedding_V_27_ce0,
        node_embedding_V_27_q0,
        node_embedding_V_28_address0,
        node_embedding_V_28_ce0,
        node_embedding_V_28_q0,
        node_embedding_V_29_address0,
        node_embedding_V_29_ce0,
        node_embedding_V_29_q0,
        node_embedding_V_30_address0,
        node_embedding_V_30_ce0,
        node_embedding_V_30_q0,
        node_embedding_V_31_address0,
        node_embedding_V_31_ce0,
        node_embedding_V_31_q0,
        node_embedding_V_32_address0,
        node_embedding_V_32_ce0,
        node_embedding_V_32_q0,
        node_embedding_V_33_address0,
        node_embedding_V_33_ce0,
        node_embedding_V_33_q0,
        node_embedding_V_34_address0,
        node_embedding_V_34_ce0,
        node_embedding_V_34_q0,
        node_embedding_V_35_address0,
        node_embedding_V_35_ce0,
        node_embedding_V_35_q0,
        node_embedding_V_36_address0,
        node_embedding_V_36_ce0,
        node_embedding_V_36_q0,
        node_embedding_V_37_address0,
        node_embedding_V_37_ce0,
        node_embedding_V_37_q0,
        node_embedding_V_38_address0,
        node_embedding_V_38_ce0,
        node_embedding_V_38_q0,
        node_embedding_V_39_address0,
        node_embedding_V_39_ce0,
        node_embedding_V_39_q0,
        node_embedding_V_40_address0,
        node_embedding_V_40_ce0,
        node_embedding_V_40_q0,
        node_embedding_V_41_address0,
        node_embedding_V_41_ce0,
        node_embedding_V_41_q0,
        node_embedding_V_42_address0,
        node_embedding_V_42_ce0,
        node_embedding_V_42_q0,
        node_embedding_V_43_address0,
        node_embedding_V_43_ce0,
        node_embedding_V_43_q0,
        node_embedding_V_44_address0,
        node_embedding_V_44_ce0,
        node_embedding_V_44_q0,
        node_embedding_V_45_address0,
        node_embedding_V_45_ce0,
        node_embedding_V_45_q0,
        node_embedding_V_46_address0,
        node_embedding_V_46_ce0,
        node_embedding_V_46_q0,
        node_embedding_V_47_address0,
        node_embedding_V_47_ce0,
        node_embedding_V_47_q0,
        node_embedding_V_48_address0,
        node_embedding_V_48_ce0,
        node_embedding_V_48_q0,
        node_embedding_V_49_address0,
        node_embedding_V_49_ce0,
        node_embedding_V_49_q0,
        node_embedding_V_50_address0,
        node_embedding_V_50_ce0,
        node_embedding_V_50_q0,
        node_embedding_V_51_address0,
        node_embedding_V_51_ce0,
        node_embedding_V_51_q0,
        node_embedding_V_52_address0,
        node_embedding_V_52_ce0,
        node_embedding_V_52_q0,
        node_embedding_V_53_address0,
        node_embedding_V_53_ce0,
        node_embedding_V_53_q0,
        node_embedding_V_54_address0,
        node_embedding_V_54_ce0,
        node_embedding_V_54_q0,
        node_embedding_V_55_address0,
        node_embedding_V_55_ce0,
        node_embedding_V_55_q0,
        node_embedding_V_56_address0,
        node_embedding_V_56_ce0,
        node_embedding_V_56_q0,
        node_embedding_V_57_address0,
        node_embedding_V_57_ce0,
        node_embedding_V_57_q0,
        node_embedding_V_58_address0,
        node_embedding_V_58_ce0,
        node_embedding_V_58_q0,
        node_embedding_V_59_address0,
        node_embedding_V_59_ce0,
        node_embedding_V_59_q0,
        node_embedding_V_60_address0,
        node_embedding_V_60_ce0,
        node_embedding_V_60_q0,
        node_embedding_V_61_address0,
        node_embedding_V_61_ce0,
        node_embedding_V_61_q0,
        node_embedding_V_62_address0,
        node_embedding_V_62_ce0,
        node_embedding_V_62_q0,
        node_embedding_V_63_address0,
        node_embedding_V_63_ce0,
        node_embedding_V_63_q0,
        node_embedding_V_64_address0,
        node_embedding_V_64_ce0,
        node_embedding_V_64_q0,
        node_embedding_V_65_address0,
        node_embedding_V_65_ce0,
        node_embedding_V_65_q0,
        node_embedding_V_66_address0,
        node_embedding_V_66_ce0,
        node_embedding_V_66_q0,
        node_embedding_V_67_address0,
        node_embedding_V_67_ce0,
        node_embedding_V_67_q0,
        node_embedding_V_68_address0,
        node_embedding_V_68_ce0,
        node_embedding_V_68_q0,
        node_embedding_V_69_address0,
        node_embedding_V_69_ce0,
        node_embedding_V_69_q0,
        node_embedding_V_70_address0,
        node_embedding_V_70_ce0,
        node_embedding_V_70_q0,
        node_embedding_V_71_address0,
        node_embedding_V_71_ce0,
        node_embedding_V_71_q0,
        node_embedding_V_72_address0,
        node_embedding_V_72_ce0,
        node_embedding_V_72_q0,
        node_embedding_V_73_address0,
        node_embedding_V_73_ce0,
        node_embedding_V_73_q0,
        node_embedding_V_74_address0,
        node_embedding_V_74_ce0,
        node_embedding_V_74_q0,
        node_embedding_V_75_address0,
        node_embedding_V_75_ce0,
        node_embedding_V_75_q0,
        node_embedding_V_76_address0,
        node_embedding_V_76_ce0,
        node_embedding_V_76_q0,
        node_embedding_V_77_address0,
        node_embedding_V_77_ce0,
        node_embedding_V_77_q0,
        node_embedding_V_78_address0,
        node_embedding_V_78_ce0,
        node_embedding_V_78_q0,
        node_embedding_V_79_address0,
        node_embedding_V_79_ce0,
        node_embedding_V_79_q0,
        node_embedding_V_80_address0,
        node_embedding_V_80_ce0,
        node_embedding_V_80_q0,
        node_embedding_V_81_address0,
        node_embedding_V_81_ce0,
        node_embedding_V_81_q0,
        node_embedding_V_82_address0,
        node_embedding_V_82_ce0,
        node_embedding_V_82_q0,
        node_embedding_V_83_address0,
        node_embedding_V_83_ce0,
        node_embedding_V_83_q0,
        node_embedding_V_84_address0,
        node_embedding_V_84_ce0,
        node_embedding_V_84_q0,
        node_embedding_V_85_address0,
        node_embedding_V_85_ce0,
        node_embedding_V_85_q0,
        node_embedding_V_86_address0,
        node_embedding_V_86_ce0,
        node_embedding_V_86_q0,
        node_embedding_V_87_address0,
        node_embedding_V_87_ce0,
        node_embedding_V_87_q0,
        node_embedding_V_88_address0,
        node_embedding_V_88_ce0,
        node_embedding_V_88_q0,
        node_embedding_V_89_address0,
        node_embedding_V_89_ce0,
        node_embedding_V_89_q0,
        node_embedding_V_90_address0,
        node_embedding_V_90_ce0,
        node_embedding_V_90_q0,
        node_embedding_V_91_address0,
        node_embedding_V_91_ce0,
        node_embedding_V_91_q0,
        node_embedding_V_92_address0,
        node_embedding_V_92_ce0,
        node_embedding_V_92_q0,
        node_embedding_V_93_address0,
        node_embedding_V_93_ce0,
        node_embedding_V_93_q0,
        node_embedding_V_94_address0,
        node_embedding_V_94_ce0,
        node_embedding_V_94_q0,
        node_embedding_V_95_address0,
        node_embedding_V_95_ce0,
        node_embedding_V_95_q0,
        node_embedding_V_96_address0,
        node_embedding_V_96_ce0,
        node_embedding_V_96_q0,
        node_embedding_V_97_address0,
        node_embedding_V_97_ce0,
        node_embedding_V_97_q0,
        node_embedding_V_98_address0,
        node_embedding_V_98_ce0,
        node_embedding_V_98_q0,
        node_embedding_V_99_address0,
        node_embedding_V_99_ce0,
        node_embedding_V_99_q0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] message_V_address0;
output   message_V_ce0;
input  [27:0] message_V_q0;
output  [14:0] message_V_address1;
output   message_V_ce1;
output   message_V_we1;
output  [27:0] message_V_d1;
output  [9:0] edge_list_address0;
output   edge_list_ce0;
input  [31:0] edge_list_q0;
output  [9:0] edge_list_address1;
output   edge_list_ce1;
input  [31:0] edge_list_q1;
output  [7:0] node_embedding_V_0_address0;
output   node_embedding_V_0_ce0;
input  [27:0] node_embedding_V_0_q0;
output  [7:0] node_embedding_V_1_address0;
output   node_embedding_V_1_ce0;
input  [27:0] node_embedding_V_1_q0;
output  [7:0] node_embedding_V_2_address0;
output   node_embedding_V_2_ce0;
input  [27:0] node_embedding_V_2_q0;
output  [7:0] node_embedding_V_3_address0;
output   node_embedding_V_3_ce0;
input  [27:0] node_embedding_V_3_q0;
output  [7:0] node_embedding_V_4_address0;
output   node_embedding_V_4_ce0;
input  [27:0] node_embedding_V_4_q0;
output  [7:0] node_embedding_V_5_address0;
output   node_embedding_V_5_ce0;
input  [27:0] node_embedding_V_5_q0;
output  [7:0] node_embedding_V_6_address0;
output   node_embedding_V_6_ce0;
input  [27:0] node_embedding_V_6_q0;
output  [7:0] node_embedding_V_7_address0;
output   node_embedding_V_7_ce0;
input  [27:0] node_embedding_V_7_q0;
output  [7:0] node_embedding_V_8_address0;
output   node_embedding_V_8_ce0;
input  [27:0] node_embedding_V_8_q0;
output  [7:0] node_embedding_V_9_address0;
output   node_embedding_V_9_ce0;
input  [27:0] node_embedding_V_9_q0;
output  [7:0] node_embedding_V_10_address0;
output   node_embedding_V_10_ce0;
input  [27:0] node_embedding_V_10_q0;
output  [7:0] node_embedding_V_11_address0;
output   node_embedding_V_11_ce0;
input  [27:0] node_embedding_V_11_q0;
output  [7:0] node_embedding_V_12_address0;
output   node_embedding_V_12_ce0;
input  [27:0] node_embedding_V_12_q0;
output  [7:0] node_embedding_V_13_address0;
output   node_embedding_V_13_ce0;
input  [27:0] node_embedding_V_13_q0;
output  [7:0] node_embedding_V_14_address0;
output   node_embedding_V_14_ce0;
input  [27:0] node_embedding_V_14_q0;
output  [7:0] node_embedding_V_15_address0;
output   node_embedding_V_15_ce0;
input  [27:0] node_embedding_V_15_q0;
output  [7:0] node_embedding_V_16_address0;
output   node_embedding_V_16_ce0;
input  [27:0] node_embedding_V_16_q0;
output  [7:0] node_embedding_V_17_address0;
output   node_embedding_V_17_ce0;
input  [27:0] node_embedding_V_17_q0;
output  [7:0] node_embedding_V_18_address0;
output   node_embedding_V_18_ce0;
input  [27:0] node_embedding_V_18_q0;
output  [7:0] node_embedding_V_19_address0;
output   node_embedding_V_19_ce0;
input  [27:0] node_embedding_V_19_q0;
output  [7:0] node_embedding_V_20_address0;
output   node_embedding_V_20_ce0;
input  [27:0] node_embedding_V_20_q0;
output  [7:0] node_embedding_V_21_address0;
output   node_embedding_V_21_ce0;
input  [27:0] node_embedding_V_21_q0;
output  [7:0] node_embedding_V_22_address0;
output   node_embedding_V_22_ce0;
input  [27:0] node_embedding_V_22_q0;
output  [7:0] node_embedding_V_23_address0;
output   node_embedding_V_23_ce0;
input  [27:0] node_embedding_V_23_q0;
output  [7:0] node_embedding_V_24_address0;
output   node_embedding_V_24_ce0;
input  [27:0] node_embedding_V_24_q0;
output  [7:0] node_embedding_V_25_address0;
output   node_embedding_V_25_ce0;
input  [27:0] node_embedding_V_25_q0;
output  [7:0] node_embedding_V_26_address0;
output   node_embedding_V_26_ce0;
input  [27:0] node_embedding_V_26_q0;
output  [7:0] node_embedding_V_27_address0;
output   node_embedding_V_27_ce0;
input  [27:0] node_embedding_V_27_q0;
output  [7:0] node_embedding_V_28_address0;
output   node_embedding_V_28_ce0;
input  [27:0] node_embedding_V_28_q0;
output  [7:0] node_embedding_V_29_address0;
output   node_embedding_V_29_ce0;
input  [27:0] node_embedding_V_29_q0;
output  [7:0] node_embedding_V_30_address0;
output   node_embedding_V_30_ce0;
input  [27:0] node_embedding_V_30_q0;
output  [7:0] node_embedding_V_31_address0;
output   node_embedding_V_31_ce0;
input  [27:0] node_embedding_V_31_q0;
output  [7:0] node_embedding_V_32_address0;
output   node_embedding_V_32_ce0;
input  [27:0] node_embedding_V_32_q0;
output  [7:0] node_embedding_V_33_address0;
output   node_embedding_V_33_ce0;
input  [27:0] node_embedding_V_33_q0;
output  [7:0] node_embedding_V_34_address0;
output   node_embedding_V_34_ce0;
input  [27:0] node_embedding_V_34_q0;
output  [7:0] node_embedding_V_35_address0;
output   node_embedding_V_35_ce0;
input  [27:0] node_embedding_V_35_q0;
output  [7:0] node_embedding_V_36_address0;
output   node_embedding_V_36_ce0;
input  [27:0] node_embedding_V_36_q0;
output  [7:0] node_embedding_V_37_address0;
output   node_embedding_V_37_ce0;
input  [27:0] node_embedding_V_37_q0;
output  [7:0] node_embedding_V_38_address0;
output   node_embedding_V_38_ce0;
input  [27:0] node_embedding_V_38_q0;
output  [7:0] node_embedding_V_39_address0;
output   node_embedding_V_39_ce0;
input  [27:0] node_embedding_V_39_q0;
output  [7:0] node_embedding_V_40_address0;
output   node_embedding_V_40_ce0;
input  [27:0] node_embedding_V_40_q0;
output  [7:0] node_embedding_V_41_address0;
output   node_embedding_V_41_ce0;
input  [27:0] node_embedding_V_41_q0;
output  [7:0] node_embedding_V_42_address0;
output   node_embedding_V_42_ce0;
input  [27:0] node_embedding_V_42_q0;
output  [7:0] node_embedding_V_43_address0;
output   node_embedding_V_43_ce0;
input  [27:0] node_embedding_V_43_q0;
output  [7:0] node_embedding_V_44_address0;
output   node_embedding_V_44_ce0;
input  [27:0] node_embedding_V_44_q0;
output  [7:0] node_embedding_V_45_address0;
output   node_embedding_V_45_ce0;
input  [27:0] node_embedding_V_45_q0;
output  [7:0] node_embedding_V_46_address0;
output   node_embedding_V_46_ce0;
input  [27:0] node_embedding_V_46_q0;
output  [7:0] node_embedding_V_47_address0;
output   node_embedding_V_47_ce0;
input  [27:0] node_embedding_V_47_q0;
output  [7:0] node_embedding_V_48_address0;
output   node_embedding_V_48_ce0;
input  [27:0] node_embedding_V_48_q0;
output  [7:0] node_embedding_V_49_address0;
output   node_embedding_V_49_ce0;
input  [27:0] node_embedding_V_49_q0;
output  [7:0] node_embedding_V_50_address0;
output   node_embedding_V_50_ce0;
input  [27:0] node_embedding_V_50_q0;
output  [7:0] node_embedding_V_51_address0;
output   node_embedding_V_51_ce0;
input  [27:0] node_embedding_V_51_q0;
output  [7:0] node_embedding_V_52_address0;
output   node_embedding_V_52_ce0;
input  [27:0] node_embedding_V_52_q0;
output  [7:0] node_embedding_V_53_address0;
output   node_embedding_V_53_ce0;
input  [27:0] node_embedding_V_53_q0;
output  [7:0] node_embedding_V_54_address0;
output   node_embedding_V_54_ce0;
input  [27:0] node_embedding_V_54_q0;
output  [7:0] node_embedding_V_55_address0;
output   node_embedding_V_55_ce0;
input  [27:0] node_embedding_V_55_q0;
output  [7:0] node_embedding_V_56_address0;
output   node_embedding_V_56_ce0;
input  [27:0] node_embedding_V_56_q0;
output  [7:0] node_embedding_V_57_address0;
output   node_embedding_V_57_ce0;
input  [27:0] node_embedding_V_57_q0;
output  [7:0] node_embedding_V_58_address0;
output   node_embedding_V_58_ce0;
input  [27:0] node_embedding_V_58_q0;
output  [7:0] node_embedding_V_59_address0;
output   node_embedding_V_59_ce0;
input  [27:0] node_embedding_V_59_q0;
output  [7:0] node_embedding_V_60_address0;
output   node_embedding_V_60_ce0;
input  [27:0] node_embedding_V_60_q0;
output  [7:0] node_embedding_V_61_address0;
output   node_embedding_V_61_ce0;
input  [27:0] node_embedding_V_61_q0;
output  [7:0] node_embedding_V_62_address0;
output   node_embedding_V_62_ce0;
input  [27:0] node_embedding_V_62_q0;
output  [7:0] node_embedding_V_63_address0;
output   node_embedding_V_63_ce0;
input  [27:0] node_embedding_V_63_q0;
output  [7:0] node_embedding_V_64_address0;
output   node_embedding_V_64_ce0;
input  [27:0] node_embedding_V_64_q0;
output  [7:0] node_embedding_V_65_address0;
output   node_embedding_V_65_ce0;
input  [27:0] node_embedding_V_65_q0;
output  [7:0] node_embedding_V_66_address0;
output   node_embedding_V_66_ce0;
input  [27:0] node_embedding_V_66_q0;
output  [7:0] node_embedding_V_67_address0;
output   node_embedding_V_67_ce0;
input  [27:0] node_embedding_V_67_q0;
output  [7:0] node_embedding_V_68_address0;
output   node_embedding_V_68_ce0;
input  [27:0] node_embedding_V_68_q0;
output  [7:0] node_embedding_V_69_address0;
output   node_embedding_V_69_ce0;
input  [27:0] node_embedding_V_69_q0;
output  [7:0] node_embedding_V_70_address0;
output   node_embedding_V_70_ce0;
input  [27:0] node_embedding_V_70_q0;
output  [7:0] node_embedding_V_71_address0;
output   node_embedding_V_71_ce0;
input  [27:0] node_embedding_V_71_q0;
output  [7:0] node_embedding_V_72_address0;
output   node_embedding_V_72_ce0;
input  [27:0] node_embedding_V_72_q0;
output  [7:0] node_embedding_V_73_address0;
output   node_embedding_V_73_ce0;
input  [27:0] node_embedding_V_73_q0;
output  [7:0] node_embedding_V_74_address0;
output   node_embedding_V_74_ce0;
input  [27:0] node_embedding_V_74_q0;
output  [7:0] node_embedding_V_75_address0;
output   node_embedding_V_75_ce0;
input  [27:0] node_embedding_V_75_q0;
output  [7:0] node_embedding_V_76_address0;
output   node_embedding_V_76_ce0;
input  [27:0] node_embedding_V_76_q0;
output  [7:0] node_embedding_V_77_address0;
output   node_embedding_V_77_ce0;
input  [27:0] node_embedding_V_77_q0;
output  [7:0] node_embedding_V_78_address0;
output   node_embedding_V_78_ce0;
input  [27:0] node_embedding_V_78_q0;
output  [7:0] node_embedding_V_79_address0;
output   node_embedding_V_79_ce0;
input  [27:0] node_embedding_V_79_q0;
output  [7:0] node_embedding_V_80_address0;
output   node_embedding_V_80_ce0;
input  [27:0] node_embedding_V_80_q0;
output  [7:0] node_embedding_V_81_address0;
output   node_embedding_V_81_ce0;
input  [27:0] node_embedding_V_81_q0;
output  [7:0] node_embedding_V_82_address0;
output   node_embedding_V_82_ce0;
input  [27:0] node_embedding_V_82_q0;
output  [7:0] node_embedding_V_83_address0;
output   node_embedding_V_83_ce0;
input  [27:0] node_embedding_V_83_q0;
output  [7:0] node_embedding_V_84_address0;
output   node_embedding_V_84_ce0;
input  [27:0] node_embedding_V_84_q0;
output  [7:0] node_embedding_V_85_address0;
output   node_embedding_V_85_ce0;
input  [27:0] node_embedding_V_85_q0;
output  [7:0] node_embedding_V_86_address0;
output   node_embedding_V_86_ce0;
input  [27:0] node_embedding_V_86_q0;
output  [7:0] node_embedding_V_87_address0;
output   node_embedding_V_87_ce0;
input  [27:0] node_embedding_V_87_q0;
output  [7:0] node_embedding_V_88_address0;
output   node_embedding_V_88_ce0;
input  [27:0] node_embedding_V_88_q0;
output  [7:0] node_embedding_V_89_address0;
output   node_embedding_V_89_ce0;
input  [27:0] node_embedding_V_89_q0;
output  [7:0] node_embedding_V_90_address0;
output   node_embedding_V_90_ce0;
input  [27:0] node_embedding_V_90_q0;
output  [7:0] node_embedding_V_91_address0;
output   node_embedding_V_91_ce0;
input  [27:0] node_embedding_V_91_q0;
output  [7:0] node_embedding_V_92_address0;
output   node_embedding_V_92_ce0;
input  [27:0] node_embedding_V_92_q0;
output  [7:0] node_embedding_V_93_address0;
output   node_embedding_V_93_ce0;
input  [27:0] node_embedding_V_93_q0;
output  [7:0] node_embedding_V_94_address0;
output   node_embedding_V_94_ce0;
input  [27:0] node_embedding_V_94_q0;
output  [7:0] node_embedding_V_95_address0;
output   node_embedding_V_95_ce0;
input  [27:0] node_embedding_V_95_q0;
output  [7:0] node_embedding_V_96_address0;
output   node_embedding_V_96_ce0;
input  [27:0] node_embedding_V_96_q0;
output  [7:0] node_embedding_V_97_address0;
output   node_embedding_V_97_ce0;
input  [27:0] node_embedding_V_97_q0;
output  [7:0] node_embedding_V_98_address0;
output   node_embedding_V_98_ce0;
input  [27:0] node_embedding_V_98_q0;
output  [7:0] node_embedding_V_99_address0;
output   node_embedding_V_99_ce0;
input  [27:0] node_embedding_V_99_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg message_V_ce0;
reg[14:0] message_V_address1;
reg message_V_ce1;
reg message_V_we1;
reg[27:0] message_V_d1;
reg[9:0] edge_list_address0;
reg edge_list_ce0;
reg edge_list_ce1;
reg node_embedding_V_0_ce0;
reg node_embedding_V_1_ce0;
reg node_embedding_V_2_ce0;
reg node_embedding_V_3_ce0;
reg node_embedding_V_4_ce0;
reg node_embedding_V_5_ce0;
reg node_embedding_V_6_ce0;
reg node_embedding_V_7_ce0;
reg node_embedding_V_8_ce0;
reg node_embedding_V_9_ce0;
reg node_embedding_V_10_ce0;
reg node_embedding_V_11_ce0;
reg node_embedding_V_12_ce0;
reg node_embedding_V_13_ce0;
reg node_embedding_V_14_ce0;
reg node_embedding_V_15_ce0;
reg node_embedding_V_16_ce0;
reg node_embedding_V_17_ce0;
reg node_embedding_V_18_ce0;
reg node_embedding_V_19_ce0;
reg node_embedding_V_20_ce0;
reg node_embedding_V_21_ce0;
reg node_embedding_V_22_ce0;
reg node_embedding_V_23_ce0;
reg node_embedding_V_24_ce0;
reg node_embedding_V_25_ce0;
reg node_embedding_V_26_ce0;
reg node_embedding_V_27_ce0;
reg node_embedding_V_28_ce0;
reg node_embedding_V_29_ce0;
reg node_embedding_V_30_ce0;
reg node_embedding_V_31_ce0;
reg node_embedding_V_32_ce0;
reg node_embedding_V_33_ce0;
reg node_embedding_V_34_ce0;
reg node_embedding_V_35_ce0;
reg node_embedding_V_36_ce0;
reg node_embedding_V_37_ce0;
reg node_embedding_V_38_ce0;
reg node_embedding_V_39_ce0;
reg node_embedding_V_40_ce0;
reg node_embedding_V_41_ce0;
reg node_embedding_V_42_ce0;
reg node_embedding_V_43_ce0;
reg node_embedding_V_44_ce0;
reg node_embedding_V_45_ce0;
reg node_embedding_V_46_ce0;
reg node_embedding_V_47_ce0;
reg node_embedding_V_48_ce0;
reg node_embedding_V_49_ce0;
reg node_embedding_V_50_ce0;
reg node_embedding_V_51_ce0;
reg node_embedding_V_52_ce0;
reg node_embedding_V_53_ce0;
reg node_embedding_V_54_ce0;
reg node_embedding_V_55_ce0;
reg node_embedding_V_56_ce0;
reg node_embedding_V_57_ce0;
reg node_embedding_V_58_ce0;
reg node_embedding_V_59_ce0;
reg node_embedding_V_60_ce0;
reg node_embedding_V_61_ce0;
reg node_embedding_V_62_ce0;
reg node_embedding_V_63_ce0;
reg node_embedding_V_64_ce0;
reg node_embedding_V_65_ce0;
reg node_embedding_V_66_ce0;
reg node_embedding_V_67_ce0;
reg node_embedding_V_68_ce0;
reg node_embedding_V_69_ce0;
reg node_embedding_V_70_ce0;
reg node_embedding_V_71_ce0;
reg node_embedding_V_72_ce0;
reg node_embedding_V_73_ce0;
reg node_embedding_V_74_ce0;
reg node_embedding_V_75_ce0;
reg node_embedding_V_76_ce0;
reg node_embedding_V_77_ce0;
reg node_embedding_V_78_ce0;
reg node_embedding_V_79_ce0;
reg node_embedding_V_80_ce0;
reg node_embedding_V_81_ce0;
reg node_embedding_V_82_ce0;
reg node_embedding_V_83_ce0;
reg node_embedding_V_84_ce0;
reg node_embedding_V_85_ce0;
reg node_embedding_V_86_ce0;
reg node_embedding_V_87_ce0;
reg node_embedding_V_88_ce0;
reg node_embedding_V_89_ce0;
reg node_embedding_V_90_ce0;
reg node_embedding_V_91_ce0;
reg node_embedding_V_92_ce0;
reg node_embedding_V_93_ce0;
reg node_embedding_V_94_ce0;
reg node_embedding_V_95_ce0;
reg node_embedding_V_96_ce0;
reg node_embedding_V_97_ce0;
reg node_embedding_V_98_ce0;
reg node_embedding_V_99_ce0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [11:0] indvar_flatten_reg_1654;
reg   [5:0] e_reg_1665;
reg   [6:0] dim_reg_1676;
wire   [10:0] empty_46_fu_1687_p2;
wire    ap_CS_fsm_state2;
wire   [11:0] add_ln195_1_fu_1704_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
wire    ap_block_state7_pp1_stage0_iter3;
wire    ap_block_state8_pp1_stage0_iter4;
wire    ap_block_state9_pp1_stage0_iter5;
wire    ap_block_pp1_stage0_11001;
wire   [6:0] shl_ln_fu_1710_p3;
reg   [6:0] shl_ln_reg_2181;
reg   [6:0] shl_ln_reg_2181_pp1_iter1_reg;
reg   [6:0] shl_ln_reg_2181_pp1_iter2_reg;
wire   [0:0] icmp_ln195_fu_1718_p2;
reg   [0:0] icmp_ln195_reg_2186;
reg   [0:0] icmp_ln195_reg_2186_pp1_iter1_reg;
reg   [0:0] icmp_ln195_reg_2186_pp1_iter2_reg;
reg   [0:0] icmp_ln195_reg_2186_pp1_iter3_reg;
reg   [0:0] icmp_ln195_reg_2186_pp1_iter4_reg;
wire   [0:0] icmp_ln199_fu_1730_p2;
reg   [0:0] icmp_ln199_reg_2190;
reg   [0:0] icmp_ln199_reg_2190_pp1_iter1_reg;
reg   [0:0] icmp_ln199_reg_2190_pp1_iter2_reg;
reg   [0:0] icmp_ln199_reg_2190_pp1_iter3_reg;
wire   [6:0] select_ln195_fu_1736_p3;
reg   [6:0] select_ln195_reg_2195;
reg   [6:0] select_ln195_reg_2195_pp1_iter1_reg;
reg   [6:0] select_ln195_reg_2195_pp1_iter2_reg;
reg   [6:0] select_ln195_reg_2195_pp1_iter3_reg;
reg   [6:0] select_ln195_reg_2195_pp1_iter4_reg;
wire   [6:0] shl_ln196_mid1_fu_1744_p3;
reg   [6:0] shl_ln196_mid1_reg_2201;
reg   [6:0] shl_ln196_mid1_reg_2201_pp1_iter1_reg;
reg   [6:0] shl_ln196_mid1_reg_2201_pp1_iter2_reg;
wire   [5:0] select_ln195_4_fu_1771_p3;
wire   [6:0] add_ln199_fu_1779_p2;
reg   [14:0] message_V_addr_1_reg_2741;
wire    ap_CS_fsm_state3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_condition_pp1_exit_iter4_state8;
reg    ap_enable_reg_pp1_iter5;
reg   [10:0] empty_reg_1643;
wire   [0:0] exitcond2107_fu_1693_p2;
wire   [63:0] p_cast1_fu_1699_p1;
wire   [63:0] zext_ln195_fu_1766_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln196_fu_1789_p1;
wire   [63:0] zext_ln196_1_fu_1793_p1;
wire   [63:0] zext_ln195_1_fu_1815_p1;
wire   [63:0] zext_ln703_1_fu_1919_p1;
wire   [27:0] add_ln703_fu_2152_p2;
wire   [5:0] add_ln195_fu_1724_p2;
wire   [6:0] select_ln195_1_fu_1752_p3;
wire   [6:0] or_ln195_fu_1760_p2;
wire   [7:0] trunc_ln195_fu_1800_p1;
wire   [7:0] trunc_ln195_1_fu_1804_p1;
wire   [7:0] select_ln195_3_fu_1808_p3;
wire  signed [14:0] grp_fu_2159_p3;
wire   [27:0] msg_V_fu_1923_p102;
wire   [0:0] tmp_fu_2132_p3;
wire   [26:0] trunc_ln211_fu_2128_p1;
wire   [26:0] msg_V_1_fu_2140_p3;
wire   [27:0] zext_ln211_fu_2148_p1;
wire  signed [14:0] grp_fu_2159_p0;
wire   [7:0] grp_fu_2159_p1;
wire   [6:0] grp_fu_2159_p2;
wire    ap_CS_fsm_state10;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [14:0] grp_fu_2159_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
end

GIN_compute_one_graph_mux_1007_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 28 ),
    .din2_WIDTH( 28 ),
    .din3_WIDTH( 28 ),
    .din4_WIDTH( 28 ),
    .din5_WIDTH( 28 ),
    .din6_WIDTH( 28 ),
    .din7_WIDTH( 28 ),
    .din8_WIDTH( 28 ),
    .din9_WIDTH( 28 ),
    .din10_WIDTH( 28 ),
    .din11_WIDTH( 28 ),
    .din12_WIDTH( 28 ),
    .din13_WIDTH( 28 ),
    .din14_WIDTH( 28 ),
    .din15_WIDTH( 28 ),
    .din16_WIDTH( 28 ),
    .din17_WIDTH( 28 ),
    .din18_WIDTH( 28 ),
    .din19_WIDTH( 28 ),
    .din20_WIDTH( 28 ),
    .din21_WIDTH( 28 ),
    .din22_WIDTH( 28 ),
    .din23_WIDTH( 28 ),
    .din24_WIDTH( 28 ),
    .din25_WIDTH( 28 ),
    .din26_WIDTH( 28 ),
    .din27_WIDTH( 28 ),
    .din28_WIDTH( 28 ),
    .din29_WIDTH( 28 ),
    .din30_WIDTH( 28 ),
    .din31_WIDTH( 28 ),
    .din32_WIDTH( 28 ),
    .din33_WIDTH( 28 ),
    .din34_WIDTH( 28 ),
    .din35_WIDTH( 28 ),
    .din36_WIDTH( 28 ),
    .din37_WIDTH( 28 ),
    .din38_WIDTH( 28 ),
    .din39_WIDTH( 28 ),
    .din40_WIDTH( 28 ),
    .din41_WIDTH( 28 ),
    .din42_WIDTH( 28 ),
    .din43_WIDTH( 28 ),
    .din44_WIDTH( 28 ),
    .din45_WIDTH( 28 ),
    .din46_WIDTH( 28 ),
    .din47_WIDTH( 28 ),
    .din48_WIDTH( 28 ),
    .din49_WIDTH( 28 ),
    .din50_WIDTH( 28 ),
    .din51_WIDTH( 28 ),
    .din52_WIDTH( 28 ),
    .din53_WIDTH( 28 ),
    .din54_WIDTH( 28 ),
    .din55_WIDTH( 28 ),
    .din56_WIDTH( 28 ),
    .din57_WIDTH( 28 ),
    .din58_WIDTH( 28 ),
    .din59_WIDTH( 28 ),
    .din60_WIDTH( 28 ),
    .din61_WIDTH( 28 ),
    .din62_WIDTH( 28 ),
    .din63_WIDTH( 28 ),
    .din64_WIDTH( 28 ),
    .din65_WIDTH( 28 ),
    .din66_WIDTH( 28 ),
    .din67_WIDTH( 28 ),
    .din68_WIDTH( 28 ),
    .din69_WIDTH( 28 ),
    .din70_WIDTH( 28 ),
    .din71_WIDTH( 28 ),
    .din72_WIDTH( 28 ),
    .din73_WIDTH( 28 ),
    .din74_WIDTH( 28 ),
    .din75_WIDTH( 28 ),
    .din76_WIDTH( 28 ),
    .din77_WIDTH( 28 ),
    .din78_WIDTH( 28 ),
    .din79_WIDTH( 28 ),
    .din80_WIDTH( 28 ),
    .din81_WIDTH( 28 ),
    .din82_WIDTH( 28 ),
    .din83_WIDTH( 28 ),
    .din84_WIDTH( 28 ),
    .din85_WIDTH( 28 ),
    .din86_WIDTH( 28 ),
    .din87_WIDTH( 28 ),
    .din88_WIDTH( 28 ),
    .din89_WIDTH( 28 ),
    .din90_WIDTH( 28 ),
    .din91_WIDTH( 28 ),
    .din92_WIDTH( 28 ),
    .din93_WIDTH( 28 ),
    .din94_WIDTH( 28 ),
    .din95_WIDTH( 28 ),
    .din96_WIDTH( 28 ),
    .din97_WIDTH( 28 ),
    .din98_WIDTH( 28 ),
    .din99_WIDTH( 28 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 28 ))
mux_1007_28_1_1_U108(
    .din0(node_embedding_V_0_q0),
    .din1(node_embedding_V_1_q0),
    .din2(node_embedding_V_2_q0),
    .din3(node_embedding_V_3_q0),
    .din4(node_embedding_V_4_q0),
    .din5(node_embedding_V_5_q0),
    .din6(node_embedding_V_6_q0),
    .din7(node_embedding_V_7_q0),
    .din8(node_embedding_V_8_q0),
    .din9(node_embedding_V_9_q0),
    .din10(node_embedding_V_10_q0),
    .din11(node_embedding_V_11_q0),
    .din12(node_embedding_V_12_q0),
    .din13(node_embedding_V_13_q0),
    .din14(node_embedding_V_14_q0),
    .din15(node_embedding_V_15_q0),
    .din16(node_embedding_V_16_q0),
    .din17(node_embedding_V_17_q0),
    .din18(node_embedding_V_18_q0),
    .din19(node_embedding_V_19_q0),
    .din20(node_embedding_V_20_q0),
    .din21(node_embedding_V_21_q0),
    .din22(node_embedding_V_22_q0),
    .din23(node_embedding_V_23_q0),
    .din24(node_embedding_V_24_q0),
    .din25(node_embedding_V_25_q0),
    .din26(node_embedding_V_26_q0),
    .din27(node_embedding_V_27_q0),
    .din28(node_embedding_V_28_q0),
    .din29(node_embedding_V_29_q0),
    .din30(node_embedding_V_30_q0),
    .din31(node_embedding_V_31_q0),
    .din32(node_embedding_V_32_q0),
    .din33(node_embedding_V_33_q0),
    .din34(node_embedding_V_34_q0),
    .din35(node_embedding_V_35_q0),
    .din36(node_embedding_V_36_q0),
    .din37(node_embedding_V_37_q0),
    .din38(node_embedding_V_38_q0),
    .din39(node_embedding_V_39_q0),
    .din40(node_embedding_V_40_q0),
    .din41(node_embedding_V_41_q0),
    .din42(node_embedding_V_42_q0),
    .din43(node_embedding_V_43_q0),
    .din44(node_embedding_V_44_q0),
    .din45(node_embedding_V_45_q0),
    .din46(node_embedding_V_46_q0),
    .din47(node_embedding_V_47_q0),
    .din48(node_embedding_V_48_q0),
    .din49(node_embedding_V_49_q0),
    .din50(node_embedding_V_50_q0),
    .din51(node_embedding_V_51_q0),
    .din52(node_embedding_V_52_q0),
    .din53(node_embedding_V_53_q0),
    .din54(node_embedding_V_54_q0),
    .din55(node_embedding_V_55_q0),
    .din56(node_embedding_V_56_q0),
    .din57(node_embedding_V_57_q0),
    .din58(node_embedding_V_58_q0),
    .din59(node_embedding_V_59_q0),
    .din60(node_embedding_V_60_q0),
    .din61(node_embedding_V_61_q0),
    .din62(node_embedding_V_62_q0),
    .din63(node_embedding_V_63_q0),
    .din64(node_embedding_V_64_q0),
    .din65(node_embedding_V_65_q0),
    .din66(node_embedding_V_66_q0),
    .din67(node_embedding_V_67_q0),
    .din68(node_embedding_V_68_q0),
    .din69(node_embedding_V_69_q0),
    .din70(node_embedding_V_70_q0),
    .din71(node_embedding_V_71_q0),
    .din72(node_embedding_V_72_q0),
    .din73(node_embedding_V_73_q0),
    .din74(node_embedding_V_74_q0),
    .din75(node_embedding_V_75_q0),
    .din76(node_embedding_V_76_q0),
    .din77(node_embedding_V_77_q0),
    .din78(node_embedding_V_78_q0),
    .din79(node_embedding_V_79_q0),
    .din80(node_embedding_V_80_q0),
    .din81(node_embedding_V_81_q0),
    .din82(node_embedding_V_82_q0),
    .din83(node_embedding_V_83_q0),
    .din84(node_embedding_V_84_q0),
    .din85(node_embedding_V_85_q0),
    .din86(node_embedding_V_86_q0),
    .din87(node_embedding_V_87_q0),
    .din88(node_embedding_V_88_q0),
    .din89(node_embedding_V_89_q0),
    .din90(node_embedding_V_90_q0),
    .din91(node_embedding_V_91_q0),
    .din92(node_embedding_V_92_q0),
    .din93(node_embedding_V_93_q0),
    .din94(node_embedding_V_94_q0),
    .din95(node_embedding_V_95_q0),
    .din96(node_embedding_V_96_q0),
    .din97(node_embedding_V_97_q0),
    .din98(node_embedding_V_98_q0),
    .din99(node_embedding_V_99_q0),
    .din100(select_ln195_reg_2195_pp1_iter4_reg),
    .dout(msg_V_fu_1923_p102)
);

GIN_compute_one_graph_mac_muladd_15s_8ns_7ns_15_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mac_muladd_15s_8ns_7ns_15_4_1_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2159_p0),
    .din1(grp_fu_2159_p1),
    .din2(grp_fu_2159_p2),
    .ce(1'b1),
    .dout(grp_fu_2159_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if (((1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter4_state8)))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter4_state8))) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dim_reg_1676 <= 7'd0;
    end else if (((icmp_ln195_fu_1718_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dim_reg_1676 <= add_ln199_fu_1779_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        e_reg_1665 <= 6'd0;
    end else if (((icmp_ln195_fu_1718_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        e_reg_1665 <= select_ln195_4_fu_1771_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2107_fu_1693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_reg_1643 <= empty_46_fu_1687_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_1643 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten_reg_1654 <= 12'd0;
    end else if (((icmp_ln195_fu_1718_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_1654 <= add_ln195_1_fu_1704_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln195_reg_2186 <= icmp_ln195_fu_1718_p2;
        icmp_ln195_reg_2186_pp1_iter1_reg <= icmp_ln195_reg_2186;
        icmp_ln199_reg_2190_pp1_iter1_reg <= icmp_ln199_reg_2190;
        select_ln195_reg_2195_pp1_iter1_reg <= select_ln195_reg_2195;
        shl_ln196_mid1_reg_2201_pp1_iter1_reg[6 : 1] <= shl_ln196_mid1_reg_2201[6 : 1];
        shl_ln_reg_2181[6 : 1] <= shl_ln_fu_1710_p3[6 : 1];
        shl_ln_reg_2181_pp1_iter1_reg[6 : 1] <= shl_ln_reg_2181[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln195_reg_2186_pp1_iter2_reg <= icmp_ln195_reg_2186_pp1_iter1_reg;
        icmp_ln195_reg_2186_pp1_iter3_reg <= icmp_ln195_reg_2186_pp1_iter2_reg;
        icmp_ln195_reg_2186_pp1_iter4_reg <= icmp_ln195_reg_2186_pp1_iter3_reg;
        icmp_ln199_reg_2190_pp1_iter2_reg <= icmp_ln199_reg_2190_pp1_iter1_reg;
        icmp_ln199_reg_2190_pp1_iter3_reg <= icmp_ln199_reg_2190_pp1_iter2_reg;
        select_ln195_reg_2195_pp1_iter2_reg <= select_ln195_reg_2195_pp1_iter1_reg;
        select_ln195_reg_2195_pp1_iter3_reg <= select_ln195_reg_2195_pp1_iter2_reg;
        select_ln195_reg_2195_pp1_iter4_reg <= select_ln195_reg_2195_pp1_iter3_reg;
        shl_ln196_mid1_reg_2201_pp1_iter2_reg[6 : 1] <= shl_ln196_mid1_reg_2201_pp1_iter1_reg[6 : 1];
        shl_ln_reg_2181_pp1_iter2_reg[6 : 1] <= shl_ln_reg_2181_pp1_iter1_reg[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln195_fu_1718_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln199_reg_2190 <= icmp_ln199_fu_1730_p2;
        select_ln195_reg_2195 <= select_ln195_fu_1736_p3;
        shl_ln196_mid1_reg_2201[6 : 1] <= shl_ln196_mid1_fu_1744_p3[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln195_reg_2186_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        message_V_addr_1_reg_2741 <= zext_ln703_1_fu_1919_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0))) begin
        ap_condition_pp1_exit_iter4_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter4_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln195_fu_1718_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        if (((icmp_ln199_reg_2190_pp1_iter2_reg == 1'd1) & (icmp_ln195_reg_2186_pp1_iter2_reg == 1'd0))) begin
            edge_list_address0 = zext_ln196_1_fu_1793_p1;
        end else if ((icmp_ln199_reg_2190_pp1_iter2_reg == 1'd0)) begin
            edge_list_address0 = zext_ln196_fu_1789_p1;
        end else begin
            edge_list_address0 = 'bx;
        end
    end else begin
        edge_list_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln199_reg_2190_pp1_iter2_reg == 1'd1) & (icmp_ln195_reg_2186_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln199_reg_2190_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        edge_list_ce0 = 1'b1;
    end else begin
        edge_list_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        edge_list_ce1 = 1'b1;
    end else begin
        edge_list_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        message_V_address1 = message_V_addr_1_reg_2741;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        message_V_address1 = p_cast1_fu_1699_p1;
    end else begin
        message_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        message_V_ce0 = 1'b1;
    end else begin
        message_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        message_V_ce1 = 1'b1;
    end else begin
        message_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        message_V_d1 = add_ln703_fu_2152_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        message_V_d1 = 28'd0;
    end else begin
        message_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond2107_fu_1693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln195_reg_2186_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        message_V_we1 = 1'b1;
    end else begin
        message_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_0_ce0 = 1'b1;
    end else begin
        node_embedding_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_10_ce0 = 1'b1;
    end else begin
        node_embedding_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_11_ce0 = 1'b1;
    end else begin
        node_embedding_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_12_ce0 = 1'b1;
    end else begin
        node_embedding_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_13_ce0 = 1'b1;
    end else begin
        node_embedding_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_14_ce0 = 1'b1;
    end else begin
        node_embedding_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_15_ce0 = 1'b1;
    end else begin
        node_embedding_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_16_ce0 = 1'b1;
    end else begin
        node_embedding_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_17_ce0 = 1'b1;
    end else begin
        node_embedding_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_18_ce0 = 1'b1;
    end else begin
        node_embedding_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_19_ce0 = 1'b1;
    end else begin
        node_embedding_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_1_ce0 = 1'b1;
    end else begin
        node_embedding_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_20_ce0 = 1'b1;
    end else begin
        node_embedding_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_21_ce0 = 1'b1;
    end else begin
        node_embedding_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_22_ce0 = 1'b1;
    end else begin
        node_embedding_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_23_ce0 = 1'b1;
    end else begin
        node_embedding_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_24_ce0 = 1'b1;
    end else begin
        node_embedding_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_25_ce0 = 1'b1;
    end else begin
        node_embedding_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_26_ce0 = 1'b1;
    end else begin
        node_embedding_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_27_ce0 = 1'b1;
    end else begin
        node_embedding_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_28_ce0 = 1'b1;
    end else begin
        node_embedding_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_29_ce0 = 1'b1;
    end else begin
        node_embedding_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_2_ce0 = 1'b1;
    end else begin
        node_embedding_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_30_ce0 = 1'b1;
    end else begin
        node_embedding_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_31_ce0 = 1'b1;
    end else begin
        node_embedding_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_32_ce0 = 1'b1;
    end else begin
        node_embedding_V_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_33_ce0 = 1'b1;
    end else begin
        node_embedding_V_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_34_ce0 = 1'b1;
    end else begin
        node_embedding_V_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_35_ce0 = 1'b1;
    end else begin
        node_embedding_V_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_36_ce0 = 1'b1;
    end else begin
        node_embedding_V_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_37_ce0 = 1'b1;
    end else begin
        node_embedding_V_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_38_ce0 = 1'b1;
    end else begin
        node_embedding_V_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_39_ce0 = 1'b1;
    end else begin
        node_embedding_V_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_3_ce0 = 1'b1;
    end else begin
        node_embedding_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_40_ce0 = 1'b1;
    end else begin
        node_embedding_V_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_41_ce0 = 1'b1;
    end else begin
        node_embedding_V_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_42_ce0 = 1'b1;
    end else begin
        node_embedding_V_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_43_ce0 = 1'b1;
    end else begin
        node_embedding_V_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_44_ce0 = 1'b1;
    end else begin
        node_embedding_V_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_45_ce0 = 1'b1;
    end else begin
        node_embedding_V_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_46_ce0 = 1'b1;
    end else begin
        node_embedding_V_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_47_ce0 = 1'b1;
    end else begin
        node_embedding_V_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_48_ce0 = 1'b1;
    end else begin
        node_embedding_V_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_49_ce0 = 1'b1;
    end else begin
        node_embedding_V_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_4_ce0 = 1'b1;
    end else begin
        node_embedding_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_50_ce0 = 1'b1;
    end else begin
        node_embedding_V_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_51_ce0 = 1'b1;
    end else begin
        node_embedding_V_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_52_ce0 = 1'b1;
    end else begin
        node_embedding_V_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_53_ce0 = 1'b1;
    end else begin
        node_embedding_V_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_54_ce0 = 1'b1;
    end else begin
        node_embedding_V_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_55_ce0 = 1'b1;
    end else begin
        node_embedding_V_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_56_ce0 = 1'b1;
    end else begin
        node_embedding_V_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_57_ce0 = 1'b1;
    end else begin
        node_embedding_V_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_58_ce0 = 1'b1;
    end else begin
        node_embedding_V_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_59_ce0 = 1'b1;
    end else begin
        node_embedding_V_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_5_ce0 = 1'b1;
    end else begin
        node_embedding_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_60_ce0 = 1'b1;
    end else begin
        node_embedding_V_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_61_ce0 = 1'b1;
    end else begin
        node_embedding_V_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_62_ce0 = 1'b1;
    end else begin
        node_embedding_V_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_63_ce0 = 1'b1;
    end else begin
        node_embedding_V_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_64_ce0 = 1'b1;
    end else begin
        node_embedding_V_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_65_ce0 = 1'b1;
    end else begin
        node_embedding_V_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_66_ce0 = 1'b1;
    end else begin
        node_embedding_V_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_67_ce0 = 1'b1;
    end else begin
        node_embedding_V_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_68_ce0 = 1'b1;
    end else begin
        node_embedding_V_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_69_ce0 = 1'b1;
    end else begin
        node_embedding_V_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_6_ce0 = 1'b1;
    end else begin
        node_embedding_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_70_ce0 = 1'b1;
    end else begin
        node_embedding_V_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_71_ce0 = 1'b1;
    end else begin
        node_embedding_V_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_72_ce0 = 1'b1;
    end else begin
        node_embedding_V_72_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_73_ce0 = 1'b1;
    end else begin
        node_embedding_V_73_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_74_ce0 = 1'b1;
    end else begin
        node_embedding_V_74_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_75_ce0 = 1'b1;
    end else begin
        node_embedding_V_75_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_76_ce0 = 1'b1;
    end else begin
        node_embedding_V_76_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_77_ce0 = 1'b1;
    end else begin
        node_embedding_V_77_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_78_ce0 = 1'b1;
    end else begin
        node_embedding_V_78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_79_ce0 = 1'b1;
    end else begin
        node_embedding_V_79_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_7_ce0 = 1'b1;
    end else begin
        node_embedding_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_80_ce0 = 1'b1;
    end else begin
        node_embedding_V_80_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_81_ce0 = 1'b1;
    end else begin
        node_embedding_V_81_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_82_ce0 = 1'b1;
    end else begin
        node_embedding_V_82_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_83_ce0 = 1'b1;
    end else begin
        node_embedding_V_83_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_84_ce0 = 1'b1;
    end else begin
        node_embedding_V_84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_85_ce0 = 1'b1;
    end else begin
        node_embedding_V_85_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_86_ce0 = 1'b1;
    end else begin
        node_embedding_V_86_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_87_ce0 = 1'b1;
    end else begin
        node_embedding_V_87_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_88_ce0 = 1'b1;
    end else begin
        node_embedding_V_88_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_89_ce0 = 1'b1;
    end else begin
        node_embedding_V_89_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_8_ce0 = 1'b1;
    end else begin
        node_embedding_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_90_ce0 = 1'b1;
    end else begin
        node_embedding_V_90_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_91_ce0 = 1'b1;
    end else begin
        node_embedding_V_91_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_92_ce0 = 1'b1;
    end else begin
        node_embedding_V_92_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_93_ce0 = 1'b1;
    end else begin
        node_embedding_V_93_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_94_ce0 = 1'b1;
    end else begin
        node_embedding_V_94_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_95_ce0 = 1'b1;
    end else begin
        node_embedding_V_95_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_96_ce0 = 1'b1;
    end else begin
        node_embedding_V_96_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_97_ce0 = 1'b1;
    end else begin
        node_embedding_V_97_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_98_ce0 = 1'b1;
    end else begin
        node_embedding_V_98_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_99_ce0 = 1'b1;
    end else begin
        node_embedding_V_99_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        node_embedding_V_9_ce0 = 1'b1;
    end else begin
        node_embedding_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond2107_fu_1693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter4 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln195_1_fu_1704_p2 = (indvar_flatten_reg_1654 + 12'd1);

assign add_ln195_fu_1724_p2 = (e_reg_1665 + 6'd1);

assign add_ln199_fu_1779_p2 = (select_ln195_fu_1736_p3 + 7'd1);

assign add_ln703_fu_2152_p2 = (message_V_q0 + zext_ln211_fu_2148_p1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign edge_list_address1 = zext_ln195_fu_1766_p1;

assign empty_46_fu_1687_p2 = (empty_reg_1643 + 11'd1);

assign exitcond2107_fu_1693_p2 = ((empty_reg_1643 == 11'd1900) ? 1'b1 : 1'b0);

assign grp_fu_2159_p0 = edge_list_q1[14:0];

assign grp_fu_2159_p1 = 15'd100;

assign grp_fu_2159_p2 = grp_fu_2159_p20;

assign grp_fu_2159_p20 = select_ln195_reg_2195_pp1_iter2_reg;

assign icmp_ln195_fu_1718_p2 = ((indvar_flatten_reg_1654 == 12'd4000) ? 1'b1 : 1'b0);

assign icmp_ln199_fu_1730_p2 = ((dim_reg_1676 == 7'd100) ? 1'b1 : 1'b0);

assign message_V_address0 = zext_ln703_1_fu_1919_p1;

assign msg_V_1_fu_2140_p3 = ((tmp_fu_2132_p3[0:0] == 1'b1) ? 27'd0 : trunc_ln211_fu_2128_p1);

assign node_embedding_V_0_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_10_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_11_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_12_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_13_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_14_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_15_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_16_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_17_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_18_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_19_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_1_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_20_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_21_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_22_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_23_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_24_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_25_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_26_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_27_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_28_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_29_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_2_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_30_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_31_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_32_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_33_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_34_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_35_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_36_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_37_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_38_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_39_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_3_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_40_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_41_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_42_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_43_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_44_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_45_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_46_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_47_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_48_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_49_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_4_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_50_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_51_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_52_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_53_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_54_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_55_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_56_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_57_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_58_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_59_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_5_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_60_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_61_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_62_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_63_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_64_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_65_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_66_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_67_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_68_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_69_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_6_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_70_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_71_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_72_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_73_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_74_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_75_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_76_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_77_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_78_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_79_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_7_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_80_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_81_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_82_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_83_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_84_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_85_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_86_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_87_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_88_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_89_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_8_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_90_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_91_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_92_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_93_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_94_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_95_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_96_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_97_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_98_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_99_address0 = zext_ln195_1_fu_1815_p1;

assign node_embedding_V_9_address0 = zext_ln195_1_fu_1815_p1;

assign or_ln195_fu_1760_p2 = (select_ln195_1_fu_1752_p3 | 7'd1);

assign p_cast1_fu_1699_p1 = empty_reg_1643;

assign select_ln195_1_fu_1752_p3 = ((icmp_ln199_fu_1730_p2[0:0] == 1'b1) ? shl_ln196_mid1_fu_1744_p3 : shl_ln_fu_1710_p3);

assign select_ln195_3_fu_1808_p3 = ((icmp_ln199_reg_2190_pp1_iter3_reg[0:0] == 1'b1) ? trunc_ln195_fu_1800_p1 : trunc_ln195_1_fu_1804_p1);

assign select_ln195_4_fu_1771_p3 = ((icmp_ln199_fu_1730_p2[0:0] == 1'b1) ? add_ln195_fu_1724_p2 : e_reg_1665);

assign select_ln195_fu_1736_p3 = ((icmp_ln199_fu_1730_p2[0:0] == 1'b1) ? 7'd0 : dim_reg_1676);

assign shl_ln196_mid1_fu_1744_p3 = {{add_ln195_fu_1724_p2}, {1'd0}};

assign shl_ln_fu_1710_p3 = {{e_reg_1665}, {1'd0}};

assign tmp_fu_2132_p3 = msg_V_fu_1923_p102[32'd27];

assign trunc_ln195_1_fu_1804_p1 = edge_list_q0[7:0];

assign trunc_ln195_fu_1800_p1 = edge_list_q0[7:0];

assign trunc_ln211_fu_2128_p1 = msg_V_fu_1923_p102[26:0];

assign zext_ln195_1_fu_1815_p1 = select_ln195_3_fu_1808_p3;

assign zext_ln195_fu_1766_p1 = or_ln195_fu_1760_p2;

assign zext_ln196_1_fu_1793_p1 = shl_ln196_mid1_reg_2201_pp1_iter2_reg;

assign zext_ln196_fu_1789_p1 = shl_ln_reg_2181_pp1_iter2_reg;

assign zext_ln211_fu_2148_p1 = msg_V_1_fu_2140_p3;

assign zext_ln703_1_fu_1919_p1 = $unsigned(grp_fu_2159_p3);

always @ (posedge ap_clk) begin
    shl_ln_reg_2181[0] <= 1'b0;
    shl_ln_reg_2181_pp1_iter1_reg[0] <= 1'b0;
    shl_ln_reg_2181_pp1_iter2_reg[0] <= 1'b0;
    shl_ln196_mid1_reg_2201[0] <= 1'b0;
    shl_ln196_mid1_reg_2201_pp1_iter1_reg[0] <= 1'b0;
    shl_ln196_mid1_reg_2201_pp1_iter2_reg[0] <= 1'b0;
end

endmodule //GIN_compute_one_graph_compute_edge_embedding_and_message_passing
